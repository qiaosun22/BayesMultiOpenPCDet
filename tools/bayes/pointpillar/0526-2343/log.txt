2023-05-26 23:43:47,508   INFO  **********************Start logging**********************
2023-05-26 23:43:47,508   INFO  CUDA_VISIBLE_DEVICES=1
2023-05-26 23:43:47,508   INFO  cfg_file         ./cfgs/kitti_models/pointpillar_bayes.yaml
2023-05-26 23:43:47,508   INFO  batch_size       4
2023-05-26 23:43:47,508   INFO  epochs           80
2023-05-26 23:43:47,508   INFO  workers          32
2023-05-26 23:43:47,508   INFO  extra_tag        default
2023-05-26 23:43:47,508   INFO  ckpt             checkpoint_epoch_80.pth
2023-05-26 23:43:47,508   INFO  pretrained_model None
2023-05-26 23:43:47,509   INFO  launcher         none
2023-05-26 23:43:47,509   INFO  tcp_port         18888
2023-05-26 23:43:47,509   INFO  sync_bn          False
2023-05-26 23:43:47,509   INFO  fix_random_seed  True
2023-05-26 23:43:47,509   INFO  ckpt_save_interval 1
2023-05-26 23:43:47,509   INFO  local_rank       0
2023-05-26 23:43:47,509   INFO  max_ckpt_save_num 30
2023-05-26 23:43:47,509   INFO  merge_all_iters_to_one_epoch False
2023-05-26 23:43:47,509   INFO  set_cfgs         None
2023-05-26 23:43:47,509   INFO  max_waiting_mins 0
2023-05-26 23:43:47,509   INFO  start_epoch      0
2023-05-26 23:43:47,509   INFO  save_to_file     False
2023-05-26 23:43:47,509   INFO  cfg.ROOT_DIR: /mnt/workspace/sunqiao/OpenPCDet
2023-05-26 23:43:47,509   INFO  cfg.LOCAL_RANK: 0
2023-05-26 23:43:47,509   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2023-05-26 23:43:47,509   INFO  ----------- DATA_CONFIG -----------
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2023-05-26 23:43:47,509   INFO  ----------- DATA_SPLIT -----------
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2023-05-26 23:43:47,509   INFO  ----------- INFO_PATH -----------
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2023-05-26 23:43:47,509   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2023-05-26 23:43:47,509   INFO  ----------- DATA_AUGMENTOR -----------
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2023-05-26 23:43:47,510   INFO  ----------- POINT_FEATURE_ENCODING -----------
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2023-05-26 23:43:47,510   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2023-05-26 23:43:47,510   INFO  ----------- MODEL -----------
2023-05-26 23:43:47,510   INFO  cfg.MODEL.NAME: PointPillar
2023-05-26 23:43:47,510   INFO  ----------- VFE -----------
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.USE_NORM: True
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.USE_DO: True
2023-05-26 23:43:47,510   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2023-05-26 23:43:47,510   INFO  ----------- MAP_TO_BEV -----------
2023-05-26 23:43:47,510   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2023-05-26 23:43:47,510   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2023-05-26 23:43:47,510   INFO  ----------- BACKBONE_2D -----------
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.USE_NORM: True
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.USE_DO: True
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2023-05-26 23:43:47,510   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2023-05-26 23:43:47,511   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2023-05-26 23:43:47,511   INFO  ----------- DENSE_HEAD -----------
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2023-05-26 23:43:47,511   INFO  ----------- TARGET_ASSIGNER_CONFIG -----------
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2023-05-26 23:43:47,511   INFO  ----------- LOSS_CONFIG -----------
2023-05-26 23:43:47,511   INFO  ----------- LOSS_WEIGHTS -----------
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2023-05-26 23:43:47,511   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2023-05-26 23:43:47,511   INFO  ----------- POST_PROCESSING -----------
2023-05-26 23:43:47,511   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2023-05-26 23:43:47,511   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2023-05-26 23:43:47,511   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2023-05-26 23:43:47,511   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2023-05-26 23:43:47,511   INFO  ----------- NMS_CONFIG -----------
2023-05-26 23:43:47,511   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2023-05-26 23:43:47,512   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2023-05-26 23:43:47,512   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2023-05-26 23:43:47,512   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2023-05-26 23:43:47,512   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2023-05-26 23:43:47,512   INFO  ----------- OPTIMIZATION -----------
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.LR: 0.003
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2023-05-26 23:43:47,512   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2023-05-26 23:43:47,512   INFO  cfg.TAG: pointpillar_bayes
2023-05-26 23:43:47,512   INFO  cfg.EXP_GROUP_PATH: cfgs/kitti_models
2023-05-26 23:43:47,700   INFO  ----------------Bayes Optimization----------------
2023-05-26 23:43:48,299   INFO  Database filter by min points Car: 14357 => 13532
2023-05-26 23:43:48,300   INFO  Database filter by min points Pedestrian: 2207 => 2168
2023-05-26 23:43:48,300   INFO  Database filter by min points Cyclist: 734 => 705
2023-05-26 23:43:48,395   INFO  Database filter by difficulty Car: 13532 => 10759
2023-05-26 23:43:48,399   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2023-05-26 23:43:48,400   INFO  Database filter by difficulty Cyclist: 705 => 581
2023-05-26 23:43:48,408   INFO  Loading KITTI dataset
2023-05-26 23:43:49,100   INFO  Total samples for KITTI dataset: 3712
2023-05-26 23:43:58,098   INFO  PointPillar(
  (vfe): PillarVFE(
    (pfn_layers): ModuleList(
      (0): PFNLayer(
        (linear): Linear(in_features=10, out_features=64, bias=False)
        (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (do): Dropout(p=0.15, inplace=False)
      )
    )
  )
  (backbone_3d): None
  (map_to_bev_module): PointPillarScatter()
  (pfe): None
  (backbone_2d): BaseBEVBackbone(
    (blocks): ModuleList(
      (0): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): Dropout2d(p=0.15, inplace=False)
        (4): ReLU()
        (5): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (6): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (7): Dropout2d(p=0.15, inplace=False)
        (8): ReLU()
        (9): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): Dropout2d(p=0.15, inplace=False)
        (12): ReLU()
        (13): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): Dropout2d(p=0.15, inplace=False)
        (16): ReLU()
      )
      (1): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): Dropout2d(p=0.15, inplace=False)
        (4): ReLU()
        (5): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (6): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (7): Dropout2d(p=0.15, inplace=False)
        (8): ReLU()
        (9): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): Dropout2d(p=0.15, inplace=False)
        (12): ReLU()
        (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): Dropout2d(p=0.15, inplace=False)
        (16): ReLU()
        (17): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (18): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (19): Dropout2d(p=0.15, inplace=False)
        (20): ReLU()
        (21): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (22): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (23): Dropout2d(p=0.15, inplace=False)
        (24): ReLU()
      )
      (2): Sequential(
        (0): ZeroPad2d((1, 1, 1, 1))
        (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
        (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (3): Dropout2d(p=0.15, inplace=False)
        (4): ReLU()
        (5): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (6): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (7): Dropout2d(p=0.15, inplace=False)
        (8): ReLU()
        (9): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (10): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (11): Dropout2d(p=0.15, inplace=False)
        (12): ReLU()
        (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (15): Dropout2d(p=0.15, inplace=False)
        (16): ReLU()
        (17): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (18): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (19): Dropout2d(p=0.15, inplace=False)
        (20): ReLU()
        (21): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (22): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (23): Dropout2d(p=0.15, inplace=False)
        (24): ReLU()
      )
    )
    (deblocks): ModuleList(
      (0): Sequential(
        (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): Dropout2d(p=0.15, inplace=False)
        (3): ReLU()
      )
      (1): Sequential(
        (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): Dropout2d(p=0.15, inplace=False)
        (3): ReLU()
      )
      (2): Sequential(
        (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
        (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        (2): Dropout2d(p=0.15, inplace=False)
        (3): ReLU()
      )
    )
  )
  (dense_head): AnchorHeadSingle(
    (cls_loss_func): SigmoidFocalClassificationLoss()
    (reg_loss_func): WeightedSmoothL1Loss()
    (dir_loss_func): WeightedCrossEntropyLoss()
    (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
    (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
    (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
  )
  (point_head): None
  (roi_head): None
)
2023-05-26 23:43:58,101   INFO  **********************Start training cfgs/kitti_models/pointpillar_bayes(default)**********************
2023-05-26 23:43:58,108   INFO  Loading KITTI dataset
2023-05-26 23:43:58,906   INFO  Total samples for KITTI dataset: 3769
2023-05-26 23:43:59,194   INFO  ==> Loading parameters from checkpoint ./checkpoint_epoch_80.pth to GPU
2023-05-26 23:44:07,192   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2023-05-26 23:44:08,205   INFO  Not updated weight backbone_2d.blocks.0.5.weight: torch.Size([64, 64, 3, 3])
2023-05-26 23:44:08,205   INFO  Not updated weight backbone_2d.blocks.0.6.weight: torch.Size([64])
2023-05-26 23:44:08,205   INFO  Not updated weight backbone_2d.blocks.0.6.bias: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.6.running_mean: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.6.running_var: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.6.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.9.weight: torch.Size([64, 64, 3, 3])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.10.weight: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.10.bias: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.10.running_mean: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.10.running_var: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.10.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.13.weight: torch.Size([64, 64, 3, 3])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.14.weight: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.14.bias: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.14.running_mean: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.14.running_var: torch.Size([64])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.0.14.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.5.weight: torch.Size([128, 128, 3, 3])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.6.weight: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.6.bias: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.6.running_mean: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.6.running_var: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.6.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.9.weight: torch.Size([128, 128, 3, 3])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.10.weight: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.10.bias: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.10.running_mean: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.10.running_var: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.10.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.17.weight: torch.Size([128, 128, 3, 3])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.18.weight: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.18.bias: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.18.running_mean: torch.Size([128])
2023-05-26 23:44:08,206   INFO  Not updated weight backbone_2d.blocks.1.18.running_var: torch.Size([128])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.18.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.21.weight: torch.Size([128, 128, 3, 3])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.22.weight: torch.Size([128])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.22.bias: torch.Size([128])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.22.running_mean: torch.Size([128])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.22.running_var: torch.Size([128])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.1.22.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.5.weight: torch.Size([256, 256, 3, 3])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.6.weight: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.6.bias: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.6.running_mean: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.6.running_var: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.6.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.9.weight: torch.Size([256, 256, 3, 3])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.10.weight: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.10.bias: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.10.running_mean: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.10.running_var: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.10.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.17.weight: torch.Size([256, 256, 3, 3])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.18.weight: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.18.bias: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.18.running_mean: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.18.running_var: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.18.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.21.weight: torch.Size([256, 256, 3, 3])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.22.weight: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.22.bias: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.22.running_mean: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.22.running_var: torch.Size([256])
2023-05-26 23:44:08,207   INFO  Not updated weight backbone_2d.blocks.2.22.num_batches_tracked: torch.Size([])
2023-05-26 23:44:08,208   INFO  ==> Done (loaded 61/127)
2023-05-26 23:44:08,354   INFO  **********************End training**********************
2023-05-26 23:44:38,391   INFO  ----------------Noise-0.2-evaluate----------------
2023-05-26 23:44:38,392   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/0526-2343/bayes_model-0.15-0.15.pth to GPU
2023-05-26 23:44:38,505   INFO  ==> Checkpoint trained from version: pcdet+0.6.0+02ac3e1
2023-05-26 23:44:39,004   INFO  ==> Done (loaded 127/127)
