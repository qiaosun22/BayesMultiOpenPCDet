2021-06-19 13:25:19,940   INFO  **********************Start logging**********************
2021-06-19 13:25:19,940   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:25:19,940   INFO  total_batch_size: 8
2021-06-19 13:25:19,940   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:25:19,940   INFO  batch_size       4
2021-06-19 13:25:19,940   INFO  epochs           2
2021-06-19 13:25:19,940   INFO  workers          8
2021-06-19 13:25:19,940   INFO  extra_tag        default
2021-06-19 13:25:19,940   INFO  ckpt             None
2021-06-19 13:25:19,940   INFO  pretrained_model None
2021-06-19 13:25:19,940   INFO  launcher         pytorch
2021-06-19 13:25:19,941   INFO  tcp_port         18888
2021-06-19 13:25:19,941   INFO  sync_bn          False
2021-06-19 13:25:19,941   INFO  fix_random_seed  False
2021-06-19 13:25:19,941   INFO  ckpt_save_interval 1
2021-06-19 13:25:19,941   INFO  local_rank       0
2021-06-19 13:25:19,941   INFO  max_ckpt_save_num 30
2021-06-19 13:25:19,941   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:25:19,941   INFO  set_cfgs         None
2021-06-19 13:25:19,941   INFO  max_waiting_mins 0
2021-06-19 13:25:19,941   INFO  start_epoch      0
2021-06-19 13:25:19,941   INFO  save_to_file     False
2021-06-19 13:25:19,941   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:25:19,941   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:25:19,942   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:25:19,942   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:25:19,942   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:25:19,942   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:25:19,942   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:25:19,943   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:25:19,943   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:25:19,943   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:25:19,943   INFO  
cfg.MODEL = edict()
2021-06-19 13:25:19,943   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:25:19,943   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:25:19,943   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:25:19,944   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:25:19,944   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:25:19,944   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:25:19,944   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:25:19,944   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:25:19,944   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:25:19,944   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:25:19,944   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:25:19,944   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:25:19,945   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:25:19,945   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:25:19,945   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:25:19,946   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:25:19,946   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:25:19,946   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:25:19,946   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:25:19,946   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:25:19,947   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:25:19,947   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:25:19,947   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:25:19,947   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:25:19,948   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:25:19,949   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:25:19,949   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:25:19,949   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:25:19,949   INFO  cfg.TAG: pointpillar
2021-06-19 13:25:19,949   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:25:20,380   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:25:20,381   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:25:20,382   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:25:20,436   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:25:20,445   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:25:20,448   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:25:20,463   INFO  Loading KITTI dataset
2021-06-19 13:25:20,676   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:25:20,678   INFO  Loading KITTI dataset
2021-06-19 13:25:20,876   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:25:20,877   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:28:00,542   INFO  **********************Start logging**********************
2021-06-19 13:28:00,542   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:28:00,543   INFO  total_batch_size: 8
2021-06-19 13:28:00,543   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:28:00,543   INFO  batch_size       4
2021-06-19 13:28:00,543   INFO  epochs           2
2021-06-19 13:28:00,543   INFO  workers          8
2021-06-19 13:28:00,543   INFO  extra_tag        default
2021-06-19 13:28:00,543   INFO  ckpt             None
2021-06-19 13:28:00,543   INFO  pretrained_model None
2021-06-19 13:28:00,543   INFO  launcher         pytorch
2021-06-19 13:28:00,543   INFO  tcp_port         18888
2021-06-19 13:28:00,543   INFO  sync_bn          False
2021-06-19 13:28:00,543   INFO  fix_random_seed  False
2021-06-19 13:28:00,543   INFO  ckpt_save_interval 1
2021-06-19 13:28:00,543   INFO  local_rank       0
2021-06-19 13:28:00,543   INFO  max_ckpt_save_num 30
2021-06-19 13:28:00,544   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:28:00,544   INFO  set_cfgs         None
2021-06-19 13:28:00,544   INFO  max_waiting_mins 0
2021-06-19 13:28:00,544   INFO  start_epoch      0
2021-06-19 13:28:00,544   INFO  save_to_file     False
2021-06-19 13:28:00,544   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:28:00,544   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:28:00,544   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:28:00,544   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:28:00,544   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:28:00,544   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:28:00,544   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:28:00,544   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:28:00,544   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:28:00,544   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:28:00,544   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:28:00,545   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:28:00,545   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:28:00,545   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:28:00,545   INFO  
cfg.MODEL = edict()
2021-06-19 13:28:00,545   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:28:00,546   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:28:00,546   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:28:00,546   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:28:00,546   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:28:00,546   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:28:00,546   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:28:00,546   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:28:00,546   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:28:00,546   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:28:00,546   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:28:00,546   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:28:00,546   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:28:00,546   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:28:00,546   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:28:00,547   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:28:00,547   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:28:00,547   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:28:00,547   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:28:00,547   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:28:00,548   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:28:00,548   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:28:00,548   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:28:00,548   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:28:00,548   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:28:00,549   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:28:00,549   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:28:00,549   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:28:00,549   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:28:00,549   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:28:00,549   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:28:00,550   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:28:00,550   INFO  cfg.TAG: pointpillar
2021-06-19 13:28:00,551   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:28:01,088   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:28:01,089   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:28:01,090   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:28:01,136   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:28:01,143   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:28:01,145   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:28:01,156   INFO  Loading KITTI dataset
2021-06-19 13:28:01,316   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:28:01,318   INFO  Loading KITTI dataset
2021-06-19 13:28:01,493   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:28:01,494   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:28:01,576   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:32:21,154   INFO  **********************Start logging**********************
2021-06-19 13:32:21,154   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:32:21,154   INFO  total_batch_size: 8
2021-06-19 13:32:21,154   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:32:21,154   INFO  batch_size       4
2021-06-19 13:32:21,154   INFO  epochs           2
2021-06-19 13:32:21,155   INFO  workers          8
2021-06-19 13:32:21,155   INFO  extra_tag        default
2021-06-19 13:32:21,155   INFO  ckpt             None
2021-06-19 13:32:21,155   INFO  pretrained_model None
2021-06-19 13:32:21,155   INFO  launcher         pytorch
2021-06-19 13:32:21,155   INFO  tcp_port         18888
2021-06-19 13:32:21,155   INFO  sync_bn          False
2021-06-19 13:32:21,155   INFO  fix_random_seed  False
2021-06-19 13:32:21,155   INFO  ckpt_save_interval 1
2021-06-19 13:32:21,155   INFO  local_rank       0
2021-06-19 13:32:21,155   INFO  max_ckpt_save_num 30
2021-06-19 13:32:21,155   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:32:21,156   INFO  set_cfgs         None
2021-06-19 13:32:21,156   INFO  max_waiting_mins 0
2021-06-19 13:32:21,156   INFO  start_epoch      0
2021-06-19 13:32:21,156   INFO  save_to_file     False
2021-06-19 13:32:21,156   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:32:21,156   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:32:21,156   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:32:21,156   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:32:21,156   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:32:21,156   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:32:21,157   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:32:21,157   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:32:21,157   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:32:21,157   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:32:21,158   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:32:21,158   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:32:21,158   INFO  
cfg.MODEL = edict()
2021-06-19 13:32:21,158   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:32:21,159   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:32:21,159   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:32:21,159   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:32:21,159   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:32:21,159   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:32:21,159   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:32:21,159   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:32:21,159   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:32:21,159   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:32:21,159   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:32:21,159   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:32:21,160   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:32:21,160   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:32:21,160   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:32:21,160   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:32:21,160   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:32:21,160   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:32:21,160   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:32:21,160   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:32:21,160   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:32:21,160   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:32:21,160   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:32:21,161   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:32:21,161   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:32:21,161   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:32:21,162   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:32:21,162   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:32:21,162   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:32:21,162   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:32:21,162   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:32:21,162   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:32:21,162   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:32:21,162   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:32:21,162   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:32:21,162   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:32:21,162   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:32:21,163   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:32:21,163   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:32:21,163   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:32:21,163   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:32:21,163   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:32:21,163   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:32:21,163   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:32:21,163   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:32:21,163   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:32:21,163   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:32:21,163   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:32:21,164   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:32:21,165   INFO  cfg.TAG: pointpillar
2021-06-19 13:32:21,165   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:32:21,710   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:32:21,711   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:32:21,712   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:32:21,765   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:32:21,773   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:32:21,776   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:32:21,791   INFO  Loading KITTI dataset
2021-06-19 13:32:21,989   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:32:21,992   INFO  Loading KITTI dataset
2021-06-19 13:32:22,167   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:32:22,168   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:32:22,249   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:32:22,251   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:39:42,244   INFO  **********************End training**********************
2021-06-19 13:39:42,247   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 13:45:11,647   INFO  **********************Start logging**********************
2021-06-19 13:45:11,647   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:45:11,647   INFO  total_batch_size: 8
2021-06-19 13:45:11,647   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:45:11,647   INFO  batch_size       4
2021-06-19 13:45:11,647   INFO  epochs           2
2021-06-19 13:45:11,647   INFO  workers          8
2021-06-19 13:45:11,647   INFO  extra_tag        default
2021-06-19 13:45:11,647   INFO  ckpt             None
2021-06-19 13:45:11,647   INFO  pretrained_model None
2021-06-19 13:45:11,647   INFO  launcher         pytorch
2021-06-19 13:45:11,648   INFO  tcp_port         18888
2021-06-19 13:45:11,648   INFO  sync_bn          False
2021-06-19 13:45:11,648   INFO  fix_random_seed  False
2021-06-19 13:45:11,648   INFO  ckpt_save_interval 1
2021-06-19 13:45:11,648   INFO  local_rank       0
2021-06-19 13:45:11,648   INFO  max_ckpt_save_num 30
2021-06-19 13:45:11,648   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:45:11,648   INFO  set_cfgs         None
2021-06-19 13:45:11,648   INFO  max_waiting_mins 0
2021-06-19 13:45:11,648   INFO  start_epoch      0
2021-06-19 13:45:11,648   INFO  save_to_file     False
2021-06-19 13:45:11,648   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:45:11,648   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:45:11,648   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:45:11,648   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:45:11,649   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:45:11,649   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:45:11,649   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:45:11,649   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:45:11,650   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:45:11,650   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:45:11,650   INFO  
cfg.MODEL = edict()
2021-06-19 13:45:11,650   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:45:11,650   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:45:11,650   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:45:11,650   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:45:11,650   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:45:11,651   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:45:11,651   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:45:11,651   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:45:11,651   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:45:11,651   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:45:11,651   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:45:11,651   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:45:11,652   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:45:11,652   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:45:11,652   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:45:11,653   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:45:11,653   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:45:11,653   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:45:11,653   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:45:11,653   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:45:11,653   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:45:11,653   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:45:11,654   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:45:11,654   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:45:11,654   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:45:11,654   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:45:11,654   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:45:11,654   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:45:11,654   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:45:11,654   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:45:11,655   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:45:11,655   INFO  cfg.TAG: pointpillar
2021-06-19 13:45:11,655   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:45:12,102   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:45:12,103   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:45:12,103   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:45:12,146   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:45:12,153   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:45:12,156   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:45:12,167   INFO  Loading KITTI dataset
2021-06-19 13:45:12,341   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:45:12,344   INFO  Loading KITTI dataset
2021-06-19 13:45:12,519   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:45:12,520   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:45:12,604   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:45:12,606   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:45:12,997   INFO  **********************End training**********************
2021-06-19 13:45:12,999   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 13:50:38,153   INFO  **********************Start logging**********************
2021-06-19 13:50:38,153   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:50:38,153   INFO  total_batch_size: 8
2021-06-19 13:50:38,154   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:50:38,154   INFO  batch_size       4
2021-06-19 13:50:38,154   INFO  epochs           2
2021-06-19 13:50:38,154   INFO  workers          8
2021-06-19 13:50:38,154   INFO  extra_tag        default
2021-06-19 13:50:38,154   INFO  ckpt             None
2021-06-19 13:50:38,154   INFO  pretrained_model None
2021-06-19 13:50:38,154   INFO  launcher         pytorch
2021-06-19 13:50:38,154   INFO  tcp_port         18888
2021-06-19 13:50:38,154   INFO  sync_bn          False
2021-06-19 13:50:38,154   INFO  fix_random_seed  False
2021-06-19 13:50:38,154   INFO  ckpt_save_interval 1
2021-06-19 13:50:38,154   INFO  local_rank       0
2021-06-19 13:50:38,154   INFO  max_ckpt_save_num 30
2021-06-19 13:50:38,154   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:50:38,154   INFO  set_cfgs         None
2021-06-19 13:50:38,155   INFO  max_waiting_mins 0
2021-06-19 13:50:38,155   INFO  start_epoch      0
2021-06-19 13:50:38,155   INFO  save_to_file     False
2021-06-19 13:50:38,155   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:50:38,155   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:50:38,155   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:50:38,155   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:50:38,155   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:50:38,155   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:50:38,155   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:50:38,156   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:50:38,156   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:50:38,156   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:50:38,156   INFO  
cfg.MODEL = edict()
2021-06-19 13:50:38,156   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:50:38,156   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:50:38,156   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:50:38,156   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:50:38,157   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:50:38,157   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:50:38,157   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:50:38,157   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:50:38,157   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:50:38,157   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:50:38,157   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:50:38,157   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:50:38,157   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:50:38,157   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:50:38,157   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:50:38,158   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:50:38,158   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:50:38,158   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:50:38,158   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:50:38,159   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:50:38,159   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:50:38,159   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:50:38,159   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:50:38,159   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:50:38,159   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:50:38,159   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:50:38,159   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:50:38,159   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:50:38,160   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:50:38,160   INFO  cfg.TAG: pointpillar
2021-06-19 13:50:38,160   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:50:38,656   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:50:38,657   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:50:38,657   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:50:38,699   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:50:38,706   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:50:38,709   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:50:38,729   INFO  Loading KITTI dataset
2021-06-19 13:50:38,915   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:50:38,919   INFO  Loading KITTI dataset
2021-06-19 13:50:39,120   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:50:39,121   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:50:39,204   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:50:39,206   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:51:42,823   INFO  **********************Start logging**********************
2021-06-19 13:51:42,823   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:51:42,823   INFO  total_batch_size: 8
2021-06-19 13:51:42,823   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:51:42,823   INFO  batch_size       4
2021-06-19 13:51:42,823   INFO  epochs           2
2021-06-19 13:51:42,823   INFO  workers          8
2021-06-19 13:51:42,823   INFO  extra_tag        default
2021-06-19 13:51:42,823   INFO  ckpt             None
2021-06-19 13:51:42,823   INFO  pretrained_model None
2021-06-19 13:51:42,823   INFO  launcher         pytorch
2021-06-19 13:51:42,824   INFO  tcp_port         18888
2021-06-19 13:51:42,824   INFO  sync_bn          False
2021-06-19 13:51:42,824   INFO  fix_random_seed  False
2021-06-19 13:51:42,824   INFO  ckpt_save_interval 1
2021-06-19 13:51:42,824   INFO  local_rank       0
2021-06-19 13:51:42,824   INFO  max_ckpt_save_num 30
2021-06-19 13:51:42,824   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:51:42,824   INFO  set_cfgs         None
2021-06-19 13:51:42,824   INFO  max_waiting_mins 0
2021-06-19 13:51:42,824   INFO  start_epoch      0
2021-06-19 13:51:42,824   INFO  save_to_file     False
2021-06-19 13:51:42,824   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:51:42,824   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:51:42,825   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:51:42,825   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:51:42,825   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:51:42,825   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:51:42,825   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:51:42,825   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:51:42,826   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:51:42,826   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:51:42,826   INFO  
cfg.MODEL = edict()
2021-06-19 13:51:42,826   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:51:42,826   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:51:42,826   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:51:42,827   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:51:42,827   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:51:42,827   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:51:42,827   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:51:42,827   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:51:42,827   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:51:42,827   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:51:42,827   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:51:42,827   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:51:42,828   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:51:42,828   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:51:42,828   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:51:42,829   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:51:42,829   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:51:42,829   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:51:42,829   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:51:42,829   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:51:42,829   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:51:42,829   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:51:42,829   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:51:42,830   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:51:42,830   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:51:42,830   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:51:42,830   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:51:42,830   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:51:42,830   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:51:42,830   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:51:42,830   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:51:42,831   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:51:42,831   INFO  cfg.TAG: pointpillar
2021-06-19 13:51:42,831   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:51:43,276   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:51:43,277   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:51:43,277   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:51:43,319   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:51:43,326   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:51:43,328   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:51:43,341   INFO  Loading KITTI dataset
2021-06-19 13:51:43,536   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:51:43,539   INFO  Loading KITTI dataset
2021-06-19 13:51:43,710   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:51:43,711   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:51:43,792   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:51:43,794   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:52:07,405   INFO  **********************Start logging**********************
2021-06-19 13:52:07,406   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:52:07,406   INFO  total_batch_size: 8
2021-06-19 13:52:07,406   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:52:07,406   INFO  batch_size       4
2021-06-19 13:52:07,406   INFO  epochs           2
2021-06-19 13:52:07,406   INFO  workers          8
2021-06-19 13:52:07,406   INFO  extra_tag        default
2021-06-19 13:52:07,406   INFO  ckpt             None
2021-06-19 13:52:07,406   INFO  pretrained_model None
2021-06-19 13:52:07,406   INFO  launcher         pytorch
2021-06-19 13:52:07,406   INFO  tcp_port         18888
2021-06-19 13:52:07,406   INFO  sync_bn          False
2021-06-19 13:52:07,406   INFO  fix_random_seed  False
2021-06-19 13:52:07,407   INFO  ckpt_save_interval 1
2021-06-19 13:52:07,407   INFO  local_rank       0
2021-06-19 13:52:07,407   INFO  max_ckpt_save_num 30
2021-06-19 13:52:07,407   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:52:07,407   INFO  set_cfgs         None
2021-06-19 13:52:07,407   INFO  max_waiting_mins 0
2021-06-19 13:52:07,407   INFO  start_epoch      0
2021-06-19 13:52:07,407   INFO  save_to_file     False
2021-06-19 13:52:07,407   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:52:07,407   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:52:07,407   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:52:07,407   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:52:07,407   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:52:07,408   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:52:07,408   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:52:07,408   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:52:07,408   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:52:07,409   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:52:07,409   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:52:07,409   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:52:07,409   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:52:07,409   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:52:07,409   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:52:07,409   INFO  
cfg.MODEL = edict()
2021-06-19 13:52:07,409   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:52:07,409   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:52:07,409   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:52:07,409   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:52:07,409   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:52:07,410   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:52:07,410   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:52:07,410   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:52:07,410   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:52:07,410   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:52:07,410   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:52:07,410   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:52:07,410   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:52:07,411   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:52:07,411   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:52:07,412   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:52:07,412   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:52:07,412   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:52:07,412   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:52:07,412   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:52:07,412   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:52:07,412   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:52:07,412   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:52:07,412   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:52:07,412   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:52:07,412   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:52:07,412   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:52:07,412   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:52:07,413   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:52:07,413   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:52:07,413   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:52:07,413   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:52:07,413   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:52:07,413   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:52:07,413   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:52:07,414   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:52:07,414   INFO  cfg.TAG: pointpillar
2021-06-19 13:52:07,414   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:52:07,857   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:52:07,858   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:52:07,859   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:52:07,899   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:52:07,906   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:52:07,908   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:52:07,919   INFO  Loading KITTI dataset
2021-06-19 13:52:08,070   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:52:08,073   INFO  Loading KITTI dataset
2021-06-19 13:52:08,234   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:52:08,235   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:52:08,314   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:52:08,316   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:52:08,661   INFO  **********************End training**********************
2021-06-19 13:52:08,663   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 13:52:08,663   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 13:52:08,685   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 13:52:08,874   INFO  ==> Done (loaded 127/127)
2021-06-19 13:52:32,147   INFO  **********************Start logging**********************
2021-06-19 13:52:32,147   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 13:52:32,148   INFO  total_batch_size: 8
2021-06-19 13:52:32,148   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 13:52:32,148   INFO  batch_size       4
2021-06-19 13:52:32,148   INFO  epochs           2
2021-06-19 13:52:32,148   INFO  workers          8
2021-06-19 13:52:32,148   INFO  extra_tag        default
2021-06-19 13:52:32,148   INFO  ckpt             None
2021-06-19 13:52:32,148   INFO  pretrained_model None
2021-06-19 13:52:32,148   INFO  launcher         pytorch
2021-06-19 13:52:32,148   INFO  tcp_port         18888
2021-06-19 13:52:32,148   INFO  sync_bn          False
2021-06-19 13:52:32,148   INFO  fix_random_seed  False
2021-06-19 13:52:32,148   INFO  ckpt_save_interval 1
2021-06-19 13:52:32,148   INFO  local_rank       0
2021-06-19 13:52:32,148   INFO  max_ckpt_save_num 30
2021-06-19 13:52:32,148   INFO  merge_all_iters_to_one_epoch False
2021-06-19 13:52:32,149   INFO  set_cfgs         None
2021-06-19 13:52:32,149   INFO  max_waiting_mins 0
2021-06-19 13:52:32,149   INFO  start_epoch      0
2021-06-19 13:52:32,149   INFO  save_to_file     False
2021-06-19 13:52:32,149   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 13:52:32,149   INFO  cfg.LOCAL_RANK: 0
2021-06-19 13:52:32,149   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 13:52:32,149   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 13:52:32,149   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 13:52:32,149   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 13:52:32,149   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 13:52:32,149   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 13:52:32,149   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 13:52:32,149   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 13:52:32,150   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 13:52:32,150   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 13:52:32,150   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 13:52:32,150   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 13:52:32,151   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 13:52:32,151   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:52:32,151   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 13:52:32,151   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 13:52:32,151   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 13:52:32,151   INFO  
cfg.MODEL = edict()
2021-06-19 13:52:32,151   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 13:52:32,151   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 13:52:32,151   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 13:52:32,151   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 13:52:32,151   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 13:52:32,152   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 13:52:32,152   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 13:52:32,152   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 13:52:32,152   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 13:52:32,152   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 13:52:32,152   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 13:52:32,152   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 13:52:32,152   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 13:52:32,152   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 13:52:32,152   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 13:52:32,152   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 13:52:32,153   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 13:52:32,153   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 13:52:32,153   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 13:52:32,154   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 13:52:32,154   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 13:52:32,154   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 13:52:32,155   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 13:52:32,155   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 13:52:32,155   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 13:52:32,155   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 13:52:32,155   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 13:52:32,155   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 13:52:32,156   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 13:52:32,156   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 13:52:32,156   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 13:52:32,156   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 13:52:32,156   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 13:52:32,157   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 13:52:32,158   INFO  cfg.TAG: pointpillar
2021-06-19 13:52:32,158   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 13:52:32,671   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 13:52:32,672   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 13:52:32,672   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 13:52:32,720   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 13:52:32,727   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 13:52:32,729   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 13:52:32,739   INFO  Loading KITTI dataset
2021-06-19 13:52:32,897   INFO  Total samples for KITTI dataset: 3712
2021-06-19 13:52:32,899   INFO  Loading KITTI dataset
2021-06-19 13:52:33,084   INFO  Total samples for KITTI dataset: 3769
2021-06-19 13:52:33,085   INFO  ----------------Bayes Optimization----------------
2021-06-19 13:52:33,168   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 13:52:33,169   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 13:59:39,805   INFO  **********************End training**********************
2021-06-19 13:59:39,806   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 13:59:39,807   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 13:59:39,857   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 13:59:40,045   INFO  ==> Done (loaded 127/127)
2021-06-19 14:13:24,503   INFO  **********************Start logging**********************
2021-06-19 14:13:24,503   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 14:13:24,503   INFO  total_batch_size: 8
2021-06-19 14:13:24,503   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 14:13:24,503   INFO  batch_size       4
2021-06-19 14:13:24,503   INFO  epochs           2
2021-06-19 14:13:24,503   INFO  workers          8
2021-06-19 14:13:24,503   INFO  extra_tag        default
2021-06-19 14:13:24,503   INFO  ckpt             None
2021-06-19 14:13:24,503   INFO  pretrained_model None
2021-06-19 14:13:24,503   INFO  launcher         pytorch
2021-06-19 14:13:24,503   INFO  tcp_port         18888
2021-06-19 14:13:24,504   INFO  sync_bn          False
2021-06-19 14:13:24,504   INFO  fix_random_seed  False
2021-06-19 14:13:24,504   INFO  ckpt_save_interval 1
2021-06-19 14:13:24,504   INFO  local_rank       0
2021-06-19 14:13:24,504   INFO  max_ckpt_save_num 30
2021-06-19 14:13:24,504   INFO  merge_all_iters_to_one_epoch False
2021-06-19 14:13:24,504   INFO  set_cfgs         None
2021-06-19 14:13:24,504   INFO  max_waiting_mins 0
2021-06-19 14:13:24,504   INFO  start_epoch      0
2021-06-19 14:13:24,504   INFO  save_to_file     False
2021-06-19 14:13:24,504   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 14:13:24,504   INFO  cfg.LOCAL_RANK: 0
2021-06-19 14:13:24,504   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 14:13:24,504   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 14:13:24,504   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 14:13:24,504   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 14:13:24,505   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 14:13:24,505   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 14:13:24,505   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 14:13:24,505   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 14:13:24,505   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:13:24,506   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:13:24,506   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 14:13:24,506   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 14:13:24,506   INFO  
cfg.MODEL = edict()
2021-06-19 14:13:24,506   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 14:13:24,506   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 14:13:24,506   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 14:13:24,506   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 14:13:24,506   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 14:13:24,506   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 14:13:24,506   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 14:13:24,506   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 14:13:24,506   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 14:13:24,506   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 14:13:24,506   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 14:13:24,506   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 14:13:24,507   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 14:13:24,507   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 14:13:24,507   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 14:13:24,507   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 14:13:24,507   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 14:13:24,507   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 14:13:24,507   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 14:13:24,507   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 14:13:24,508   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 14:13:24,508   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 14:13:24,508   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 14:13:24,508   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 14:13:24,508   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 14:13:24,508   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 14:13:24,508   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 14:13:24,508   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 14:13:24,508   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 14:13:24,509   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 14:13:24,509   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 14:13:24,509   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 14:13:24,509   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 14:13:24,509   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 14:13:24,509   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 14:13:24,509   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 14:13:24,510   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 14:13:24,510   INFO  cfg.TAG: pointpillar
2021-06-19 14:13:24,510   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 14:13:24,985   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 14:13:24,986   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 14:13:24,986   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 14:13:25,028   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 14:13:25,035   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 14:13:25,037   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 14:13:25,048   INFO  Loading KITTI dataset
2021-06-19 14:13:25,222   INFO  Total samples for KITTI dataset: 3712
2021-06-19 14:13:25,225   INFO  Loading KITTI dataset
2021-06-19 14:13:25,405   INFO  Total samples for KITTI dataset: 3769
2021-06-19 14:13:25,406   INFO  ----------------Bayes Optimization----------------
2021-06-19 14:13:25,508   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 14:13:25,510   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 14:13:25,727   INFO  **********************End training**********************
2021-06-19 14:13:25,727   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 14:13:25,728   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 14:13:25,750   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 14:13:25,898   INFO  ==> Done (loaded 127/127)
2021-06-19 14:13:57,004   INFO  **********************Start logging**********************
2021-06-19 14:13:57,005   INFO  CUDA_VISIBLE_DEVICES=3,1
2021-06-19 14:13:57,005   INFO  total_batch_size: 8
2021-06-19 14:13:57,005   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 14:13:57,005   INFO  batch_size       4
2021-06-19 14:13:57,005   INFO  epochs           1
2021-06-19 14:13:57,005   INFO  workers          8
2021-06-19 14:13:57,005   INFO  extra_tag        default
2021-06-19 14:13:57,005   INFO  ckpt             None
2021-06-19 14:13:57,005   INFO  pretrained_model None
2021-06-19 14:13:57,005   INFO  launcher         pytorch
2021-06-19 14:13:57,005   INFO  tcp_port         18888
2021-06-19 14:13:57,006   INFO  sync_bn          False
2021-06-19 14:13:57,006   INFO  fix_random_seed  False
2021-06-19 14:13:57,006   INFO  ckpt_save_interval 1
2021-06-19 14:13:57,006   INFO  local_rank       0
2021-06-19 14:13:57,006   INFO  max_ckpt_save_num 30
2021-06-19 14:13:57,006   INFO  merge_all_iters_to_one_epoch False
2021-06-19 14:13:57,006   INFO  set_cfgs         None
2021-06-19 14:13:57,006   INFO  max_waiting_mins 0
2021-06-19 14:13:57,006   INFO  start_epoch      0
2021-06-19 14:13:57,006   INFO  save_to_file     False
2021-06-19 14:13:57,006   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 14:13:57,006   INFO  cfg.LOCAL_RANK: 0
2021-06-19 14:13:57,006   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 14:13:57,007   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 14:13:57,007   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 14:13:57,007   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 14:13:57,007   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 14:13:57,007   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 14:13:57,008   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 14:13:57,008   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 14:13:57,008   INFO  
cfg.MODEL = edict()
2021-06-19 14:13:57,008   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 14:13:57,008   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 14:13:57,008   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 14:13:57,008   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 14:13:57,009   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 14:13:57,009   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 14:13:57,009   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 14:13:57,009   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 14:13:57,009   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 14:13:57,009   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 14:13:57,009   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 14:13:57,009   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 14:13:57,010   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 14:13:57,010   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 14:13:57,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 14:13:57,011   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 14:13:57,011   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 14:13:57,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 14:13:57,011   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 14:13:57,011   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 14:13:57,011   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 14:13:57,011   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 14:13:57,011   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 14:13:57,011   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 14:13:57,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 14:13:57,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 14:13:57,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 14:13:57,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 14:13:57,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 14:13:57,012   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 14:13:57,012   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 14:13:57,013   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 14:13:57,013   INFO  cfg.TAG: pointpillar
2021-06-19 14:13:57,013   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 14:13:57,519   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 14:13:57,520   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 14:13:57,521   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 14:13:57,579   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 14:13:57,588   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 14:13:57,591   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 14:13:57,604   INFO  Loading KITTI dataset
2021-06-19 14:13:57,803   INFO  Total samples for KITTI dataset: 3712
2021-06-19 14:13:57,806   INFO  Loading KITTI dataset
2021-06-19 14:13:58,016   INFO  Total samples for KITTI dataset: 3769
2021-06-19 14:13:58,017   INFO  ----------------Bayes Optimization----------------
2021-06-19 14:13:58,113   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 14:13:58,115   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 14:18:11,583   INFO  **********************End training**********************
2021-06-19 14:18:11,686   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 14:18:11,686   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 14:18:11,817   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 14:18:12,007   INFO  ==> Done (loaded 127/127)
2021-06-19 14:40:09,006   INFO  **********************Start logging**********************
2021-06-19 14:40:09,006   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-19 14:40:09,006   INFO  total_batch_size: 8
2021-06-19 14:40:09,006   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 14:40:09,006   INFO  batch_size       4
2021-06-19 14:40:09,006   INFO  epochs           1
2021-06-19 14:40:09,006   INFO  workers          8
2021-06-19 14:40:09,006   INFO  extra_tag        default
2021-06-19 14:40:09,006   INFO  ckpt             None
2021-06-19 14:40:09,006   INFO  pretrained_model None
2021-06-19 14:40:09,006   INFO  launcher         pytorch
2021-06-19 14:40:09,007   INFO  tcp_port         18888
2021-06-19 14:40:09,007   INFO  sync_bn          False
2021-06-19 14:40:09,007   INFO  fix_random_seed  False
2021-06-19 14:40:09,007   INFO  ckpt_save_interval 1
2021-06-19 14:40:09,007   INFO  local_rank       0
2021-06-19 14:40:09,007   INFO  max_ckpt_save_num 30
2021-06-19 14:40:09,007   INFO  merge_all_iters_to_one_epoch False
2021-06-19 14:40:09,007   INFO  set_cfgs         None
2021-06-19 14:40:09,007   INFO  max_waiting_mins 0
2021-06-19 14:40:09,007   INFO  start_epoch      0
2021-06-19 14:40:09,007   INFO  save_to_file     False
2021-06-19 14:40:09,007   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 14:40:09,007   INFO  cfg.LOCAL_RANK: 0
2021-06-19 14:40:09,007   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 14:40:09,007   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 14:40:09,008   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 14:40:09,008   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 14:40:09,008   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 14:40:09,008   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 14:40:09,008   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 14:40:09,009   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:40:09,009   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:40:09,009   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 14:40:09,009   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 14:40:09,009   INFO  
cfg.MODEL = edict()
2021-06-19 14:40:09,009   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 14:40:09,009   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 14:40:09,009   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 14:40:09,009   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 14:40:09,009   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 14:40:09,009   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 14:40:09,009   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 14:40:09,009   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 14:40:09,009   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 14:40:09,009   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 14:40:09,010   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 14:40:09,010   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 14:40:09,010   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 14:40:09,010   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 14:40:09,010   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 14:40:09,011   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 14:40:09,011   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 14:40:09,011   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 14:40:09,011   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 14:40:09,011   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 14:40:09,011   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 14:40:09,011   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 14:40:09,012   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 14:40:09,012   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 14:40:09,012   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 14:40:09,012   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 14:40:09,013   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 14:40:09,013   INFO  cfg.TAG: pointpillar
2021-06-19 14:40:09,013   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 14:40:09,532   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 14:40:09,533   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 14:40:09,533   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 14:40:09,573   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 14:40:09,580   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 14:40:09,582   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 14:40:09,592   INFO  Loading KITTI dataset
2021-06-19 14:40:09,752   INFO  Total samples for KITTI dataset: 3712
2021-06-19 14:40:09,754   INFO  ----------------Bayes Optimization----------------
2021-06-19 14:40:09,831   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 14:40:09,833   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 14:44:03,380   INFO  **********************End training**********************
2021-06-19 14:44:03,386   INFO  Loading KITTI dataset
2021-06-19 14:44:03,632   INFO  Total samples for KITTI dataset: 3769
2021-06-19 14:44:03,633   INFO  ----------------Noise-0.5-evaluate----------------
2021-06-19 14:44:03,633   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 14:44:03,694   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 14:44:03,838   INFO  ==> Done (loaded 127/127)
2021-06-19 14:45:21,078   INFO  Generate label finished(sec_per_example: 0.0205 second).
2021-06-19 14:45:21,079   INFO  recall_roi_0.3: 0.000000
2021-06-19 14:45:21,079   INFO  recall_rcnn_0.3: 0.000000
2021-06-19 14:45:21,079   INFO  recall_roi_0.5: 0.000000
2021-06-19 14:45:21,079   INFO  recall_rcnn_0.5: 0.000000
2021-06-19 14:45:21,079   INFO  recall_roi_0.7: 0.000000
2021-06-19 14:45:21,079   INFO  recall_rcnn_0.7: 0.000000
2021-06-19 14:45:21,083   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-19 14:52:00,067   INFO  **********************Start logging**********************
2021-06-19 14:52:00,068   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-19 14:52:00,068   INFO  total_batch_size: 8
2021-06-19 14:52:00,068   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 14:52:00,068   INFO  batch_size       4
2021-06-19 14:52:00,068   INFO  epochs           1
2021-06-19 14:52:00,068   INFO  workers          8
2021-06-19 14:52:00,068   INFO  extra_tag        default
2021-06-19 14:52:00,069   INFO  ckpt             None
2021-06-19 14:52:00,069   INFO  pretrained_model None
2021-06-19 14:52:00,069   INFO  launcher         pytorch
2021-06-19 14:52:00,069   INFO  tcp_port         18888
2021-06-19 14:52:00,069   INFO  sync_bn          False
2021-06-19 14:52:00,069   INFO  fix_random_seed  False
2021-06-19 14:52:00,069   INFO  ckpt_save_interval 1
2021-06-19 14:52:00,069   INFO  local_rank       0
2021-06-19 14:52:00,069   INFO  max_ckpt_save_num 30
2021-06-19 14:52:00,069   INFO  merge_all_iters_to_one_epoch False
2021-06-19 14:52:00,069   INFO  set_cfgs         None
2021-06-19 14:52:00,069   INFO  max_waiting_mins 0
2021-06-19 14:52:00,070   INFO  start_epoch      0
2021-06-19 14:52:00,070   INFO  save_to_file     False
2021-06-19 14:52:00,070   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 14:52:00,070   INFO  cfg.LOCAL_RANK: 0
2021-06-19 14:52:00,070   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 14:52:00,070   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 14:52:00,070   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 14:52:00,070   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 14:52:00,070   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 14:52:00,070   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 14:52:00,070   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 14:52:00,071   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 14:52:00,071   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 14:52:00,071   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 14:52:00,071   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 14:52:00,072   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:52:00,072   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:52:00,072   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 14:52:00,072   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 14:52:00,072   INFO  
cfg.MODEL = edict()
2021-06-19 14:52:00,072   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 14:52:00,072   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 14:52:00,072   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 14:52:00,072   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 14:52:00,072   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 14:52:00,072   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 14:52:00,073   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 14:52:00,073   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 14:52:00,073   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 14:52:00,073   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 14:52:00,073   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 14:52:00,073   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 14:52:00,073   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 14:52:00,074   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 14:52:00,074   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 14:52:00,075   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 14:52:00,075   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 14:52:00,075   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 14:52:00,075   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 14:52:00,075   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 14:52:00,076   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 14:52:00,076   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 14:52:00,076   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 14:52:00,076   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 14:52:00,076   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 14:52:00,077   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 14:52:00,078   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 14:52:00,078   INFO  cfg.TAG: pointpillar
2021-06-19 14:52:00,078   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 14:52:00,642   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 14:52:00,643   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 14:52:00,643   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 14:52:00,691   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 14:52:00,697   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 14:52:00,700   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 14:52:00,710   INFO  Loading KITTI dataset
2021-06-19 14:52:00,873   INFO  Total samples for KITTI dataset: 3712
2021-06-19 14:52:00,874   INFO  ----------------Bayes Optimization----------------
2021-06-19 14:52:00,957   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 14:52:00,963   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 14:52:23,475   INFO  **********************Start logging**********************
2021-06-19 14:52:23,475   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-19 14:52:23,475   INFO  total_batch_size: 8
2021-06-19 14:52:23,476   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 14:52:23,476   INFO  batch_size       4
2021-06-19 14:52:23,476   INFO  epochs           1
2021-06-19 14:52:23,476   INFO  workers          8
2021-06-19 14:52:23,476   INFO  extra_tag        default
2021-06-19 14:52:23,476   INFO  ckpt             None
2021-06-19 14:52:23,476   INFO  pretrained_model None
2021-06-19 14:52:23,476   INFO  launcher         pytorch
2021-06-19 14:52:23,476   INFO  tcp_port         18888
2021-06-19 14:52:23,476   INFO  sync_bn          False
2021-06-19 14:52:23,476   INFO  fix_random_seed  False
2021-06-19 14:52:23,476   INFO  ckpt_save_interval 1
2021-06-19 14:52:23,476   INFO  local_rank       0
2021-06-19 14:52:23,476   INFO  max_ckpt_save_num 30
2021-06-19 14:52:23,476   INFO  merge_all_iters_to_one_epoch False
2021-06-19 14:52:23,476   INFO  set_cfgs         None
2021-06-19 14:52:23,477   INFO  max_waiting_mins 0
2021-06-19 14:52:23,477   INFO  start_epoch      0
2021-06-19 14:52:23,477   INFO  save_to_file     False
2021-06-19 14:52:23,477   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 14:52:23,477   INFO  cfg.LOCAL_RANK: 0
2021-06-19 14:52:23,477   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 14:52:23,477   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 14:52:23,477   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 14:52:23,477   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 14:52:23,477   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 14:52:23,477   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 14:52:23,477   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 14:52:23,477   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 14:52:23,477   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 14:52:23,478   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 14:52:23,478   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 14:52:23,478   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 14:52:23,479   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 14:52:23,479   INFO  
cfg.MODEL = edict()
2021-06-19 14:52:23,479   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 14:52:23,479   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 14:52:23,479   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 14:52:23,479   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 14:52:23,479   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 14:52:23,479   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 14:52:23,479   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 14:52:23,479   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 14:52:23,479   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 14:52:23,479   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 14:52:23,480   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 14:52:23,480   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 14:52:23,480   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 14:52:23,480   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 14:52:23,480   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 14:52:23,480   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 14:52:23,480   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 14:52:23,480   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 14:52:23,481   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 14:52:23,481   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 14:52:23,481   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 14:52:23,481   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 14:52:23,482   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 14:52:23,482   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 14:52:23,482   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 14:52:23,482   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 14:52:23,482   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 14:52:23,482   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 14:52:23,482   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 14:52:23,483   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 14:52:23,483   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 14:52:23,483   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 14:52:23,483   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 14:52:23,483   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 14:52:23,484   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 14:52:23,484   INFO  cfg.TAG: pointpillar
2021-06-19 14:52:23,484   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 14:52:23,969   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 14:52:23,970   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 14:52:23,970   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 14:52:24,014   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 14:52:24,021   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 14:52:24,024   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 14:52:24,040   INFO  Loading KITTI dataset
2021-06-19 14:52:24,202   INFO  Total samples for KITTI dataset: 3712
2021-06-19 14:52:24,203   INFO  ----------------Bayes Optimization----------------
2021-06-19 14:52:24,294   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 14:52:24,296   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 14:56:27,698   INFO  **********************End training**********************
2021-06-19 14:56:27,707   INFO  Loading KITTI dataset
2021-06-19 14:56:27,954   INFO  Total samples for KITTI dataset: 3769
2021-06-19 14:56:27,956   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-19 14:56:27,956   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 14:56:28,017   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 14:56:28,193   INFO  ==> Done (loaded 127/127)
2021-06-19 14:57:31,926   INFO  Generate label finished(sec_per_example: 0.0169 second).
2021-06-19 14:57:31,927   INFO  recall_roi_0.3: 0.000000
2021-06-19 14:57:31,927   INFO  recall_rcnn_0.3: 0.120103
2021-06-19 14:57:31,927   INFO  recall_roi_0.5: 0.000000
2021-06-19 14:57:31,928   INFO  recall_rcnn_0.5: 0.013724
2021-06-19 14:57:31,928   INFO  recall_roi_0.7: 0.000000
2021-06-19 14:57:31,928   INFO  recall_rcnn_0.7: 0.000057
2021-06-19 14:57:31,932   INFO  Average predicted number of objects(3769 samples): 285.763
2021-06-19 15:06:38,369   INFO  **********************Start logging**********************
2021-06-19 15:06:38,369   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-19 15:06:38,369   INFO  total_batch_size: 8
2021-06-19 15:06:38,369   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-19 15:06:38,369   INFO  batch_size       4
2021-06-19 15:06:38,369   INFO  epochs           1
2021-06-19 15:06:38,369   INFO  workers          8
2021-06-19 15:06:38,369   INFO  extra_tag        default
2021-06-19 15:06:38,369   INFO  ckpt             None
2021-06-19 15:06:38,370   INFO  pretrained_model None
2021-06-19 15:06:38,370   INFO  launcher         pytorch
2021-06-19 15:06:38,370   INFO  tcp_port         18888
2021-06-19 15:06:38,370   INFO  sync_bn          False
2021-06-19 15:06:38,370   INFO  fix_random_seed  False
2021-06-19 15:06:38,370   INFO  ckpt_save_interval 1
2021-06-19 15:06:38,370   INFO  local_rank       0
2021-06-19 15:06:38,370   INFO  max_ckpt_save_num 30
2021-06-19 15:06:38,370   INFO  merge_all_iters_to_one_epoch False
2021-06-19 15:06:38,370   INFO  set_cfgs         None
2021-06-19 15:06:38,370   INFO  max_waiting_mins 0
2021-06-19 15:06:38,370   INFO  start_epoch      0
2021-06-19 15:06:38,371   INFO  save_to_file     False
2021-06-19 15:06:38,371   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-19 15:06:38,371   INFO  cfg.LOCAL_RANK: 0
2021-06-19 15:06:38,371   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-19 15:06:38,371   INFO  
cfg.DATA_CONFIG = edict()
2021-06-19 15:06:38,371   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-19 15:06:38,371   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-19 15:06:38,371   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-19 15:06:38,371   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-19 15:06:38,371   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-19 15:06:38,371   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-19 15:06:38,371   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-19 15:06:38,372   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-19 15:06:38,372   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 15:06:38,372   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-19 15:06:38,373   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-19 15:06:38,373   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-19 15:06:38,373   INFO  
cfg.MODEL = edict()
2021-06-19 15:06:38,373   INFO  cfg.MODEL.NAME: PointPillar
2021-06-19 15:06:38,373   INFO  
cfg.MODEL.VFE = edict()
2021-06-19 15:06:38,373   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-19 15:06:38,373   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-19 15:06:38,373   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-19 15:06:38,373   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-19 15:06:38,373   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-19 15:06:38,373   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-19 15:06:38,373   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-19 15:06:38,373   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-19 15:06:38,374   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-19 15:06:38,374   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-19 15:06:38,374   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-19 15:06:38,374   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-19 15:06:38,374   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-19 15:06:38,374   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-19 15:06:38,374   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-19 15:06:38,375   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-19 15:06:38,375   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-19 15:06:38,375   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-19 15:06:38,375   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-19 15:06:38,376   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-19 15:06:38,376   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-19 15:06:38,376   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-19 15:06:38,376   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-19 15:06:38,376   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-19 15:06:38,376   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-19 15:06:38,376   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-19 15:06:38,377   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-19 15:06:38,377   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-19 15:06:38,377   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-19 15:06:38,377   INFO  
cfg.OPTIMIZATION = edict()
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-19 15:06:38,377   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-19 15:06:38,378   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-19 15:06:38,378   INFO  cfg.TAG: pointpillar
2021-06-19 15:06:38,378   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-19 15:06:38,952   INFO  Database filter by min points Car: 14357 => 13532
2021-06-19 15:06:38,953   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-19 15:06:38,953   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-19 15:06:39,007   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-19 15:06:39,016   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-19 15:06:39,018   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-19 15:06:39,032   INFO  Loading KITTI dataset
2021-06-19 15:06:39,223   INFO  Total samples for KITTI dataset: 3712
2021-06-19 15:06:39,223   INFO  ----------------Bayes Optimization----------------
2021-06-19 15:06:39,304   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-19 15:06:39,306   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-19 15:06:39,534   INFO  **********************End training**********************
2021-06-19 15:06:39,539   INFO  Loading KITTI dataset
2021-06-19 15:06:39,725   INFO  Total samples for KITTI dataset: 3769
2021-06-19 15:06:39,727   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-19 15:06:39,727   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-19 15:06:39,788   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-19 15:06:39,933   INFO  ==> Done (loaded 127/127)
2021-06-19 15:07:53,067   INFO  Generate label finished(sec_per_example: 0.0194 second).
2021-06-19 15:07:53,067   INFO  recall_roi_0.3: 0.000000
2021-06-19 15:07:53,067   INFO  recall_rcnn_0.3: 0.000342
2021-06-19 15:07:53,067   INFO  recall_roi_0.5: 0.000000
2021-06-19 15:07:53,067   INFO  recall_rcnn_0.5: 0.000000
2021-06-19 15:07:53,067   INFO  recall_roi_0.7: 0.000000
2021-06-19 15:07:53,067   INFO  recall_rcnn_0.7: 0.000000
2021-06-19 15:07:53,070   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 00:18:21,573   INFO  **********************Start logging**********************
2021-06-20 00:18:21,574   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 00:18:21,574   INFO  total_batch_size: 8
2021-06-20 00:18:21,574   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 00:18:21,574   INFO  batch_size       4
2021-06-20 00:18:21,574   INFO  epochs           1
2021-06-20 00:18:21,574   INFO  workers          8
2021-06-20 00:18:21,574   INFO  extra_tag        default
2021-06-20 00:18:21,574   INFO  ckpt             None
2021-06-20 00:18:21,574   INFO  pretrained_model None
2021-06-20 00:18:21,574   INFO  launcher         pytorch
2021-06-20 00:18:21,574   INFO  tcp_port         18888
2021-06-20 00:18:21,574   INFO  sync_bn          False
2021-06-20 00:18:21,574   INFO  fix_random_seed  False
2021-06-20 00:18:21,575   INFO  ckpt_save_interval 1
2021-06-20 00:18:21,575   INFO  local_rank       0
2021-06-20 00:18:21,575   INFO  max_ckpt_save_num 30
2021-06-20 00:18:21,575   INFO  merge_all_iters_to_one_epoch False
2021-06-20 00:18:21,575   INFO  set_cfgs         None
2021-06-20 00:18:21,575   INFO  max_waiting_mins 0
2021-06-20 00:18:21,575   INFO  start_epoch      0
2021-06-20 00:18:21,575   INFO  save_to_file     False
2021-06-20 00:18:21,575   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 00:18:21,575   INFO  cfg.LOCAL_RANK: 0
2021-06-20 00:18:21,575   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 00:18:21,575   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 00:18:21,575   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 00:18:21,575   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 00:18:21,575   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 00:18:21,575   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 00:18:21,576   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 00:18:21,576   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 00:18:21,576   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:18:21,576   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 00:18:21,577   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 00:18:21,577   INFO  
cfg.MODEL = edict()
2021-06-20 00:18:21,577   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 00:18:21,577   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 00:18:21,577   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 00:18:21,577   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 00:18:21,577   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 00:18:21,577   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 00:18:21,577   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 00:18:21,577   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 00:18:21,577   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 00:18:21,577   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 00:18:21,577   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 00:18:21,577   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 00:18:21,577   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 00:18:21,577   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 00:18:21,577   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 00:18:21,578   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 00:18:21,578   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 00:18:21,578   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 00:18:21,578   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 00:18:21,578   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 00:18:21,579   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 00:18:21,579   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 00:18:21,579   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 00:18:21,580   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 00:18:21,580   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 00:18:21,580   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 00:18:21,580   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 00:18:21,581   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 00:18:21,582   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 00:18:21,582   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 00:18:21,582   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 00:18:21,582   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 00:18:21,582   INFO  cfg.TAG: pointpillar
2021-06-20 00:18:21,582   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 00:18:22,107   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 00:18:22,108   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 00:18:22,108   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 00:18:22,151   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 00:18:22,158   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 00:18:22,161   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 00:18:22,171   INFO  Loading KITTI dataset
2021-06-20 00:18:22,331   INFO  Total samples for KITTI dataset: 3712
2021-06-20 00:18:22,332   INFO  ----------------Bayes Optimization----------------
2021-06-20 00:18:22,414   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 00:18:22,416   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 00:18:22,628   INFO  **********************End training**********************
2021-06-20 00:18:22,632   INFO  Loading KITTI dataset
2021-06-20 00:18:22,841   INFO  Total samples for KITTI dataset: 3769
2021-06-20 00:18:22,842   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 00:18:22,843   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:18:22,899   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:18:23,045   INFO  ==> Done (loaded 127/127)
2021-06-20 00:19:34,309   INFO  Generate label finished(sec_per_example: 0.0189 second).
2021-06-20 00:19:34,309   INFO  recall_roi_0.3: 0.000000
2021-06-20 00:19:34,309   INFO  recall_rcnn_0.3: 0.096925
2021-06-20 00:19:34,309   INFO  recall_roi_0.5: 0.000000
2021-06-20 00:19:34,309   INFO  recall_rcnn_0.5: 0.016629
2021-06-20 00:19:34,309   INFO  recall_roi_0.7: 0.000000
2021-06-20 00:19:34,309   INFO  recall_rcnn_0.7: 0.000228
2021-06-20 00:19:34,312   INFO  Average predicted number of objects(3769 samples): 136.469
2021-06-20 00:21:40,077   INFO  ----------------Noise Experiment----------------
2021-06-20 00:21:40,078   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:21:40,121   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:21:40,279   INFO  ==> Done (loaded 127/127)
2021-06-20 00:35:20,126   INFO  **********************Start logging**********************
2021-06-20 00:35:20,127   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 00:35:20,127   INFO  total_batch_size: 8
2021-06-20 00:35:20,127   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 00:35:20,127   INFO  batch_size       4
2021-06-20 00:35:20,127   INFO  epochs           1
2021-06-20 00:35:20,127   INFO  workers          8
2021-06-20 00:35:20,127   INFO  extra_tag        default
2021-06-20 00:35:20,127   INFO  ckpt             None
2021-06-20 00:35:20,127   INFO  pretrained_model None
2021-06-20 00:35:20,127   INFO  launcher         pytorch
2021-06-20 00:35:20,127   INFO  tcp_port         18888
2021-06-20 00:35:20,127   INFO  sync_bn          False
2021-06-20 00:35:20,127   INFO  fix_random_seed  False
2021-06-20 00:35:20,127   INFO  ckpt_save_interval 1
2021-06-20 00:35:20,127   INFO  local_rank       0
2021-06-20 00:35:20,128   INFO  max_ckpt_save_num 30
2021-06-20 00:35:20,128   INFO  merge_all_iters_to_one_epoch False
2021-06-20 00:35:20,128   INFO  set_cfgs         None
2021-06-20 00:35:20,128   INFO  max_waiting_mins 0
2021-06-20 00:35:20,128   INFO  start_epoch      0
2021-06-20 00:35:20,128   INFO  save_to_file     False
2021-06-20 00:35:20,128   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 00:35:20,128   INFO  cfg.LOCAL_RANK: 0
2021-06-20 00:35:20,128   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 00:35:20,128   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 00:35:20,128   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 00:35:20,128   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 00:35:20,128   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 00:35:20,128   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 00:35:20,128   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 00:35:20,128   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 00:35:20,129   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 00:35:20,129   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 00:35:20,129   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 00:35:20,129   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 00:35:20,129   INFO  
cfg.MODEL = edict()
2021-06-20 00:35:20,130   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 00:35:20,130   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 00:35:20,130   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 00:35:20,130   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 00:35:20,130   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 00:35:20,130   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 00:35:20,130   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 00:35:20,130   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 00:35:20,130   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 00:35:20,130   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 00:35:20,130   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 00:35:20,130   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 00:35:20,131   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 00:35:20,131   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 00:35:20,131   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 00:35:20,131   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 00:35:20,132   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 00:35:20,132   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 00:35:20,132   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 00:35:20,132   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 00:35:20,132   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 00:35:20,132   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 00:35:20,132   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 00:35:20,132   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 00:35:20,133   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 00:35:20,133   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 00:35:20,134   INFO  cfg.TAG: pointpillar
2021-06-20 00:35:20,134   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 00:35:20,635   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 00:35:20,636   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 00:35:20,636   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 00:35:20,683   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 00:35:20,690   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 00:35:20,693   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 00:35:20,703   INFO  Loading KITTI dataset
2021-06-20 00:35:20,864   INFO  Total samples for KITTI dataset: 3712
2021-06-20 00:35:20,866   INFO  ----------------Bayes Optimization----------------
2021-06-20 00:35:20,958   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 00:35:20,960   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 00:35:21,173   INFO  **********************End training**********************
2021-06-20 00:35:21,177   INFO  Loading KITTI dataset
2021-06-20 00:35:21,362   INFO  Total samples for KITTI dataset: 3769
2021-06-20 00:35:21,363   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 00:35:21,363   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:35:21,436   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:35:21,650   INFO  ==> Done (loaded 127/127)
2021-06-20 00:36:45,740   INFO  Generate label finished(sec_per_example: 0.0223 second).
2021-06-20 00:36:45,741   INFO  recall_roi_0.3: 0.000000
2021-06-20 00:36:45,741   INFO  recall_rcnn_0.3: 0.003018
2021-06-20 00:36:45,741   INFO  recall_roi_0.5: 0.000000
2021-06-20 00:36:45,741   INFO  recall_rcnn_0.5: 0.000399
2021-06-20 00:36:45,741   INFO  recall_roi_0.7: 0.000000
2021-06-20 00:36:45,742   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 00:36:45,747   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 00:39:35,741   INFO  **********************Start logging**********************
2021-06-20 00:39:35,741   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 00:39:35,741   INFO  total_batch_size: 8
2021-06-20 00:39:35,742   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 00:39:35,742   INFO  batch_size       4
2021-06-20 00:39:35,742   INFO  epochs           1
2021-06-20 00:39:35,742   INFO  workers          8
2021-06-20 00:39:35,742   INFO  extra_tag        default
2021-06-20 00:39:35,742   INFO  ckpt             None
2021-06-20 00:39:35,743   INFO  pretrained_model None
2021-06-20 00:39:35,743   INFO  launcher         pytorch
2021-06-20 00:39:35,743   INFO  tcp_port         18888
2021-06-20 00:39:35,743   INFO  sync_bn          False
2021-06-20 00:39:35,743   INFO  fix_random_seed  False
2021-06-20 00:39:35,744   INFO  ckpt_save_interval 1
2021-06-20 00:39:35,744   INFO  local_rank       0
2021-06-20 00:39:35,744   INFO  max_ckpt_save_num 30
2021-06-20 00:39:35,744   INFO  merge_all_iters_to_one_epoch False
2021-06-20 00:39:35,744   INFO  set_cfgs         None
2021-06-20 00:39:35,744   INFO  max_waiting_mins 0
2021-06-20 00:39:35,745   INFO  start_epoch      0
2021-06-20 00:39:35,745   INFO  save_to_file     False
2021-06-20 00:39:35,745   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 00:39:35,745   INFO  cfg.LOCAL_RANK: 0
2021-06-20 00:39:35,745   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 00:39:35,746   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 00:39:35,746   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 00:39:35,746   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 00:39:35,746   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 00:39:35,746   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 00:39:35,746   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 00:39:35,747   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 00:39:35,747   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 00:39:35,747   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 00:39:35,747   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 00:39:35,747   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 00:39:35,748   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 00:39:35,748   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 00:39:35,748   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 00:39:35,748   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 00:39:35,748   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 00:39:35,749   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 00:39:35,749   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:39:35,749   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:39:35,749   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 00:39:35,749   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 00:39:35,749   INFO  
cfg.MODEL = edict()
2021-06-20 00:39:35,750   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 00:39:35,750   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 00:39:35,750   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 00:39:35,750   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 00:39:35,750   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 00:39:35,751   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 00:39:35,751   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 00:39:35,751   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 00:39:35,751   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 00:39:35,751   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 00:39:35,751   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 00:39:35,752   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 00:39:35,752   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 00:39:35,752   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 00:39:35,752   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 00:39:35,752   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 00:39:35,753   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 00:39:35,753   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 00:39:35,753   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 00:39:35,753   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 00:39:35,753   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 00:39:35,753   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 00:39:35,754   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 00:39:35,754   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 00:39:35,755   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 00:39:35,755   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 00:39:35,755   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 00:39:35,755   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 00:39:35,755   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 00:39:35,755   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 00:39:35,755   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 00:39:35,755   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 00:39:35,755   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 00:39:35,756   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 00:39:35,756   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 00:39:35,756   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 00:39:35,756   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 00:39:35,756   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 00:39:35,757   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 00:39:35,757   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 00:39:35,757   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 00:39:35,757   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 00:39:35,757   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 00:39:35,757   INFO  cfg.TAG: pointpillar
2021-06-20 00:39:35,757   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 00:39:36,190   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 00:39:36,191   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 00:39:36,192   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 00:39:36,231   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 00:39:36,237   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 00:39:36,240   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 00:39:36,249   INFO  Loading KITTI dataset
2021-06-20 00:39:36,403   INFO  Total samples for KITTI dataset: 3712
2021-06-20 00:39:36,404   INFO  ----------------Bayes Optimization----------------
2021-06-20 00:39:36,484   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 00:39:36,486   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 00:39:36,699   INFO  **********************End training**********************
2021-06-20 00:39:36,703   INFO  Loading KITTI dataset
2021-06-20 00:39:36,907   INFO  Total samples for KITTI dataset: 3769
2021-06-20 00:39:36,908   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 00:39:36,908   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:39:36,965   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:39:37,104   INFO  ==> Done (loaded 127/127)
2021-06-20 00:40:38,111   INFO  Generate label finished(sec_per_example: 0.0162 second).
2021-06-20 00:40:38,111   INFO  recall_roi_0.3: 0.000000
2021-06-20 00:40:38,112   INFO  recall_rcnn_0.3: 0.410820
2021-06-20 00:40:38,112   INFO  recall_roi_0.5: 0.000000
2021-06-20 00:40:38,112   INFO  recall_rcnn_0.5: 0.115547
2021-06-20 00:40:38,112   INFO  recall_roi_0.7: 0.000000
2021-06-20 00:40:38,112   INFO  recall_rcnn_0.7: 0.003018
2021-06-20 00:40:38,115   INFO  Average predicted number of objects(3769 samples): 73.750
2021-06-20 00:42:02,233   INFO  ----------------Noise Experiment----------------
2021-06-20 00:42:02,234   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:42:02,281   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:42:02,443   INFO  ==> Done (loaded 127/127)
2021-06-20 00:54:21,248   INFO  **********************Start logging**********************
2021-06-20 00:54:21,248   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 00:54:21,248   INFO  total_batch_size: 8
2021-06-20 00:54:21,248   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 00:54:21,249   INFO  batch_size       4
2021-06-20 00:54:21,249   INFO  epochs           1
2021-06-20 00:54:21,249   INFO  workers          8
2021-06-20 00:54:21,249   INFO  extra_tag        default
2021-06-20 00:54:21,249   INFO  ckpt             None
2021-06-20 00:54:21,249   INFO  pretrained_model None
2021-06-20 00:54:21,249   INFO  launcher         pytorch
2021-06-20 00:54:21,249   INFO  tcp_port         18888
2021-06-20 00:54:21,249   INFO  sync_bn          False
2021-06-20 00:54:21,249   INFO  fix_random_seed  False
2021-06-20 00:54:21,249   INFO  ckpt_save_interval 1
2021-06-20 00:54:21,249   INFO  local_rank       0
2021-06-20 00:54:21,250   INFO  max_ckpt_save_num 30
2021-06-20 00:54:21,250   INFO  merge_all_iters_to_one_epoch False
2021-06-20 00:54:21,250   INFO  set_cfgs         None
2021-06-20 00:54:21,250   INFO  max_waiting_mins 0
2021-06-20 00:54:21,250   INFO  start_epoch      0
2021-06-20 00:54:21,250   INFO  save_to_file     False
2021-06-20 00:54:21,250   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 00:54:21,250   INFO  cfg.LOCAL_RANK: 0
2021-06-20 00:54:21,250   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 00:54:21,250   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 00:54:21,250   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 00:54:21,250   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 00:54:21,251   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 00:54:21,251   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 00:54:21,251   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 00:54:21,251   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 00:54:21,252   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 00:54:21,252   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 00:54:21,252   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:54:21,252   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:54:21,252   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 00:54:21,252   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 00:54:21,252   INFO  
cfg.MODEL = edict()
2021-06-20 00:54:21,252   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 00:54:21,252   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 00:54:21,252   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 00:54:21,252   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 00:54:21,252   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 00:54:21,253   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 00:54:21,253   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 00:54:21,253   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 00:54:21,253   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 00:54:21,253   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 00:54:21,253   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 00:54:21,253   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 00:54:21,253   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 00:54:21,254   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 00:54:21,254   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 00:54:21,255   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 00:54:21,255   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 00:54:21,255   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 00:54:21,255   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 00:54:21,255   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 00:54:21,255   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 00:54:21,255   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 00:54:21,256   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 00:54:21,256   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 00:54:21,256   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 00:54:21,256   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 00:54:21,256   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 00:54:21,256   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 00:54:21,256   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 00:54:21,257   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 00:54:21,257   INFO  cfg.TAG: pointpillar
2021-06-20 00:54:21,257   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 00:54:21,783   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 00:54:21,784   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 00:54:21,785   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 00:54:21,825   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 00:54:21,832   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 00:54:21,834   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 00:54:21,845   INFO  Loading KITTI dataset
2021-06-20 00:54:22,002   INFO  Total samples for KITTI dataset: 3712
2021-06-20 00:54:22,004   INFO  ----------------Bayes Optimization----------------
2021-06-20 00:54:22,093   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 00:54:22,095   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 00:54:22,308   INFO  **********************End training**********************
2021-06-20 00:54:22,312   INFO  Loading KITTI dataset
2021-06-20 00:54:22,528   INFO  Total samples for KITTI dataset: 3769
2021-06-20 00:54:22,529   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 00:54:22,529   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:54:22,588   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:54:22,730   INFO  ==> Done (loaded 127/127)
2021-06-20 00:55:25,591   INFO  Generate label finished(sec_per_example: 0.0167 second).
2021-06-20 00:55:25,591   INFO  recall_roi_0.3: 0.000000
2021-06-20 00:55:25,591   INFO  recall_rcnn_0.3: 0.299089
2021-06-20 00:55:25,591   INFO  recall_roi_0.5: 0.000000
2021-06-20 00:55:25,591   INFO  recall_rcnn_0.5: 0.095387
2021-06-20 00:55:25,591   INFO  recall_roi_0.7: 0.000000
2021-06-20 00:55:25,591   INFO  recall_rcnn_0.7: 0.006891
2021-06-20 00:55:25,600   INFO  Average predicted number of objects(3769 samples): 270.347
2021-06-20 00:56:06,862   INFO  **********************Start logging**********************
2021-06-20 00:56:06,862   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 00:56:06,862   INFO  total_batch_size: 8
2021-06-20 00:56:06,862   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 00:56:06,862   INFO  batch_size       4
2021-06-20 00:56:06,862   INFO  epochs           1
2021-06-20 00:56:06,862   INFO  workers          8
2021-06-20 00:56:06,862   INFO  extra_tag        default
2021-06-20 00:56:06,863   INFO  ckpt             None
2021-06-20 00:56:06,863   INFO  pretrained_model None
2021-06-20 00:56:06,863   INFO  launcher         pytorch
2021-06-20 00:56:06,863   INFO  tcp_port         18888
2021-06-20 00:56:06,863   INFO  sync_bn          False
2021-06-20 00:56:06,863   INFO  fix_random_seed  False
2021-06-20 00:56:06,863   INFO  ckpt_save_interval 1
2021-06-20 00:56:06,863   INFO  local_rank       0
2021-06-20 00:56:06,863   INFO  max_ckpt_save_num 30
2021-06-20 00:56:06,863   INFO  merge_all_iters_to_one_epoch False
2021-06-20 00:56:06,863   INFO  set_cfgs         None
2021-06-20 00:56:06,863   INFO  max_waiting_mins 0
2021-06-20 00:56:06,863   INFO  start_epoch      0
2021-06-20 00:56:06,863   INFO  save_to_file     False
2021-06-20 00:56:06,864   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 00:56:06,864   INFO  cfg.LOCAL_RANK: 0
2021-06-20 00:56:06,864   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 00:56:06,864   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 00:56:06,864   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 00:56:06,864   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 00:56:06,864   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 00:56:06,865   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 00:56:06,865   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 00:56:06,865   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 00:56:06,865   INFO  
cfg.MODEL = edict()
2021-06-20 00:56:06,865   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 00:56:06,866   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 00:56:06,866   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 00:56:06,866   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 00:56:06,866   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 00:56:06,866   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 00:56:06,866   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 00:56:06,866   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 00:56:06,866   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 00:56:06,866   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 00:56:06,866   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 00:56:06,866   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 00:56:06,866   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 00:56:06,866   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 00:56:06,867   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 00:56:06,867   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 00:56:06,867   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 00:56:06,867   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 00:56:06,867   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 00:56:06,867   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 00:56:06,868   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 00:56:06,868   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 00:56:06,868   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 00:56:06,868   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 00:56:06,868   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 00:56:06,868   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 00:56:06,869   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 00:56:06,869   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 00:56:06,869   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 00:56:06,869   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 00:56:06,869   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 00:56:06,869   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 00:56:06,869   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 00:56:06,869   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 00:56:06,870   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 00:56:06,870   INFO  cfg.TAG: pointpillar
2021-06-20 00:56:06,870   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 00:56:07,410   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 00:56:07,410   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 00:56:07,411   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 00:56:07,450   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 00:56:07,456   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 00:56:07,458   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 00:56:07,468   INFO  Loading KITTI dataset
2021-06-20 00:56:07,623   INFO  Total samples for KITTI dataset: 3712
2021-06-20 00:56:07,624   INFO  ----------------Bayes Optimization----------------
2021-06-20 00:56:07,709   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 00:56:07,710   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 00:56:07,933   INFO  **********************End training**********************
2021-06-20 00:56:07,936   INFO  Loading KITTI dataset
2021-06-20 00:56:08,099   INFO  Total samples for KITTI dataset: 3769
2021-06-20 00:56:08,101   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 00:56:08,101   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 00:56:08,169   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 00:56:08,352   INFO  ==> Done (loaded 127/127)
2021-06-20 00:57:20,748   INFO  Generate label finished(sec_per_example: 0.0192 second).
2021-06-20 00:57:20,749   INFO  recall_roi_0.3: 0.000000
2021-06-20 00:57:20,749   INFO  recall_rcnn_0.3: 0.159852
2021-06-20 00:57:20,750   INFO  recall_roi_0.5: 0.000000
2021-06-20 00:57:20,750   INFO  recall_rcnn_0.5: 0.032346
2021-06-20 00:57:20,750   INFO  recall_roi_0.7: 0.000000
2021-06-20 00:57:20,750   INFO  recall_rcnn_0.7: 0.002620
2021-06-20 00:57:20,755   INFO  Average predicted number of objects(3769 samples): 470.649
2021-06-20 01:00:04,310   INFO  **********************Start logging**********************
2021-06-20 01:00:04,310   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:00:04,310   INFO  total_batch_size: 8
2021-06-20 01:00:04,310   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:00:04,310   INFO  batch_size       4
2021-06-20 01:00:04,310   INFO  epochs           1
2021-06-20 01:00:04,310   INFO  workers          8
2021-06-20 01:00:04,310   INFO  extra_tag        default
2021-06-20 01:00:04,311   INFO  ckpt             None
2021-06-20 01:00:04,311   INFO  pretrained_model None
2021-06-20 01:00:04,311   INFO  launcher         pytorch
2021-06-20 01:00:04,311   INFO  tcp_port         18888
2021-06-20 01:00:04,311   INFO  sync_bn          False
2021-06-20 01:00:04,311   INFO  fix_random_seed  False
2021-06-20 01:00:04,311   INFO  ckpt_save_interval 1
2021-06-20 01:00:04,311   INFO  local_rank       0
2021-06-20 01:00:04,311   INFO  max_ckpt_save_num 30
2021-06-20 01:00:04,311   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:00:04,311   INFO  set_cfgs         None
2021-06-20 01:00:04,311   INFO  max_waiting_mins 0
2021-06-20 01:00:04,311   INFO  start_epoch      0
2021-06-20 01:00:04,311   INFO  save_to_file     False
2021-06-20 01:00:04,312   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:00:04,312   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:00:04,312   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:00:04,312   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:00:04,312   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:00:04,312   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:00:04,312   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:00:04,313   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:00:04,313   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:00:04,313   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:00:04,313   INFO  
cfg.MODEL = edict()
2021-06-20 01:00:04,313   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:00:04,313   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:00:04,313   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:00:04,313   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:00:04,313   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:00:04,314   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:00:04,314   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:00:04,314   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:00:04,314   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:00:04,314   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:00:04,314   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:00:04,314   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:00:04,314   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:00:04,314   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:00:04,314   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:00:04,315   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:00:04,315   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:00:04,315   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:00:04,315   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:00:04,316   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:00:04,316   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:00:04,316   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:00:04,316   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:00:04,316   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:00:04,316   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:00:04,316   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:00:04,317   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:00:04,317   INFO  cfg.TAG: pointpillar
2021-06-20 01:00:04,317   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:00:04,877   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:00:04,878   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:00:04,878   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:00:04,917   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:00:04,924   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:00:04,926   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:00:04,937   INFO  Loading KITTI dataset
2021-06-20 01:00:05,098   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:00:05,099   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:00:05,179   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:00:05,180   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:00:05,611   INFO  **********************End training**********************
2021-06-20 01:00:05,614   INFO  Loading KITTI dataset
2021-06-20 01:00:05,820   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:00:05,821   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:00:05,822   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:00:05,874   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:00:06,023   INFO  ==> Done (loaded 127/127)
2021-06-20 01:01:23,605   INFO  Generate label finished(sec_per_example: 0.0206 second).
2021-06-20 01:01:23,606   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:01:23,606   INFO  recall_rcnn_0.3: 0.054328
2021-06-20 01:01:23,606   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:01:23,606   INFO  recall_rcnn_0.5: 0.004784
2021-06-20 01:01:23,606   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:01:23,606   INFO  recall_rcnn_0.7: 0.000114
2021-06-20 01:01:23,609   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 01:03:20,949   INFO  **********************Start logging**********************
2021-06-20 01:03:20,949   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:03:20,949   INFO  total_batch_size: 8
2021-06-20 01:03:20,949   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:03:20,949   INFO  batch_size       4
2021-06-20 01:03:20,949   INFO  epochs           1
2021-06-20 01:03:20,949   INFO  workers          8
2021-06-20 01:03:20,949   INFO  extra_tag        default
2021-06-20 01:03:20,949   INFO  ckpt             None
2021-06-20 01:03:20,949   INFO  pretrained_model None
2021-06-20 01:03:20,949   INFO  launcher         pytorch
2021-06-20 01:03:20,949   INFO  tcp_port         18888
2021-06-20 01:03:20,949   INFO  sync_bn          False
2021-06-20 01:03:20,950   INFO  fix_random_seed  False
2021-06-20 01:03:20,950   INFO  ckpt_save_interval 1
2021-06-20 01:03:20,950   INFO  local_rank       0
2021-06-20 01:03:20,950   INFO  max_ckpt_save_num 30
2021-06-20 01:03:20,950   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:03:20,950   INFO  set_cfgs         None
2021-06-20 01:03:20,950   INFO  max_waiting_mins 0
2021-06-20 01:03:20,950   INFO  start_epoch      0
2021-06-20 01:03:20,950   INFO  save_to_file     False
2021-06-20 01:03:20,950   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:03:20,950   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:03:20,950   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:03:20,950   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:03:20,950   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:03:20,950   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:03:20,950   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:03:20,951   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:03:20,951   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:03:20,951   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:03:20,951   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:03:20,951   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:03:20,952   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:03:20,952   INFO  
cfg.MODEL = edict()
2021-06-20 01:03:20,952   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:03:20,952   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:03:20,952   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:03:20,952   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:03:20,952   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:03:20,952   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:03:20,952   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:03:20,952   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:03:20,952   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:03:20,952   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:03:20,952   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:03:20,952   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:03:20,952   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:03:20,952   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:03:20,953   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:03:20,953   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:03:20,953   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:03:20,953   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:03:20,953   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:03:20,953   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:03:20,954   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:03:20,954   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:03:20,954   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:03:20,954   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:03:20,954   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:03:20,954   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:03:20,954   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:03:20,955   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:03:20,955   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:03:20,955   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:03:20,955   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:03:20,955   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:03:20,955   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:03:20,956   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:03:20,957   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:03:20,957   INFO  cfg.TAG: pointpillar
2021-06-20 01:03:20,957   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:03:21,403   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:03:21,404   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:03:21,404   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:03:21,446   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:03:21,453   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:03:21,455   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:03:21,466   INFO  Loading KITTI dataset
2021-06-20 01:03:21,622   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:03:21,623   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:03:21,705   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:03:21,707   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:03:21,921   INFO  **********************End training**********************
2021-06-20 01:03:21,925   INFO  Loading KITTI dataset
2021-06-20 01:03:22,121   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:03:22,122   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:03:22,122   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:03:22,173   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:03:22,322   INFO  ==> Done (loaded 127/127)
2021-06-20 01:04:26,404   INFO  Generate label finished(sec_per_example: 0.0170 second).
2021-06-20 01:04:26,404   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:04:26,405   INFO  recall_rcnn_0.3: 0.245843
2021-06-20 01:04:26,405   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:04:26,405   INFO  recall_rcnn_0.5: 0.073292
2021-06-20 01:04:26,405   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:04:26,405   INFO  recall_rcnn_0.7: 0.004556
2021-06-20 01:04:26,409   INFO  Average predicted number of objects(3769 samples): 368.128
2021-06-20 01:08:34,109   INFO  **********************Start logging**********************
2021-06-20 01:08:34,110   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:08:34,110   INFO  total_batch_size: 8
2021-06-20 01:08:34,110   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:08:34,110   INFO  batch_size       4
2021-06-20 01:08:34,111   INFO  epochs           1
2021-06-20 01:08:34,111   INFO  workers          8
2021-06-20 01:08:34,111   INFO  extra_tag        default
2021-06-20 01:08:34,111   INFO  ckpt             None
2021-06-20 01:08:34,111   INFO  pretrained_model None
2021-06-20 01:08:34,112   INFO  launcher         pytorch
2021-06-20 01:08:34,112   INFO  tcp_port         18888
2021-06-20 01:08:34,112   INFO  sync_bn          False
2021-06-20 01:08:34,112   INFO  fix_random_seed  False
2021-06-20 01:08:34,112   INFO  ckpt_save_interval 1
2021-06-20 01:08:34,113   INFO  local_rank       0
2021-06-20 01:08:34,113   INFO  max_ckpt_save_num 30
2021-06-20 01:08:34,113   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:08:34,113   INFO  set_cfgs         None
2021-06-20 01:08:34,113   INFO  max_waiting_mins 0
2021-06-20 01:08:34,114   INFO  start_epoch      0
2021-06-20 01:08:34,114   INFO  save_to_file     False
2021-06-20 01:08:34,114   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:08:34,114   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:08:34,114   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:08:34,115   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:08:34,115   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:08:34,115   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:08:34,115   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:08:34,115   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:08:34,116   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:08:34,116   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:08:34,116   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:08:34,116   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:08:34,116   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:08:34,117   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:08:34,117   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:08:34,117   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:08:34,117   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:08:34,118   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:08:34,118   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:08:34,118   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:08:34,118   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:08:34,118   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:08:34,119   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:08:34,119   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:08:34,119   INFO  
cfg.MODEL = edict()
2021-06-20 01:08:34,119   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:08:34,119   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:08:34,120   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:08:34,120   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:08:34,120   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:08:34,120   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:08:34,120   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:08:34,121   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:08:34,121   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:08:34,121   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:08:34,121   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:08:34,121   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:08:34,122   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:08:34,122   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:08:34,122   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:08:34,122   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:08:34,122   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:08:34,122   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:08:34,122   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:08:34,122   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:08:34,122   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:08:34,122   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:08:34,123   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:08:34,123   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:08:34,123   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:08:34,123   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:08:34,124   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:08:34,124   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:08:34,124   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:08:34,124   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:08:34,124   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:08:34,124   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:08:34,125   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:08:34,125   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:08:34,125   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:08:34,126   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:08:34,126   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:08:34,126   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:08:34,126   INFO  cfg.TAG: pointpillar
2021-06-20 01:08:34,126   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:08:34,641   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:08:34,642   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:08:34,642   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:08:34,682   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:08:34,688   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:08:34,690   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:08:34,701   INFO  Loading KITTI dataset
2021-06-20 01:08:34,855   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:08:34,856   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:08:34,943   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:08:34,945   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:08:35,156   INFO  **********************End training**********************
2021-06-20 01:08:35,159   INFO  Loading KITTI dataset
2021-06-20 01:08:35,330   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:08:35,331   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:08:35,332   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:08:35,393   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:08:35,544   INFO  ==> Done (loaded 127/127)
2021-06-20 01:09:51,097   INFO  Generate label finished(sec_per_example: 0.0200 second).
2021-06-20 01:09:51,098   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:09:51,098   INFO  recall_rcnn_0.3: 0.050797
2021-06-20 01:09:51,098   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:09:51,098   INFO  recall_rcnn_0.5: 0.011276
2021-06-20 01:09:51,098   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:09:51,098   INFO  recall_rcnn_0.7: 0.000740
2021-06-20 01:09:51,101   INFO  Average predicted number of objects(3769 samples): 172.697
2021-06-20 01:12:19,422   INFO  ----------------Noise Experiment----------------
2021-06-20 01:12:19,423   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:12:19,474   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:12:19,645   INFO  ==> Done (loaded 127/127)
2021-06-20 01:13:20,423   INFO  Generate label finished(sec_per_example: 0.0161 second).
2021-06-20 01:13:20,424   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:13:20,424   INFO  recall_rcnn_0.3: 0.820843
2021-06-20 01:13:20,424   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:13:20,424   INFO  recall_rcnn_0.5: 0.662073
2021-06-20 01:13:20,424   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:13:20,424   INFO  recall_rcnn_0.7: 0.282517
2021-06-20 01:13:20,427   INFO  Average predicted number of objects(3769 samples): 18.886
2021-06-20 01:13:54,425   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:13:54,474   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:13:54,620   INFO  ==> Done (loaded 127/127)
2021-06-20 01:14:55,879   INFO  Generate label finished(sec_per_example: 0.0162 second).
2021-06-20 01:14:55,879   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:14:55,879   INFO  recall_rcnn_0.3: 0.820843
2021-06-20 01:14:55,879   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:14:55,879   INFO  recall_rcnn_0.5: 0.662073
2021-06-20 01:14:55,879   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:14:55,879   INFO  recall_rcnn_0.7: 0.282517
2021-06-20 01:14:55,882   INFO  Average predicted number of objects(3769 samples): 18.886
2021-06-20 01:15:30,016   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:15:30,062   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:15:30,214   INFO  ==> Done (loaded 127/127)
2021-06-20 01:17:10,788   INFO  **********************Start logging**********************
2021-06-20 01:17:10,789   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:17:10,789   INFO  total_batch_size: 8
2021-06-20 01:17:10,789   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:17:10,789   INFO  batch_size       4
2021-06-20 01:17:10,789   INFO  epochs           1
2021-06-20 01:17:10,789   INFO  workers          8
2021-06-20 01:17:10,789   INFO  extra_tag        default
2021-06-20 01:17:10,789   INFO  ckpt             None
2021-06-20 01:17:10,789   INFO  pretrained_model None
2021-06-20 01:17:10,789   INFO  launcher         pytorch
2021-06-20 01:17:10,789   INFO  tcp_port         18888
2021-06-20 01:17:10,789   INFO  sync_bn          False
2021-06-20 01:17:10,789   INFO  fix_random_seed  False
2021-06-20 01:17:10,790   INFO  ckpt_save_interval 1
2021-06-20 01:17:10,790   INFO  local_rank       0
2021-06-20 01:17:10,790   INFO  max_ckpt_save_num 30
2021-06-20 01:17:10,790   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:17:10,790   INFO  set_cfgs         None
2021-06-20 01:17:10,790   INFO  max_waiting_mins 0
2021-06-20 01:17:10,790   INFO  start_epoch      0
2021-06-20 01:17:10,790   INFO  save_to_file     False
2021-06-20 01:17:10,790   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:17:10,790   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:17:10,790   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:17:10,790   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:17:10,790   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:17:10,790   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:17:10,790   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:17:10,791   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:17:10,791   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:17:10,791   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:17:10,791   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:17:10,791   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:17:10,792   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:17:10,792   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:17:10,792   INFO  
cfg.MODEL = edict()
2021-06-20 01:17:10,792   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:17:10,792   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:17:10,792   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:17:10,792   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:17:10,792   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:17:10,792   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:17:10,792   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:17:10,792   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:17:10,792   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:17:10,792   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:17:10,792   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:17:10,792   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:17:10,793   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:17:10,793   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:17:10,793   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:17:10,793   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:17:10,793   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:17:10,793   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:17:10,793   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:17:10,793   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:17:10,794   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:17:10,794   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:17:10,794   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:17:10,794   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:17:10,794   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:17:10,794   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:17:10,794   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:17:10,794   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:17:10,795   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:17:10,795   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:17:10,795   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:17:10,795   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:17:10,795   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:17:10,795   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:17:10,795   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:17:10,795   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:17:10,796   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:17:10,796   INFO  cfg.TAG: pointpillar
2021-06-20 01:17:10,796   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:17:11,302   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:17:11,303   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:17:11,303   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:17:11,353   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:17:11,361   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:17:11,363   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:17:11,374   INFO  Loading KITTI dataset
2021-06-20 01:17:11,539   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:17:11,540   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:17:11,632   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:17:11,634   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:17:11,845   INFO  **********************End training**********************
2021-06-20 01:17:11,850   INFO  Loading KITTI dataset
2021-06-20 01:17:12,013   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:17:12,015   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:17:12,015   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:17:12,068   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:17:12,210   INFO  ==> Done (loaded 127/127)
2021-06-20 01:18:32,680   INFO  Generate label finished(sec_per_example: 0.0213 second).
2021-06-20 01:18:32,682   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:18:32,682   INFO  recall_rcnn_0.3: 0.006207
2021-06-20 01:18:32,682   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:18:32,682   INFO  recall_rcnn_0.5: 0.000968
2021-06-20 01:18:32,683   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:18:32,683   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 01:18:32,689   INFO  Average predicted number of objects(3769 samples): 499.963
2021-06-20 01:25:16,641   INFO  **********************Start logging**********************
2021-06-20 01:25:16,641   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:25:16,641   INFO  total_batch_size: 8
2021-06-20 01:25:16,641   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:25:16,641   INFO  batch_size       4
2021-06-20 01:25:16,641   INFO  epochs           1
2021-06-20 01:25:16,641   INFO  workers          8
2021-06-20 01:25:16,641   INFO  extra_tag        default
2021-06-20 01:25:16,641   INFO  ckpt             None
2021-06-20 01:25:16,641   INFO  pretrained_model None
2021-06-20 01:25:16,641   INFO  launcher         pytorch
2021-06-20 01:25:16,642   INFO  tcp_port         18888
2021-06-20 01:25:16,642   INFO  sync_bn          False
2021-06-20 01:25:16,642   INFO  fix_random_seed  False
2021-06-20 01:25:16,642   INFO  ckpt_save_interval 1
2021-06-20 01:25:16,642   INFO  local_rank       0
2021-06-20 01:25:16,642   INFO  max_ckpt_save_num 30
2021-06-20 01:25:16,642   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:25:16,642   INFO  set_cfgs         None
2021-06-20 01:25:16,642   INFO  max_waiting_mins 0
2021-06-20 01:25:16,642   INFO  start_epoch      0
2021-06-20 01:25:16,642   INFO  save_to_file     False
2021-06-20 01:25:16,642   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:25:16,642   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:25:16,642   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:25:16,642   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:25:16,642   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:25:16,643   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:25:16,643   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:25:16,643   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:25:16,643   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:25:16,643   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:25:16,644   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:25:16,644   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:25:16,644   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:25:16,644   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:25:16,644   INFO  
cfg.MODEL = edict()
2021-06-20 01:25:16,644   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:25:16,644   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:25:16,644   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:25:16,644   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:25:16,644   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:25:16,644   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:25:16,644   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:25:16,644   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:25:16,644   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:25:16,644   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:25:16,644   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:25:16,645   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:25:16,645   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:25:16,645   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:25:16,645   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:25:16,646   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:25:16,646   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:25:16,646   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:25:16,646   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:25:16,646   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:25:16,646   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:25:16,646   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:25:16,646   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:25:16,647   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:25:16,647   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:25:16,647   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:25:16,647   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:25:16,647   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:25:16,647   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:25:16,647   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:25:16,647   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:25:16,648   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:25:16,648   INFO  cfg.TAG: pointpillar
2021-06-20 01:25:16,648   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:25:17,171   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:25:17,172   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:25:17,173   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:25:17,211   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:25:17,217   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:25:17,219   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:25:17,229   INFO  Loading KITTI dataset
2021-06-20 01:25:17,375   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:25:17,376   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:25:17,452   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:25:17,454   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:25:17,667   INFO  **********************End training**********************
2021-06-20 01:25:17,670   INFO  Loading KITTI dataset
2021-06-20 01:25:17,864   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:25:17,865   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:25:17,865   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:25:17,937   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:25:18,109   INFO  ==> Done (loaded 127/127)
2021-06-20 01:26:20,610   INFO  Generate label finished(sec_per_example: 0.0166 second).
2021-06-20 01:26:20,611   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:26:20,611   INFO  recall_rcnn_0.3: 0.031378
2021-06-20 01:26:20,611   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:26:20,611   INFO  recall_rcnn_0.5: 0.000854
2021-06-20 01:26:20,611   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:26:20,611   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 01:26:20,615   INFO  Average predicted number of objects(3769 samples): 128.759
2021-06-20 01:27:04,748   INFO  **********************Start logging**********************
2021-06-20 01:27:04,748   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:27:04,748   INFO  total_batch_size: 8
2021-06-20 01:27:04,748   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:27:04,748   INFO  batch_size       4
2021-06-20 01:27:04,748   INFO  epochs           1
2021-06-20 01:27:04,748   INFO  workers          8
2021-06-20 01:27:04,749   INFO  extra_tag        default
2021-06-20 01:27:04,749   INFO  ckpt             None
2021-06-20 01:27:04,749   INFO  pretrained_model None
2021-06-20 01:27:04,749   INFO  launcher         pytorch
2021-06-20 01:27:04,749   INFO  tcp_port         18888
2021-06-20 01:27:04,749   INFO  sync_bn          False
2021-06-20 01:27:04,749   INFO  fix_random_seed  False
2021-06-20 01:27:04,749   INFO  ckpt_save_interval 1
2021-06-20 01:27:04,749   INFO  local_rank       0
2021-06-20 01:27:04,749   INFO  max_ckpt_save_num 30
2021-06-20 01:27:04,749   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:27:04,749   INFO  set_cfgs         None
2021-06-20 01:27:04,749   INFO  max_waiting_mins 0
2021-06-20 01:27:04,749   INFO  start_epoch      0
2021-06-20 01:27:04,749   INFO  save_to_file     False
2021-06-20 01:27:04,749   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:27:04,750   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:27:04,750   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:27:04,750   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:27:04,750   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:27:04,750   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:27:04,750   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:27:04,750   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:27:04,751   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:27:04,751   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:27:04,751   INFO  
cfg.MODEL = edict()
2021-06-20 01:27:04,751   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:27:04,751   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:27:04,751   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:27:04,751   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:27:04,751   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:27:04,751   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:27:04,751   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:27:04,751   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:27:04,752   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:27:04,752   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:27:04,752   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:27:04,752   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:27:04,752   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:27:04,752   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:27:04,753   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:27:04,753   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:27:04,753   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:27:04,753   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:27:04,753   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:27:04,753   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:27:04,754   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:27:04,754   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:27:04,754   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:27:04,754   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:27:04,755   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:27:04,755   INFO  cfg.TAG: pointpillar
2021-06-20 01:27:04,755   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:27:05,209   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:27:05,210   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:27:05,210   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:27:05,250   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:27:05,257   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:27:05,260   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:27:05,270   INFO  Loading KITTI dataset
2021-06-20 01:27:05,427   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:27:05,429   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:27:05,508   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:27:05,510   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:27:05,765   INFO  **********************End training**********************
2021-06-20 01:27:05,769   INFO  Loading KITTI dataset
2021-06-20 01:27:05,931   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:27:05,933   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:27:05,933   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:27:05,993   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:27:06,143   INFO  ==> Done (loaded 127/127)
2021-06-20 01:28:08,892   INFO  Generate label finished(sec_per_example: 0.0166 second).
2021-06-20 01:28:08,892   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:28:08,892   INFO  recall_rcnn_0.3: 0.099544
2021-06-20 01:28:08,892   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:28:08,892   INFO  recall_rcnn_0.5: 0.015831
2021-06-20 01:28:08,893   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:28:08,893   INFO  recall_rcnn_0.7: 0.000569
2021-06-20 01:28:08,896   INFO  Average predicted number of objects(3769 samples): 281.094
2021-06-20 01:29:31,022   INFO  **********************Start logging**********************
2021-06-20 01:29:31,023   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:29:31,023   INFO  total_batch_size: 8
2021-06-20 01:29:31,023   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:29:31,023   INFO  batch_size       4
2021-06-20 01:29:31,023   INFO  epochs           1
2021-06-20 01:29:31,023   INFO  workers          8
2021-06-20 01:29:31,023   INFO  extra_tag        default
2021-06-20 01:29:31,023   INFO  ckpt             None
2021-06-20 01:29:31,023   INFO  pretrained_model None
2021-06-20 01:29:31,023   INFO  launcher         pytorch
2021-06-20 01:29:31,023   INFO  tcp_port         18888
2021-06-20 01:29:31,024   INFO  sync_bn          False
2021-06-20 01:29:31,024   INFO  fix_random_seed  False
2021-06-20 01:29:31,024   INFO  ckpt_save_interval 1
2021-06-20 01:29:31,024   INFO  local_rank       0
2021-06-20 01:29:31,024   INFO  max_ckpt_save_num 30
2021-06-20 01:29:31,024   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:29:31,024   INFO  set_cfgs         None
2021-06-20 01:29:31,024   INFO  max_waiting_mins 0
2021-06-20 01:29:31,024   INFO  start_epoch      0
2021-06-20 01:29:31,024   INFO  save_to_file     False
2021-06-20 01:29:31,024   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:29:31,024   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:29:31,024   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:29:31,025   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:29:31,025   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:29:31,025   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:29:31,025   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:29:31,025   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:29:31,026   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:29:31,026   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:29:31,026   INFO  
cfg.MODEL = edict()
2021-06-20 01:29:31,026   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:29:31,026   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:29:31,026   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:29:31,027   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:29:31,027   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:29:31,027   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:29:31,027   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:29:31,027   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:29:31,027   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:29:31,027   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:29:31,027   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:29:31,027   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:29:31,028   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:29:31,028   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:29:31,028   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:29:31,029   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:29:31,029   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:29:31,029   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:29:31,029   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:29:31,029   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:29:31,029   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:29:31,029   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:29:31,029   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:29:31,030   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:29:31,030   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:29:31,030   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:29:31,030   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:29:31,030   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:29:31,030   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:29:31,030   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:29:31,030   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:29:31,031   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:29:31,031   INFO  cfg.TAG: pointpillar
2021-06-20 01:29:31,031   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:29:31,565   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:29:31,566   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:29:31,567   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:29:31,608   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:29:31,619   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:29:31,626   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:29:31,642   INFO  Loading KITTI dataset
2021-06-20 01:29:31,831   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:29:31,832   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:29:31,918   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:29:31,920   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:29:32,157   INFO  **********************End training**********************
2021-06-20 01:29:32,161   INFO  Loading KITTI dataset
2021-06-20 01:29:32,331   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:29:32,332   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:29:32,332   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:29:32,389   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:29:32,536   INFO  ==> Done (loaded 127/127)
2021-06-20 01:30:41,328   INFO  Generate label finished(sec_per_example: 0.0182 second).
2021-06-20 01:30:41,328   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:30:41,329   INFO  recall_rcnn_0.3: 0.242597
2021-06-20 01:30:41,329   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:30:41,329   INFO  recall_rcnn_0.5: 0.053872
2021-06-20 01:30:41,329   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:30:41,329   INFO  recall_rcnn_0.7: 0.004841
2021-06-20 01:30:41,343   INFO  Average predicted number of objects(3769 samples): 175.513
2021-06-20 01:33:15,759   INFO  ----------------Noise Experiment----------------
2021-06-20 01:33:15,760   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:33:15,808   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:33:15,969   INFO  ==> Done (loaded 127/127)
2021-06-20 01:35:12,822   INFO  **********************Start logging**********************
2021-06-20 01:35:12,822   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:35:12,823   INFO  total_batch_size: 8
2021-06-20 01:35:12,823   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:35:12,823   INFO  batch_size       4
2021-06-20 01:35:12,823   INFO  epochs           1
2021-06-20 01:35:12,823   INFO  workers          8
2021-06-20 01:35:12,824   INFO  extra_tag        default
2021-06-20 01:35:12,824   INFO  ckpt             None
2021-06-20 01:35:12,824   INFO  pretrained_model None
2021-06-20 01:35:12,824   INFO  launcher         pytorch
2021-06-20 01:35:12,824   INFO  tcp_port         18888
2021-06-20 01:35:12,825   INFO  sync_bn          False
2021-06-20 01:35:12,825   INFO  fix_random_seed  False
2021-06-20 01:35:12,825   INFO  ckpt_save_interval 1
2021-06-20 01:35:12,825   INFO  local_rank       0
2021-06-20 01:35:12,825   INFO  max_ckpt_save_num 30
2021-06-20 01:35:12,825   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:35:12,826   INFO  set_cfgs         None
2021-06-20 01:35:12,826   INFO  max_waiting_mins 0
2021-06-20 01:35:12,826   INFO  start_epoch      0
2021-06-20 01:35:12,826   INFO  save_to_file     False
2021-06-20 01:35:12,826   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:35:12,827   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:35:12,827   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:35:12,827   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:35:12,827   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:35:12,827   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:35:12,828   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:35:12,828   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:35:12,828   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:35:12,828   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:35:12,828   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:35:12,828   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:35:12,829   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:35:12,829   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:35:12,829   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:35:12,829   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:35:12,829   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:35:12,830   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:35:12,830   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:35:12,830   INFO  
cfg.MODEL = edict()
2021-06-20 01:35:12,830   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:35:12,830   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:35:12,831   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:35:12,831   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:35:12,831   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:35:12,831   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:35:12,831   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:35:12,831   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:35:12,831   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:35:12,831   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:35:12,831   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:35:12,831   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:35:12,831   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:35:12,831   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:35:12,832   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:35:12,832   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:35:12,832   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:35:12,832   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:35:12,832   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:35:12,832   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:35:12,833   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:35:12,833   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:35:12,833   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:35:12,834   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:35:12,834   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:35:12,834   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:35:12,834   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:35:12,834   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:35:12,835   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:35:12,836   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:35:12,836   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:35:12,836   INFO  cfg.TAG: pointpillar
2021-06-20 01:35:12,836   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:35:13,314   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:35:13,315   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:35:13,315   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:35:13,355   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:35:13,361   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:35:13,363   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:35:13,373   INFO  Loading KITTI dataset
2021-06-20 01:35:13,530   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:35:13,531   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:35:13,611   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:35:13,613   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:35:13,836   INFO  **********************End training**********************
2021-06-20 01:35:13,839   INFO  Loading KITTI dataset
2021-06-20 01:35:14,001   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:35:14,002   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:35:14,003   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:35:14,057   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:35:14,203   INFO  ==> Done (loaded 127/127)
2021-06-20 01:36:15,980   INFO  Generate label finished(sec_per_example: 0.0164 second).
2021-06-20 01:36:15,981   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:36:15,982   INFO  recall_rcnn_0.3: 0.147039
2021-06-20 01:36:15,982   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:36:15,982   INFO  recall_rcnn_0.5: 0.029897
2021-06-20 01:36:15,983   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:36:15,983   INFO  recall_rcnn_0.7: 0.002506
2021-06-20 01:36:15,988   INFO  Average predicted number of objects(3769 samples): 73.675
2021-06-20 01:37:42,651   INFO  Loading KITTI dataset
2021-06-20 01:37:42,869   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:37:42,901   INFO  ----------------Noise Experiment----------------
2021-06-20 01:37:42,908   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:37:42,946   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:37:43,110   INFO  ==> Done (loaded 127/127)
2021-06-20 01:40:31,293   INFO  **********************Start logging**********************
2021-06-20 01:40:31,293   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:40:31,293   INFO  total_batch_size: 8
2021-06-20 01:40:31,293   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:40:31,293   INFO  batch_size       4
2021-06-20 01:40:31,294   INFO  epochs           1
2021-06-20 01:40:31,294   INFO  workers          8
2021-06-20 01:40:31,294   INFO  extra_tag        default
2021-06-20 01:40:31,294   INFO  ckpt             None
2021-06-20 01:40:31,294   INFO  pretrained_model None
2021-06-20 01:40:31,294   INFO  launcher         pytorch
2021-06-20 01:40:31,294   INFO  tcp_port         18888
2021-06-20 01:40:31,294   INFO  sync_bn          False
2021-06-20 01:40:31,294   INFO  fix_random_seed  False
2021-06-20 01:40:31,294   INFO  ckpt_save_interval 1
2021-06-20 01:40:31,294   INFO  local_rank       0
2021-06-20 01:40:31,294   INFO  max_ckpt_save_num 30
2021-06-20 01:40:31,294   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:40:31,294   INFO  set_cfgs         None
2021-06-20 01:40:31,295   INFO  max_waiting_mins 0
2021-06-20 01:40:31,295   INFO  start_epoch      0
2021-06-20 01:40:31,295   INFO  save_to_file     False
2021-06-20 01:40:31,295   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:40:31,295   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:40:31,295   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:40:31,295   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:40:31,295   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:40:31,295   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:40:31,295   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:40:31,295   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:40:31,295   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:40:31,296   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:40:31,296   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:40:31,296   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:40:31,296   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:40:31,297   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:40:31,297   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:40:31,297   INFO  
cfg.MODEL = edict()
2021-06-20 01:40:31,297   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:40:31,297   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:40:31,297   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:40:31,297   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:40:31,297   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:40:31,297   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:40:31,297   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:40:31,297   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:40:31,297   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:40:31,298   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:40:31,298   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:40:31,298   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:40:31,298   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:40:31,298   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:40:31,298   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:40:31,298   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:40:31,298   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:40:31,299   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:40:31,299   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:40:31,299   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:40:31,299   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:40:31,300   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:40:31,300   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:40:31,300   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:40:31,300   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:40:31,300   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:40:31,300   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:40:31,301   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:40:31,301   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:40:31,301   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:40:31,302   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:40:31,302   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:40:31,302   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:40:31,302   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:40:31,302   INFO  cfg.TAG: pointpillar
2021-06-20 01:40:31,302   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:40:31,850   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:40:31,851   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:40:31,852   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:40:31,892   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:40:31,899   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:40:31,902   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:40:31,912   INFO  Loading KITTI dataset
2021-06-20 01:40:32,099   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:40:32,101   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:40:32,184   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:40:32,186   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:40:32,403   INFO  **********************End training**********************
2021-06-20 01:40:32,468   INFO  Loading KITTI dataset
2021-06-20 01:40:32,670   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:40:32,671   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:40:32,672   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:40:32,723   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:40:32,858   INFO  ==> Done (loaded 127/127)
2021-06-20 01:40:54,563   INFO  **********************Start logging**********************
2021-06-20 01:40:54,563   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:40:54,564   INFO  total_batch_size: 8
2021-06-20 01:40:54,564   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:40:54,564   INFO  batch_size       4
2021-06-20 01:40:54,564   INFO  epochs           1
2021-06-20 01:40:54,564   INFO  workers          8
2021-06-20 01:40:54,564   INFO  extra_tag        default
2021-06-20 01:40:54,564   INFO  ckpt             None
2021-06-20 01:40:54,564   INFO  pretrained_model None
2021-06-20 01:40:54,564   INFO  launcher         pytorch
2021-06-20 01:40:54,564   INFO  tcp_port         18888
2021-06-20 01:40:54,564   INFO  sync_bn          False
2021-06-20 01:40:54,564   INFO  fix_random_seed  False
2021-06-20 01:40:54,564   INFO  ckpt_save_interval 1
2021-06-20 01:40:54,564   INFO  local_rank       0
2021-06-20 01:40:54,564   INFO  max_ckpt_save_num 30
2021-06-20 01:40:54,564   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:40:54,565   INFO  set_cfgs         None
2021-06-20 01:40:54,565   INFO  max_waiting_mins 0
2021-06-20 01:40:54,565   INFO  start_epoch      0
2021-06-20 01:40:54,565   INFO  save_to_file     False
2021-06-20 01:40:54,565   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:40:54,565   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:40:54,565   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:40:54,565   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:40:54,565   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:40:54,565   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:40:54,565   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:40:54,565   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:40:54,565   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:40:54,565   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:40:54,565   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:40:54,566   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:40:54,566   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:40:54,566   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:40:54,566   INFO  
cfg.MODEL = edict()
2021-06-20 01:40:54,566   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:40:54,567   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:40:54,567   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:40:54,567   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:40:54,567   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:40:54,567   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:40:54,567   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:40:54,567   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:40:54,567   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:40:54,567   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:40:54,567   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:40:54,567   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:40:54,567   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:40:54,568   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:40:54,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:40:54,568   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:40:54,569   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:40:54,569   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:40:54,569   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:40:54,569   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:40:54,569   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:40:54,569   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:40:54,569   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:40:54,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:40:54,570   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:40:54,570   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:40:54,570   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:40:54,571   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:40:54,571   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:40:54,571   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:40:54,571   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:40:54,571   INFO  cfg.TAG: pointpillar
2021-06-20 01:40:54,571   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:40:55,024   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:40:55,025   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:40:55,025   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:40:55,065   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:40:55,071   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:40:55,074   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:40:55,084   INFO  Loading KITTI dataset
2021-06-20 01:40:55,242   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:40:55,243   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:40:55,325   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:40:55,327   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:40:55,559   INFO  **********************End training**********************
2021-06-20 01:40:55,562   INFO  Loading KITTI dataset
2021-06-20 01:40:55,724   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:40:55,726   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:40:55,726   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:40:55,778   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:40:55,925   INFO  ==> Done (loaded 127/127)
2021-06-20 01:42:01,117   INFO  Generate label finished(sec_per_example: 0.0173 second).
2021-06-20 01:42:01,117   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:42:01,118   INFO  recall_rcnn_0.3: 0.082802
2021-06-20 01:42:01,118   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:42:01,118   INFO  recall_rcnn_0.5: 0.013041
2021-06-20 01:42:01,118   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:42:01,118   INFO  recall_rcnn_0.7: 0.000171
2021-06-20 01:42:01,121   INFO  Average predicted number of objects(3769 samples): 476.536
2021-06-20 01:48:36,404   INFO  ----------------Noise Experiment----------------
2021-06-20 01:48:36,405   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:48:36,448   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:48:36,615   INFO  ==> Done (loaded 127/127)
2021-06-20 01:49:37,903   INFO  Generate label finished(sec_per_example: 0.0162 second).
2021-06-20 01:49:37,904   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:49:37,904   INFO  recall_rcnn_0.3: 0.820843
2021-06-20 01:49:37,904   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:49:37,904   INFO  recall_rcnn_0.5: 0.662073
2021-06-20 01:49:37,904   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:49:37,904   INFO  recall_rcnn_0.7: 0.282517
2021-06-20 01:49:37,907   INFO  Average predicted number of objects(3769 samples): 18.886
2021-06-20 01:50:13,487   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:50:13,530   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:50:13,679   INFO  ==> Done (loaded 127/127)
2021-06-20 01:51:31,489   INFO  Generate label finished(sec_per_example: 0.0206 second).
2021-06-20 01:51:31,490   INFO  recall_roi_0.3: 0.000000
2021-06-20 01:51:31,490   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 01:51:31,490   INFO  recall_roi_0.5: 0.000000
2021-06-20 01:51:31,490   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 01:51:31,490   INFO  recall_roi_0.7: 0.000000
2021-06-20 01:51:31,491   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 01:51:31,496   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 01:57:44,049   INFO  **********************Start logging**********************
2021-06-20 01:57:44,049   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:57:44,049   INFO  total_batch_size: 8
2021-06-20 01:57:44,049   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:57:44,049   INFO  batch_size       4
2021-06-20 01:57:44,049   INFO  epochs           1
2021-06-20 01:57:44,050   INFO  workers          8
2021-06-20 01:57:44,050   INFO  extra_tag        default
2021-06-20 01:57:44,050   INFO  ckpt             None
2021-06-20 01:57:44,050   INFO  pretrained_model None
2021-06-20 01:57:44,050   INFO  launcher         pytorch
2021-06-20 01:57:44,050   INFO  tcp_port         18888
2021-06-20 01:57:44,050   INFO  sync_bn          False
2021-06-20 01:57:44,050   INFO  fix_random_seed  False
2021-06-20 01:57:44,050   INFO  ckpt_save_interval 1
2021-06-20 01:57:44,050   INFO  local_rank       0
2021-06-20 01:57:44,050   INFO  max_ckpt_save_num 30
2021-06-20 01:57:44,050   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:57:44,050   INFO  set_cfgs         None
2021-06-20 01:57:44,050   INFO  max_waiting_mins 0
2021-06-20 01:57:44,050   INFO  start_epoch      0
2021-06-20 01:57:44,051   INFO  save_to_file     False
2021-06-20 01:57:44,051   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:57:44,051   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:57:44,051   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:57:44,051   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:57:44,051   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:57:44,051   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:57:44,051   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:57:44,052   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:57:44,052   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:57:44,052   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:57:44,052   INFO  
cfg.MODEL = edict()
2021-06-20 01:57:44,052   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:57:44,052   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:57:44,052   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:57:44,053   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:57:44,053   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:57:44,053   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:57:44,053   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 01:57:44,053   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:57:44,053   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:57:44,053   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:57:44,053   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:57:44,053   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:57:44,053   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:57:44,054   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:57:44,054   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:57:44,054   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:57:44,055   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:57:44,055   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:57:44,055   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:57:44,055   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:57:44,055   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:57:44,056   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:57:44,056   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:57:44,056   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:57:44,056   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:57:44,056   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:57:44,056   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:57:44,057   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:57:44,058   INFO  cfg.TAG: pointpillar
2021-06-20 01:57:44,058   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:57:44,366   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:58:16,769   INFO  **********************Start logging**********************
2021-06-20 01:58:16,769   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:58:16,769   INFO  total_batch_size: 8
2021-06-20 01:58:16,769   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:58:16,769   INFO  batch_size       4
2021-06-20 01:58:16,769   INFO  epochs           1
2021-06-20 01:58:16,769   INFO  workers          8
2021-06-20 01:58:16,770   INFO  extra_tag        default
2021-06-20 01:58:16,770   INFO  ckpt             None
2021-06-20 01:58:16,770   INFO  pretrained_model None
2021-06-20 01:58:16,770   INFO  launcher         pytorch
2021-06-20 01:58:16,770   INFO  tcp_port         18888
2021-06-20 01:58:16,770   INFO  sync_bn          False
2021-06-20 01:58:16,770   INFO  fix_random_seed  False
2021-06-20 01:58:16,770   INFO  ckpt_save_interval 1
2021-06-20 01:58:16,770   INFO  local_rank       0
2021-06-20 01:58:16,770   INFO  max_ckpt_save_num 30
2021-06-20 01:58:16,770   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:58:16,770   INFO  set_cfgs         None
2021-06-20 01:58:16,770   INFO  max_waiting_mins 0
2021-06-20 01:58:16,770   INFO  start_epoch      0
2021-06-20 01:58:16,771   INFO  save_to_file     False
2021-06-20 01:58:16,771   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:58:16,771   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:58:16,771   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:58:16,771   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:58:16,771   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:58:16,771   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:58:16,771   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:58:16,772   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:58:16,772   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:58:16,772   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:58:16,772   INFO  
cfg.MODEL = edict()
2021-06-20 01:58:16,773   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:58:16,773   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 01:58:16,773   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:58:16,773   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:58:16,773   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:58:16,773   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:58:16,773   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:58:16,773   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:58:16,773   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:58:16,774   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:58:16,774   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:58:16,774   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:58:16,774   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:58:16,774   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:58:16,774   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:58:16,774   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:58:16,775   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:58:16,775   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:58:16,775   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:58:16,775   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:58:16,776   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:58:16,776   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:58:16,776   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:58:16,776   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:58:16,776   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:58:16,777   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:58:16,777   INFO  cfg.TAG: pointpillar
2021-06-20 01:58:16,778   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:58:17,015   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:58:58,455   INFO  **********************Start logging**********************
2021-06-20 01:58:58,455   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 01:58:58,455   INFO  total_batch_size: 8
2021-06-20 01:58:58,455   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 01:58:58,455   INFO  batch_size       4
2021-06-20 01:58:58,456   INFO  epochs           1
2021-06-20 01:58:58,456   INFO  workers          8
2021-06-20 01:58:58,456   INFO  extra_tag        default
2021-06-20 01:58:58,456   INFO  ckpt             None
2021-06-20 01:58:58,456   INFO  pretrained_model None
2021-06-20 01:58:58,456   INFO  launcher         pytorch
2021-06-20 01:58:58,456   INFO  tcp_port         18888
2021-06-20 01:58:58,456   INFO  sync_bn          False
2021-06-20 01:58:58,456   INFO  fix_random_seed  False
2021-06-20 01:58:58,456   INFO  ckpt_save_interval 1
2021-06-20 01:58:58,456   INFO  local_rank       0
2021-06-20 01:58:58,456   INFO  max_ckpt_save_num 30
2021-06-20 01:58:58,456   INFO  merge_all_iters_to_one_epoch False
2021-06-20 01:58:58,456   INFO  set_cfgs         None
2021-06-20 01:58:58,456   INFO  max_waiting_mins 0
2021-06-20 01:58:58,456   INFO  start_epoch      0
2021-06-20 01:58:58,456   INFO  save_to_file     False
2021-06-20 01:58:58,456   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 01:58:58,457   INFO  cfg.LOCAL_RANK: 0
2021-06-20 01:58:58,457   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 01:58:58,457   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 01:58:58,457   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 01:58:58,457   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 01:58:58,457   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 01:58:58,457   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 01:58:58,458   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 01:58:58,458   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 01:58:58,458   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:58:58,458   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 01:58:58,458   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 01:58:58,458   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 01:58:58,458   INFO  
cfg.MODEL = edict()
2021-06-20 01:58:58,458   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 01:58:58,458   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 01:58:58,458   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 01:58:58,458   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 01:58:58,458   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 01:58:58,458   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 01:58:58,459   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 01:58:58,459   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 01:58:58,459   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 01:58:58,459   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 01:58:58,459   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 01:58:58,460   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 01:58:58,460   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 01:58:58,460   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 01:58:58,460   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 01:58:58,460   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 01:58:58,460   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 01:58:58,460   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 01:58:58,460   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 01:58:58,460   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 01:58:58,460   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 01:58:58,461   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 01:58:58,461   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 01:58:58,461   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 01:58:58,461   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 01:58:58,461   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 01:58:58,461   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 01:58:58,462   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 01:58:58,462   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 01:58:58,462   INFO  cfg.TAG: pointpillar
2021-06-20 01:58:58,462   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 01:58:58,706   INFO  ----------------Bayes Optimization----------------
2021-06-20 01:58:58,917   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 01:58:58,918   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 01:58:58,918   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 01:58:58,959   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 01:58:58,966   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 01:58:58,968   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 01:58:58,979   INFO  Loading KITTI dataset
2021-06-20 01:58:59,134   INFO  Total samples for KITTI dataset: 3712
2021-06-20 01:58:59,211   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 01:58:59,213   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 01:58:59,472   INFO  **********************End training**********************
2021-06-20 01:58:59,476   INFO  Loading KITTI dataset
2021-06-20 01:58:59,634   INFO  Total samples for KITTI dataset: 3769
2021-06-20 01:58:59,635   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 01:58:59,635   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 01:58:59,684   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 01:58:59,824   INFO  ==> Done (loaded 127/127)
2021-06-20 02:00:11,454   INFO  Generate label finished(sec_per_example: 0.0190 second).
2021-06-20 02:00:11,455   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:00:11,455   INFO  recall_rcnn_0.3: 0.044191
2021-06-20 02:00:11,455   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:00:11,455   INFO  recall_rcnn_0.5: 0.001822
2021-06-20 02:00:11,455   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:00:11,455   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:00:11,465   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 02:06:40,660   INFO  ----------------Noise Experiment----------------
2021-06-20 02:06:40,661   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:06:40,706   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:06:40,872   INFO  ==> Done (loaded 127/127)
2021-06-20 02:07:42,492   INFO  Generate label finished(sec_per_example: 0.0163 second).
2021-06-20 02:07:42,493   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:07:42,493   INFO  recall_rcnn_0.3: 0.820843
2021-06-20 02:07:42,493   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:07:42,493   INFO  recall_rcnn_0.5: 0.662073
2021-06-20 02:07:42,493   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:07:42,494   INFO  recall_rcnn_0.7: 0.282517
2021-06-20 02:07:42,497   INFO  Average predicted number of objects(3769 samples): 18.886
2021-06-20 02:08:16,655   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:08:16,699   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:08:16,841   INFO  ==> Done (loaded 127/127)
2021-06-20 02:09:30,559   INFO  Generate label finished(sec_per_example: 0.0195 second).
2021-06-20 02:09:30,559   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:09:30,559   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 02:09:30,560   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:09:30,560   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 02:09:30,560   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:09:30,560   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:09:30,563   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 02:20:53,930   INFO  **********************Start logging**********************
2021-06-20 02:20:53,931   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:20:53,931   INFO  total_batch_size: 8
2021-06-20 02:20:53,931   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:20:53,931   INFO  batch_size       4
2021-06-20 02:20:53,931   INFO  epochs           1
2021-06-20 02:20:53,931   INFO  workers          8
2021-06-20 02:20:53,931   INFO  extra_tag        default
2021-06-20 02:20:53,931   INFO  ckpt             None
2021-06-20 02:20:53,931   INFO  pretrained_model None
2021-06-20 02:20:53,931   INFO  launcher         pytorch
2021-06-20 02:20:53,931   INFO  tcp_port         18888
2021-06-20 02:20:53,931   INFO  sync_bn          False
2021-06-20 02:20:53,931   INFO  fix_random_seed  False
2021-06-20 02:20:53,931   INFO  ckpt_save_interval 1
2021-06-20 02:20:53,931   INFO  local_rank       0
2021-06-20 02:20:53,931   INFO  max_ckpt_save_num 30
2021-06-20 02:20:53,932   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:20:53,932   INFO  set_cfgs         None
2021-06-20 02:20:53,932   INFO  max_waiting_mins 0
2021-06-20 02:20:53,932   INFO  start_epoch      0
2021-06-20 02:20:53,932   INFO  save_to_file     False
2021-06-20 02:20:53,932   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:20:53,932   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:20:53,932   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:20:53,932   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:20:53,932   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:20:53,932   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:20:53,932   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:20:53,932   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:20:53,932   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:20:53,932   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:20:53,932   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:20:53,933   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:20:53,933   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:20:53,933   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:20:53,933   INFO  
cfg.MODEL = edict()
2021-06-20 02:20:53,933   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:20:53,934   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 02:20:53,934   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:20:53,934   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:20:53,934   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:20:53,934   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:20:53,934   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:20:53,934   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:20:53,935   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:20:53,935   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:20:53,935   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:20:53,935   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:20:53,935   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:20:53,935   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:20:53,935   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:20:53,936   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:20:53,936   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:20:53,936   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:20:53,936   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:20:53,937   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:20:53,937   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:20:53,937   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:20:53,937   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:20:53,937   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:20:53,938   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:20:53,938   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:20:53,939   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:20:53,939   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:20:53,939   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:20:53,939   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:20:53,939   INFO  cfg.TAG: pointpillar
2021-06-20 02:20:53,939   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:20:54,231   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:20:54,450   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:20:54,451   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:20:54,451   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:20:54,492   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:20:54,499   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:20:54,502   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:20:54,514   INFO  Loading KITTI dataset
2021-06-20 02:20:54,671   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:20:54,755   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:20:54,757   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:20:54,970   INFO  **********************End training**********************
2021-06-20 02:20:54,974   INFO  Loading KITTI dataset
2021-06-20 02:20:55,146   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:20:55,147   INFO  ----------------Noise Experiment----------------
2021-06-20 02:20:55,148   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:20:55,203   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:20:55,355   INFO  ==> Done (loaded 127/127)
2021-06-20 02:21:55,677   INFO  Generate label finished(sec_per_example: 0.0160 second).
2021-06-20 02:21:55,677   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:21:55,677   INFO  recall_rcnn_0.3: 0.820843
2021-06-20 02:21:55,677   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:21:55,677   INFO  recall_rcnn_0.5: 0.662073
2021-06-20 02:21:55,677   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:21:55,677   INFO  recall_rcnn_0.7: 0.282517
2021-06-20 02:21:55,680   INFO  Average predicted number of objects(3769 samples): 18.886
2021-06-20 02:22:44,313   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:22:44,360   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:22:44,502   INFO  ==> Done (loaded 127/127)
2021-06-20 02:23:45,958   INFO  Generate label finished(sec_per_example: 0.0163 second).
2021-06-20 02:23:45,959   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:23:45,959   INFO  recall_rcnn_0.3: 0.668736
2021-06-20 02:23:45,959   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:23:45,959   INFO  recall_rcnn_0.5: 0.443964
2021-06-20 02:23:45,959   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:23:45,959   INFO  recall_rcnn_0.7: 0.084226
2021-06-20 02:23:45,962   INFO  Average predicted number of objects(3769 samples): 81.058
2021-06-20 02:25:09,151   INFO  **********************End evaluation**********************
2021-06-20 02:25:09,414   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:25:09,415   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:25:09,416   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:25:09,455   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:25:09,462   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:25:09,464   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:25:09,477   INFO  Loading KITTI dataset
2021-06-20 02:25:09,634   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:25:09,715   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:25:09,717   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:25:09,953   INFO  **********************End training**********************
2021-06-20 02:25:10,009   INFO  Loading KITTI dataset
2021-06-20 02:25:10,199   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:25:10,199   INFO  ----------------Noise Experiment----------------
2021-06-20 02:38:10,130   INFO  **********************Start logging**********************
2021-06-20 02:38:10,130   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:38:10,130   INFO  total_batch_size: 8
2021-06-20 02:38:10,131   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:38:10,131   INFO  batch_size       4
2021-06-20 02:38:10,131   INFO  epochs           1
2021-06-20 02:38:10,131   INFO  workers          8
2021-06-20 02:38:10,131   INFO  extra_tag        default
2021-06-20 02:38:10,131   INFO  ckpt             None
2021-06-20 02:38:10,132   INFO  pretrained_model None
2021-06-20 02:38:10,132   INFO  launcher         pytorch
2021-06-20 02:38:10,132   INFO  tcp_port         18888
2021-06-20 02:38:10,132   INFO  sync_bn          False
2021-06-20 02:38:10,132   INFO  fix_random_seed  False
2021-06-20 02:38:10,133   INFO  ckpt_save_interval 1
2021-06-20 02:38:10,133   INFO  local_rank       0
2021-06-20 02:38:10,133   INFO  max_ckpt_save_num 30
2021-06-20 02:38:10,133   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:38:10,133   INFO  set_cfgs         None
2021-06-20 02:38:10,133   INFO  max_waiting_mins 0
2021-06-20 02:38:10,134   INFO  start_epoch      0
2021-06-20 02:38:10,134   INFO  save_to_file     False
2021-06-20 02:38:10,134   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:38:10,134   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:38:10,134   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:38:10,135   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:38:10,135   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:38:10,135   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:38:10,135   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:38:10,135   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:38:10,135   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:38:10,136   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:38:10,136   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:38:10,136   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:38:10,136   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:38:10,136   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:38:10,137   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:38:10,137   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:38:10,137   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:38:10,137   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:38:10,137   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:38:10,138   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:38:10,138   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:38:10,138   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:38:10,138   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:38:10,138   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:38:10,139   INFO  
cfg.MODEL = edict()
2021-06-20 02:38:10,139   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:38:10,139   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:38:10,139   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:38:10,139   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:38:10,139   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:38:10,140   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:38:10,140   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 02:38:10,140   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:38:10,140   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:38:10,140   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:38:10,141   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:38:10,141   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:38:10,141   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:38:10,141   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:38:10,141   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:38:10,141   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:38:10,142   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:38:10,142   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:38:10,142   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:38:10,142   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:38:10,143   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:38:10,143   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:38:10,143   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:38:10,143   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:38:10,143   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:38:10,144   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:38:10,144   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:38:10,144   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:38:10,144   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:38:10,144   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:38:10,145   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:38:10,145   INFO  cfg.TAG: pointpillar
2021-06-20 02:38:10,146   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:38:10,402   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:38:10,668   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:38:10,669   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:38:10,669   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:38:10,716   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:38:10,723   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:38:10,725   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:38:10,736   INFO  Loading KITTI dataset
2021-06-20 02:38:10,889   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:38:10,969   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:38:10,971   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:38:11,194   INFO  **********************End training**********************
2021-06-20 02:38:11,197   INFO  Loading KITTI dataset
2021-06-20 02:38:11,403   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:38:11,404   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 02:38:11,404   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:38:43,000   INFO  **********************Start logging**********************
2021-06-20 02:38:43,000   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:38:43,000   INFO  total_batch_size: 8
2021-06-20 02:38:43,000   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:38:43,000   INFO  batch_size       4
2021-06-20 02:38:43,000   INFO  epochs           1
2021-06-20 02:38:43,001   INFO  workers          8
2021-06-20 02:38:43,001   INFO  extra_tag        default
2021-06-20 02:38:43,001   INFO  ckpt             None
2021-06-20 02:38:43,001   INFO  pretrained_model None
2021-06-20 02:38:43,001   INFO  launcher         pytorch
2021-06-20 02:38:43,001   INFO  tcp_port         18888
2021-06-20 02:38:43,001   INFO  sync_bn          False
2021-06-20 02:38:43,001   INFO  fix_random_seed  False
2021-06-20 02:38:43,001   INFO  ckpt_save_interval 1
2021-06-20 02:38:43,001   INFO  local_rank       0
2021-06-20 02:38:43,001   INFO  max_ckpt_save_num 30
2021-06-20 02:38:43,001   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:38:43,001   INFO  set_cfgs         None
2021-06-20 02:38:43,002   INFO  max_waiting_mins 0
2021-06-20 02:38:43,002   INFO  start_epoch      0
2021-06-20 02:38:43,002   INFO  save_to_file     False
2021-06-20 02:38:43,002   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:38:43,002   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:38:43,002   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:38:43,002   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:38:43,002   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:38:43,002   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:38:43,002   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:38:43,002   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:38:43,002   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:38:43,003   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:38:43,003   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:38:43,003   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:38:43,003   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:38:43,004   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:38:43,004   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:38:43,004   INFO  
cfg.MODEL = edict()
2021-06-20 02:38:43,004   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:38:43,004   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.USE_BAYES: True
2021-06-20 02:38:43,004   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:38:43,004   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:38:43,005   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:38:43,005   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:38:43,005   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:38:43,005   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:38:43,005   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:38:43,005   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:38:43,005   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:38:43,005   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:38:43,006   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:38:43,006   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:38:43,006   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:38:43,007   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:38:43,007   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:38:43,007   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:38:43,007   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:38:43,007   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:38:43,007   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:38:43,007   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:38:43,007   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:38:43,008   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:38:43,008   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:38:43,008   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:38:43,008   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:38:43,008   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:38:43,009   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:38:43,009   INFO  cfg.TAG: pointpillar
2021-06-20 02:38:43,009   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:38:43,295   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:38:43,520   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:38:43,521   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:38:43,521   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:38:43,560   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:38:43,567   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:38:43,569   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:38:43,579   INFO  Loading KITTI dataset
2021-06-20 02:38:43,724   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:38:43,803   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:38:43,805   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:38:44,029   INFO  **********************End training**********************
2021-06-20 02:38:44,032   INFO  Loading KITTI dataset
2021-06-20 02:38:44,187   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:38:44,188   INFO  ----------------Noise-0.4-evaluate----------------
2021-06-20 02:38:44,189   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 02:38:44,203   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:38:44,340   INFO  ==> Done (loaded 127/127)
2021-06-20 02:40:11,438   INFO  Generate label finished(sec_per_example: 0.0231 second).
2021-06-20 02:40:11,439   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:40:11,439   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 02:40:11,439   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:40:11,439   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 02:40:11,439   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:40:11,439   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:40:11,442   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 02:46:19,061   INFO  **********************Start logging**********************
2021-06-20 02:46:19,061   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:46:19,061   INFO  total_batch_size: 8
2021-06-20 02:46:19,061   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:46:19,061   INFO  batch_size       4
2021-06-20 02:46:19,061   INFO  epochs           1
2021-06-20 02:46:19,061   INFO  workers          8
2021-06-20 02:46:19,061   INFO  extra_tag        default
2021-06-20 02:46:19,061   INFO  ckpt             None
2021-06-20 02:46:19,061   INFO  pretrained_model None
2021-06-20 02:46:19,061   INFO  launcher         pytorch
2021-06-20 02:46:19,062   INFO  tcp_port         18888
2021-06-20 02:46:19,062   INFO  sync_bn          False
2021-06-20 02:46:19,062   INFO  fix_random_seed  False
2021-06-20 02:46:19,062   INFO  ckpt_save_interval 1
2021-06-20 02:46:19,062   INFO  local_rank       0
2021-06-20 02:46:19,062   INFO  max_ckpt_save_num 30
2021-06-20 02:46:19,062   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:46:19,062   INFO  set_cfgs         None
2021-06-20 02:46:19,062   INFO  max_waiting_mins 0
2021-06-20 02:46:19,062   INFO  start_epoch      0
2021-06-20 02:46:19,062   INFO  save_to_file     False
2021-06-20 02:46:19,062   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:46:19,062   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:46:19,062   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:46:19,062   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:46:19,062   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:46:19,063   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:46:19,063   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:46:19,063   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:46:19,063   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:46:19,063   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:46:19,064   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:46:19,064   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:46:19,064   INFO  
cfg.MODEL = edict()
2021-06-20 02:46:19,064   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:46:19,064   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:46:19,064   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:46:19,064   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:46:19,064   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:46:19,064   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:46:19,064   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:46:19,064   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:46:19,064   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:46:19,064   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:46:19,064   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:46:19,064   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:46:19,064   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:46:19,064   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:46:19,064   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:46:19,064   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:46:19,065   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:46:19,065   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:46:19,065   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:46:19,065   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:46:19,065   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:46:19,066   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:46:19,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:46:19,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:46:19,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:46:19,066   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:46:19,066   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:46:19,066   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:46:19,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:46:19,066   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:46:19,066   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:46:19,067   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:46:19,067   INFO  cfg.TAG: pointpillar
2021-06-20 02:46:19,067   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:46:19,296   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:46:19,533   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:46:19,534   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:46:19,535   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:46:19,575   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:46:19,582   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:46:19,584   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:46:19,594   INFO  Loading KITTI dataset
2021-06-20 02:46:19,743   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:55:21,563   INFO  **********************Start logging**********************
2021-06-20 02:55:21,563   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:55:21,563   INFO  total_batch_size: 8
2021-06-20 02:55:21,563   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:55:21,564   INFO  batch_size       4
2021-06-20 02:55:21,564   INFO  epochs           1
2021-06-20 02:55:21,564   INFO  workers          8
2021-06-20 02:55:21,564   INFO  extra_tag        default
2021-06-20 02:55:21,564   INFO  ckpt             None
2021-06-20 02:55:21,564   INFO  pretrained_model None
2021-06-20 02:55:21,564   INFO  launcher         pytorch
2021-06-20 02:55:21,564   INFO  tcp_port         18888
2021-06-20 02:55:21,564   INFO  sync_bn          False
2021-06-20 02:55:21,564   INFO  fix_random_seed  False
2021-06-20 02:55:21,564   INFO  ckpt_save_interval 1
2021-06-20 02:55:21,564   INFO  local_rank       0
2021-06-20 02:55:21,564   INFO  max_ckpt_save_num 30
2021-06-20 02:55:21,564   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:55:21,564   INFO  set_cfgs         None
2021-06-20 02:55:21,564   INFO  max_waiting_mins 0
2021-06-20 02:55:21,564   INFO  start_epoch      0
2021-06-20 02:55:21,565   INFO  save_to_file     False
2021-06-20 02:55:21,565   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:55:21,565   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:55:21,565   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:55:21,565   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:55:21,565   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:55:21,565   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:55:21,565   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:55:21,566   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:55:21,566   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:55:21,566   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:55:21,566   INFO  
cfg.MODEL = edict()
2021-06-20 02:55:21,566   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:55:21,566   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:55:21,566   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:55:21,566   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:55:21,567   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:55:21,567   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:55:21,567   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:55:21,567   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:55:21,567   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:55:21,567   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:55:21,567   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:55:21,567   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:55:21,567   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:55:21,567   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:55:21,567   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:55:21,567   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:55:21,568   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:55:21,568   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:55:21,568   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:55:21,568   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:55:21,569   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:55:21,569   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:55:21,569   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:55:21,569   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:55:21,569   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:55:21,569   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:55:21,569   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:55:21,570   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:55:21,571   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:55:21,571   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:55:21,571   INFO  cfg.TAG: pointpillar
2021-06-20 02:55:21,571   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:55:21,803   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:55:22,013   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:55:22,013   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:55:22,014   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:55:22,055   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:55:22,062   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:55:22,064   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:55:22,075   INFO  Loading KITTI dataset
2021-06-20 02:55:22,274   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:56:03,992   INFO  **********************Start logging**********************
2021-06-20 02:56:03,992   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 02:56:03,992   INFO  total_batch_size: 8
2021-06-20 02:56:03,992   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 02:56:03,992   INFO  batch_size       4
2021-06-20 02:56:03,992   INFO  epochs           1
2021-06-20 02:56:03,992   INFO  workers          8
2021-06-20 02:56:03,992   INFO  extra_tag        default
2021-06-20 02:56:03,992   INFO  ckpt             None
2021-06-20 02:56:03,992   INFO  pretrained_model None
2021-06-20 02:56:03,993   INFO  launcher         pytorch
2021-06-20 02:56:03,993   INFO  tcp_port         18888
2021-06-20 02:56:03,993   INFO  sync_bn          False
2021-06-20 02:56:03,993   INFO  fix_random_seed  False
2021-06-20 02:56:03,993   INFO  ckpt_save_interval 1
2021-06-20 02:56:03,993   INFO  local_rank       0
2021-06-20 02:56:03,993   INFO  max_ckpt_save_num 30
2021-06-20 02:56:03,993   INFO  merge_all_iters_to_one_epoch False
2021-06-20 02:56:03,993   INFO  set_cfgs         None
2021-06-20 02:56:03,993   INFO  max_waiting_mins 0
2021-06-20 02:56:03,993   INFO  start_epoch      0
2021-06-20 02:56:03,993   INFO  save_to_file     False
2021-06-20 02:56:03,994   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 02:56:03,994   INFO  cfg.LOCAL_RANK: 0
2021-06-20 02:56:03,994   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 02:56:03,994   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 02:56:03,994   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 02:56:03,994   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 02:56:03,994   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 02:56:03,994   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 02:56:03,994   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 02:56:03,994   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 02:56:03,995   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 02:56:03,995   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 02:56:03,995   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 02:56:03,995   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 02:56:03,996   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:56:03,996   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 02:56:03,996   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 02:56:03,996   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 02:56:03,996   INFO  
cfg.MODEL = edict()
2021-06-20 02:56:03,996   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 02:56:03,996   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 02:56:03,996   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 02:56:03,996   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 02:56:03,997   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 02:56:03,997   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 02:56:03,997   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 02:56:03,997   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 02:56:03,997   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 02:56:03,997   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 02:56:03,997   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 02:56:03,997   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 02:56:03,997   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 02:56:03,997   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 02:56:03,998   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 02:56:03,998   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 02:56:03,998   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 02:56:03,998   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 02:56:03,998   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 02:56:03,999   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 02:56:03,999   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 02:56:03,999   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 02:56:04,000   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 02:56:04,000   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 02:56:04,000   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 02:56:04,000   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 02:56:04,000   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 02:56:04,000   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 02:56:04,000   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 02:56:04,000   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 02:56:04,000   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 02:56:04,000   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 02:56:04,001   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 02:56:04,001   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 02:56:04,001   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 02:56:04,001   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 02:56:04,001   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 02:56:04,001   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 02:56:04,001   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 02:56:04,001   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 02:56:04,001   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 02:56:04,001   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 02:56:04,002   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 02:56:04,003   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 02:56:04,003   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 02:56:04,003   INFO  cfg.TAG: pointpillar
2021-06-20 02:56:04,003   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 02:56:04,244   INFO  ----------------Bayes Optimization----------------
2021-06-20 02:56:04,465   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:56:04,466   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:56:04,467   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:56:04,508   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:56:04,515   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:56:04,517   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:56:04,528   INFO  Loading KITTI dataset
2021-06-20 02:56:04,686   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:56:04,789   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:56:04,792   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:56:05,098   INFO  **********************End training**********************
2021-06-20 02:56:05,100   INFO  Loading KITTI dataset
2021-06-20 02:56:05,274   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:56:05,275   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 02:56:05,275   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 02:56:05,289   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:56:05,437   INFO  ==> Done (loaded 127/127)
2021-06-20 02:56:58,218   INFO  Generate label finished(sec_per_example: 0.0140 second).
2021-06-20 02:56:58,218   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:56:58,219   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 02:56:58,219   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:56:58,219   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 02:56:58,220   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:56:58,220   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:56:58,225   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 02:57:21,185   INFO  ----------------Noise Experiment----------------
2021-06-20 02:57:21,186   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 02:57:21,209   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:57:21,376   INFO  ==> Done (loaded 127/127)
2021-06-20 02:58:15,098   INFO  Generate label finished(sec_per_example: 0.0142 second).
2021-06-20 02:58:15,098   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:58:15,098   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 02:58:15,098   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:58:15,099   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 02:58:15,099   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:58:15,099   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:58:15,102   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 02:58:27,639   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 02:58:27,655   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:58:27,803   INFO  ==> Done (loaded 127/127)
2021-06-20 02:59:20,997   INFO  Generate label finished(sec_per_example: 0.0141 second).
2021-06-20 02:59:20,997   INFO  recall_roi_0.3: 0.000000
2021-06-20 02:59:20,997   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 02:59:20,997   INFO  recall_roi_0.5: 0.000000
2021-06-20 02:59:20,998   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 02:59:20,998   INFO  recall_roi_0.7: 0.000000
2021-06-20 02:59:20,998   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 02:59:21,001   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 02:59:33,475   INFO  **********************End evaluation**********************
2021-06-20 02:59:33,752   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 02:59:33,754   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 02:59:33,754   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 02:59:33,794   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 02:59:33,801   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 02:59:33,804   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 02:59:33,817   INFO  Loading KITTI dataset
2021-06-20 02:59:33,981   INFO  Total samples for KITTI dataset: 3712
2021-06-20 02:59:34,051   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 02:59:34,053   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 02:59:34,716   INFO  **********************End training**********************
2021-06-20 02:59:34,721   INFO  Loading KITTI dataset
2021-06-20 02:59:34,892   INFO  Total samples for KITTI dataset: 3769
2021-06-20 02:59:34,894   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 02:59:34,894   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 02:59:34,910   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 02:59:35,056   INFO  ==> Done (loaded 127/127)
2021-06-20 03:00:28,170   INFO  Generate label finished(sec_per_example: 0.0141 second).
2021-06-20 03:00:28,171   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:00:28,171   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:00:28,171   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:00:28,171   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:00:28,171   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:00:28,171   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:00:28,175   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 03:00:40,649   INFO  ----------------Noise Experiment----------------
2021-06-20 03:00:40,650   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 03:00:40,670   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 03:00:40,821   INFO  ==> Done (loaded 127/127)
2021-06-20 03:01:35,156   INFO  Generate label finished(sec_per_example: 0.0144 second).
2021-06-20 03:01:35,157   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:01:35,157   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:01:35,157   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:01:35,157   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:01:35,157   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:01:35,158   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:01:35,160   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 03:01:48,121   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 03:01:48,141   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 03:01:48,290   INFO  ==> Done (loaded 127/127)
2021-06-20 03:02:45,036   INFO  Generate label finished(sec_per_example: 0.0150 second).
2021-06-20 03:02:45,037   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:02:45,037   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:02:45,038   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:02:45,038   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:02:45,038   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:02:45,038   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:02:45,043   INFO  Average predicted number of objects(3769 samples): 0.000
2021-06-20 03:02:57,033   INFO  **********************End evaluation**********************
2021-06-20 03:02:57,297   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 03:02:57,298   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 03:02:57,298   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 03:02:57,342   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 03:02:57,349   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 03:02:57,351   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 03:02:57,365   INFO  Loading KITTI dataset
2021-06-20 03:02:57,520   INFO  Total samples for KITTI dataset: 3712
2021-06-20 03:10:10,481   INFO  **********************Start logging**********************
2021-06-20 03:10:10,481   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 03:10:10,481   INFO  total_batch_size: 8
2021-06-20 03:10:10,481   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 03:10:10,481   INFO  batch_size       4
2021-06-20 03:10:10,481   INFO  epochs           1
2021-06-20 03:10:10,481   INFO  workers          8
2021-06-20 03:10:10,481   INFO  extra_tag        default
2021-06-20 03:10:10,482   INFO  ckpt             None
2021-06-20 03:10:10,482   INFO  pretrained_model None
2021-06-20 03:10:10,482   INFO  launcher         pytorch
2021-06-20 03:10:10,482   INFO  tcp_port         18888
2021-06-20 03:10:10,482   INFO  sync_bn          False
2021-06-20 03:10:10,482   INFO  fix_random_seed  False
2021-06-20 03:10:10,482   INFO  ckpt_save_interval 1
2021-06-20 03:10:10,482   INFO  local_rank       0
2021-06-20 03:10:10,482   INFO  max_ckpt_save_num 30
2021-06-20 03:10:10,482   INFO  merge_all_iters_to_one_epoch False
2021-06-20 03:10:10,482   INFO  set_cfgs         None
2021-06-20 03:10:10,482   INFO  max_waiting_mins 0
2021-06-20 03:10:10,482   INFO  start_epoch      0
2021-06-20 03:10:10,482   INFO  save_to_file     False
2021-06-20 03:10:10,482   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 03:10:10,482   INFO  cfg.LOCAL_RANK: 0
2021-06-20 03:10:10,483   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 03:10:10,483   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 03:10:10,483   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 03:10:10,483   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 03:10:10,483   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 03:10:10,483   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 03:10:10,484   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 03:10:10,484   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 03:10:10,484   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 03:10:10,484   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 03:10:10,484   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 03:10:10,484   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 03:10:10,484   INFO  
cfg.MODEL = edict()
2021-06-20 03:10:10,484   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 03:10:10,484   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 03:10:10,484   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 03:10:10,484   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 03:10:10,484   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 03:10:10,484   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 03:10:10,484   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 03:10:10,484   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 03:10:10,484   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 03:10:10,485   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 03:10:10,485   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 03:10:10,485   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 03:10:10,485   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 03:10:10,485   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 03:10:10,486   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 03:10:10,486   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 03:10:10,486   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 03:10:10,486   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 03:10:10,487   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 03:10:10,487   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 03:10:10,487   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 03:10:10,487   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 03:10:10,487   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 03:10:10,488   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 03:10:10,488   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 03:10:10,488   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 03:10:10,489   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 03:10:10,489   INFO  cfg.TAG: pointpillar
2021-06-20 03:10:10,489   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 03:10:10,784   INFO  ----------------Bayes Optimization----------------
2021-06-20 03:10:11,019   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 03:10:11,020   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 03:10:11,020   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 03:10:11,061   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 03:10:11,068   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 03:10:11,070   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 03:10:11,081   INFO  Loading KITTI dataset
2021-06-20 03:10:11,247   INFO  Total samples for KITTI dataset: 3712
2021-06-20 03:10:11,329   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 03:10:11,331   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 03:10:11,782   INFO  **********************End training**********************
2021-06-20 03:10:11,785   INFO  Loading KITTI dataset
2021-06-20 03:10:11,954   INFO  Total samples for KITTI dataset: 3769
2021-06-20 03:10:11,955   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 03:10:11,956   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 03:10:11,974   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 03:10:12,125   INFO  ==> Done (loaded 127/127)
2021-06-20 03:11:39,819   INFO  Generate label finished(sec_per_example: 0.0232 second).
2021-06-20 03:11:39,820   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:11:39,820   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:11:39,820   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:11:39,820   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:11:39,820   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:11:39,820   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:11:39,825   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 03:18:17,098   INFO  ----------------Noise Experiment----------------
2021-06-20 03:18:17,099   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 03:18:17,118   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 03:18:17,284   INFO  ==> Done (loaded 127/127)
2021-06-20 03:19:45,290   INFO  Generate label finished(sec_per_example: 0.0233 second).
2021-06-20 03:19:45,292   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:19:45,292   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:19:45,292   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:19:45,292   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:19:45,292   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:19:45,292   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:19:45,295   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 03:26:01,064   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 03:26:01,086   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 03:26:01,254   INFO  ==> Done (loaded 127/127)
2021-06-20 03:27:29,239   INFO  Generate label finished(sec_per_example: 0.0233 second).
2021-06-20 03:27:29,240   INFO  recall_roi_0.3: 0.000000
2021-06-20 03:27:29,240   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 03:27:29,240   INFO  recall_roi_0.5: 0.000000
2021-06-20 03:27:29,240   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 03:27:29,240   INFO  recall_roi_0.7: 0.000000
2021-06-20 03:27:29,240   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 03:27:29,243   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 04:10:05,870   INFO  **********************Start logging**********************
2021-06-20 04:10:05,871   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 04:10:05,871   INFO  total_batch_size: 8
2021-06-20 04:10:05,871   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 04:10:05,871   INFO  batch_size       4
2021-06-20 04:10:05,871   INFO  epochs           1
2021-06-20 04:10:05,871   INFO  workers          8
2021-06-20 04:10:05,871   INFO  extra_tag        default
2021-06-20 04:10:05,871   INFO  ckpt             None
2021-06-20 04:10:05,871   INFO  pretrained_model None
2021-06-20 04:10:05,871   INFO  launcher         pytorch
2021-06-20 04:10:05,871   INFO  tcp_port         18888
2021-06-20 04:10:05,871   INFO  sync_bn          False
2021-06-20 04:10:05,871   INFO  fix_random_seed  False
2021-06-20 04:10:05,871   INFO  ckpt_save_interval 1
2021-06-20 04:10:05,871   INFO  local_rank       0
2021-06-20 04:10:05,871   INFO  max_ckpt_save_num 30
2021-06-20 04:10:05,872   INFO  merge_all_iters_to_one_epoch False
2021-06-20 04:10:05,872   INFO  set_cfgs         None
2021-06-20 04:10:05,872   INFO  max_waiting_mins 0
2021-06-20 04:10:05,872   INFO  start_epoch      0
2021-06-20 04:10:05,872   INFO  save_to_file     False
2021-06-20 04:10:05,872   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 04:10:05,872   INFO  cfg.LOCAL_RANK: 0
2021-06-20 04:10:05,872   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 04:10:05,872   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 04:10:05,872   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 04:10:05,872   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 04:10:05,872   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 04:10:05,873   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 04:10:05,873   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 04:10:05,873   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 04:10:05,873   INFO  
cfg.MODEL = edict()
2021-06-20 04:10:05,873   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 04:10:05,873   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 04:10:05,873   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 04:10:05,873   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 04:10:05,874   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 04:10:05,874   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 04:10:05,874   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 04:10:05,874   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 04:10:05,874   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 04:10:05,874   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 04:10:05,874   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 04:10:05,874   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 04:10:05,874   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 04:10:05,874   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 04:10:05,874   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 04:10:05,874   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 04:10:05,875   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 04:10:05,875   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 04:10:05,875   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 04:10:05,875   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 04:10:05,876   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 04:10:05,876   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 04:10:05,876   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 04:10:05,876   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 04:10:05,877   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 04:10:05,877   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 04:10:05,877   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 04:10:05,878   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 04:10:05,879   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 04:10:05,879   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 04:10:05,879   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 04:10:05,879   INFO  cfg.TAG: pointpillar
2021-06-20 04:10:05,879   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 04:10:06,161   INFO  ----------------Bayes Optimization----------------
2021-06-20 04:10:06,370   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:10:06,370   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:10:06,371   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:10:06,411   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:10:06,418   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:10:06,420   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:10:06,430   INFO  Loading KITTI dataset
2021-06-20 04:10:06,581   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:10:06,664   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:10:06,666   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 04:10:07,060   INFO  **********************End training**********************
2021-06-20 04:10:07,065   INFO  Loading KITTI dataset
2021-06-20 04:10:07,231   INFO  Total samples for KITTI dataset: 3769
2021-06-20 04:10:07,232   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 04:10:07,232   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:10:07,246   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:10:07,387   INFO  ==> Done (loaded 127/127)
2021-06-20 04:11:33,490   INFO  Generate label finished(sec_per_example: 0.0228 second).
2021-06-20 04:11:33,491   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:11:33,491   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 04:11:33,491   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:11:33,491   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 04:11:33,491   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:11:33,491   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 04:11:33,494   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 04:17:13,970   INFO  **********************Start logging**********************
2021-06-20 04:17:13,970   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 04:17:13,970   INFO  total_batch_size: 8
2021-06-20 04:17:13,970   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 04:17:13,970   INFO  batch_size       4
2021-06-20 04:17:13,970   INFO  epochs           1
2021-06-20 04:17:13,970   INFO  workers          8
2021-06-20 04:17:13,970   INFO  extra_tag        default
2021-06-20 04:17:13,970   INFO  ckpt             None
2021-06-20 04:17:13,970   INFO  pretrained_model None
2021-06-20 04:17:13,971   INFO  launcher         pytorch
2021-06-20 04:17:13,971   INFO  tcp_port         18888
2021-06-20 04:17:13,971   INFO  sync_bn          False
2021-06-20 04:17:13,971   INFO  fix_random_seed  False
2021-06-20 04:17:13,971   INFO  ckpt_save_interval 1
2021-06-20 04:17:13,971   INFO  local_rank       0
2021-06-20 04:17:13,971   INFO  max_ckpt_save_num 30
2021-06-20 04:17:13,971   INFO  merge_all_iters_to_one_epoch False
2021-06-20 04:17:13,971   INFO  set_cfgs         None
2021-06-20 04:17:13,971   INFO  max_waiting_mins 0
2021-06-20 04:17:13,971   INFO  start_epoch      0
2021-06-20 04:17:13,971   INFO  save_to_file     False
2021-06-20 04:17:13,971   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 04:17:13,971   INFO  cfg.LOCAL_RANK: 0
2021-06-20 04:17:13,971   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 04:17:13,971   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 04:17:13,972   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 04:17:13,972   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 04:17:13,972   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 04:17:13,972   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 04:17:13,972   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 04:17:13,973   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:17:13,973   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:17:13,973   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 04:17:13,973   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 04:17:13,973   INFO  
cfg.MODEL = edict()
2021-06-20 04:17:13,973   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 04:17:13,973   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 04:17:13,973   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 04:17:13,973   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 04:17:13,973   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 04:17:13,973   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 04:17:13,973   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 04:17:13,973   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 04:17:13,973   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 04:17:13,973   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 04:17:13,973   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 04:17:13,974   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 04:17:13,974   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 04:17:13,974   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 04:17:13,974   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 04:17:13,975   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 04:17:13,975   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 04:17:13,975   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 04:17:13,975   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 04:17:13,975   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 04:17:13,975   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 04:17:13,975   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 04:17:13,976   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 04:17:13,976   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 04:17:13,976   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 04:17:13,976   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 04:17:13,977   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 04:17:13,977   INFO  cfg.TAG: pointpillar
2021-06-20 04:17:13,977   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 04:17:14,210   INFO  ----------------Bayes Optimization----------------
2021-06-20 04:17:14,454   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:17:14,455   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:17:14,455   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:17:14,499   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:17:14,507   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:17:14,509   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:17:14,520   INFO  Loading KITTI dataset
2021-06-20 04:17:14,677   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:17:14,756   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:17:14,758   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 04:17:15,066   INFO  **********************End training**********************
2021-06-20 04:17:15,070   INFO  Loading KITTI dataset
2021-06-20 04:17:15,237   INFO  Total samples for KITTI dataset: 3769
2021-06-20 04:17:15,238   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 04:17:15,238   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:21:49,058   INFO  **********************Start logging**********************
2021-06-20 04:21:49,059   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 04:21:49,059   INFO  total_batch_size: 8
2021-06-20 04:21:49,059   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 04:21:49,059   INFO  batch_size       4
2021-06-20 04:21:49,059   INFO  epochs           1
2021-06-20 04:21:49,059   INFO  workers          8
2021-06-20 04:21:49,059   INFO  extra_tag        default
2021-06-20 04:21:49,059   INFO  ckpt             None
2021-06-20 04:21:49,059   INFO  pretrained_model None
2021-06-20 04:21:49,059   INFO  launcher         pytorch
2021-06-20 04:21:49,059   INFO  tcp_port         18888
2021-06-20 04:21:49,059   INFO  sync_bn          False
2021-06-20 04:21:49,059   INFO  fix_random_seed  False
2021-06-20 04:21:49,059   INFO  ckpt_save_interval 1
2021-06-20 04:21:49,060   INFO  local_rank       0
2021-06-20 04:21:49,060   INFO  max_ckpt_save_num 30
2021-06-20 04:21:49,060   INFO  merge_all_iters_to_one_epoch False
2021-06-20 04:21:49,060   INFO  set_cfgs         None
2021-06-20 04:21:49,060   INFO  max_waiting_mins 0
2021-06-20 04:21:49,060   INFO  start_epoch      0
2021-06-20 04:21:49,060   INFO  save_to_file     False
2021-06-20 04:21:49,060   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 04:21:49,060   INFO  cfg.LOCAL_RANK: 0
2021-06-20 04:21:49,060   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 04:21:49,060   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 04:21:49,060   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 04:21:49,060   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 04:21:49,060   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 04:21:49,060   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 04:21:49,060   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 04:21:49,061   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 04:21:49,061   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 04:21:49,061   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 04:21:49,061   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 04:21:49,062   INFO  
cfg.MODEL = edict()
2021-06-20 04:21:49,062   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 04:21:49,062   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 04:21:49,062   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 04:21:49,062   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 04:21:49,062   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 04:21:49,062   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 04:21:49,062   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 04:21:49,062   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 04:21:49,062   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 04:21:49,062   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 04:21:49,062   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 04:21:49,063   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 04:21:49,063   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 04:21:49,063   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 04:21:49,063   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 04:21:49,063   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 04:21:49,063   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 04:21:49,063   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 04:21:49,064   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 04:21:49,064   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 04:21:49,064   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 04:21:49,064   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 04:21:49,065   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 04:21:49,065   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 04:21:49,065   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 04:21:49,065   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 04:21:49,065   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 04:21:49,065   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 04:21:49,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 04:21:49,066   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 04:21:49,066   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 04:21:49,066   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 04:21:49,067   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 04:21:49,067   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 04:21:49,067   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 04:21:49,067   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 04:21:49,067   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 04:21:49,067   INFO  cfg.TAG: pointpillar
2021-06-20 04:21:49,067   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 04:21:49,306   INFO  ----------------Bayes Optimization----------------
2021-06-20 04:21:49,519   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:21:49,520   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:21:49,520   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:21:49,561   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:21:49,568   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:21:49,570   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:21:49,581   INFO  Loading KITTI dataset
2021-06-20 04:21:49,737   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:21:49,816   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:21:49,818   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 04:21:50,252   INFO  **********************End training**********************
2021-06-20 04:21:50,256   INFO  Loading KITTI dataset
2021-06-20 04:21:50,464   INFO  Total samples for KITTI dataset: 3769
2021-06-20 04:21:50,465   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 04:21:50,465   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:21:50,483   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:21:50,628   INFO  ==> Done (loaded 127/127)
2021-06-20 04:23:16,244   INFO  Generate label finished(sec_per_example: 0.0227 second).
2021-06-20 04:23:16,244   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:23:16,244   INFO  recall_rcnn_0.3: 0.000000
2021-06-20 04:23:16,244   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:23:16,245   INFO  recall_rcnn_0.5: 0.000000
2021-06-20 04:23:16,245   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:23:16,245   INFO  recall_rcnn_0.7: 0.000000
2021-06-20 04:23:16,248   INFO  Average predicted number of objects(3769 samples): 500.000
2021-06-20 04:29:30,068   INFO  **********************Start logging**********************
2021-06-20 04:29:30,068   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 04:29:30,069   INFO  total_batch_size: 8
2021-06-20 04:29:30,069   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 04:29:30,069   INFO  batch_size       4
2021-06-20 04:29:30,069   INFO  epochs           1
2021-06-20 04:29:30,069   INFO  workers          8
2021-06-20 04:29:30,070   INFO  extra_tag        default
2021-06-20 04:29:30,070   INFO  ckpt             None
2021-06-20 04:29:30,070   INFO  pretrained_model None
2021-06-20 04:29:30,070   INFO  launcher         pytorch
2021-06-20 04:29:30,070   INFO  tcp_port         18888
2021-06-20 04:29:30,070   INFO  sync_bn          False
2021-06-20 04:29:30,071   INFO  fix_random_seed  False
2021-06-20 04:29:30,071   INFO  ckpt_save_interval 1
2021-06-20 04:29:30,071   INFO  local_rank       0
2021-06-20 04:29:30,071   INFO  max_ckpt_save_num 30
2021-06-20 04:29:30,071   INFO  merge_all_iters_to_one_epoch False
2021-06-20 04:29:30,072   INFO  set_cfgs         None
2021-06-20 04:29:30,072   INFO  max_waiting_mins 0
2021-06-20 04:29:30,072   INFO  start_epoch      0
2021-06-20 04:29:30,072   INFO  save_to_file     False
2021-06-20 04:29:30,072   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 04:29:30,072   INFO  cfg.LOCAL_RANK: 0
2021-06-20 04:29:30,073   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 04:29:30,073   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 04:29:30,073   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 04:29:30,073   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 04:29:30,073   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 04:29:30,074   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 04:29:30,074   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 04:29:30,074   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 04:29:30,074   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 04:29:30,074   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 04:29:30,075   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 04:29:30,075   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 04:29:30,075   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 04:29:30,075   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 04:29:30,075   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 04:29:30,076   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 04:29:30,076   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 04:29:30,076   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 04:29:30,076   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:29:30,076   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:29:30,077   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 04:29:30,077   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 04:29:30,077   INFO  
cfg.MODEL = edict()
2021-06-20 04:29:30,077   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 04:29:30,077   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 04:29:30,077   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 04:29:30,078   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 04:29:30,078   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 04:29:30,078   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 04:29:30,078   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 04:29:30,078   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 04:29:30,078   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 04:29:30,078   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 04:29:30,078   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 04:29:30,078   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 04:29:30,078   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 04:29:30,078   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 04:29:30,078   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 04:29:30,078   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 04:29:30,079   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 04:29:30,079   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 04:29:30,079   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 04:29:30,079   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 04:29:30,080   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 04:29:30,080   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 04:29:30,080   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 04:29:30,080   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 04:29:30,080   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 04:29:30,080   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 04:29:30,080   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 04:29:30,081   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 04:29:30,081   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 04:29:30,081   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 04:29:30,081   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 04:29:30,081   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 04:29:30,081   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 04:29:30,081   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 04:29:30,081   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 04:29:30,082   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 04:29:30,082   INFO  cfg.TAG: pointpillar
2021-06-20 04:29:30,082   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 04:29:30,384   INFO  ----------------Bayes Optimization----------------
2021-06-20 04:29:30,624   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:29:30,625   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:29:30,625   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:29:30,666   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:29:30,673   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:29:30,675   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:29:30,686   INFO  Loading KITTI dataset
2021-06-20 04:29:30,839   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:29:30,917   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:29:30,919   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 04:33:15,136   INFO  **********************End training**********************
2021-06-20 04:33:15,144   INFO  Loading KITTI dataset
2021-06-20 04:33:15,421   INFO  Total samples for KITTI dataset: 3769
2021-06-20 04:33:15,423   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 04:33:15,424   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:33:15,478   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:33:15,629   INFO  ==> Done (loaded 127/127)
2021-06-20 04:34:17,689   INFO  Generate label finished(sec_per_example: 0.0164 second).
2021-06-20 04:34:17,689   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:34:17,689   INFO  recall_rcnn_0.3: 0.823007
2021-06-20 04:34:17,689   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:34:17,689   INFO  recall_rcnn_0.5: 0.629613
2021-06-20 04:34:17,689   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:34:17,690   INFO  recall_rcnn_0.7: 0.229727
2021-06-20 04:34:17,693   INFO  Average predicted number of objects(3769 samples): 37.712
2021-06-20 04:35:20,946   INFO  ----------------Noise Experiment----------------
2021-06-20 04:35:20,947   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:35:20,995   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:35:21,144   INFO  ==> Done (loaded 127/127)
2021-06-20 04:36:22,944   INFO  Generate label finished(sec_per_example: 0.0164 second).
2021-06-20 04:36:22,945   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:36:22,945   INFO  recall_rcnn_0.3: 0.851082
2021-06-20 04:36:22,945   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:36:22,945   INFO  recall_rcnn_0.5: 0.655467
2021-06-20 04:36:22,945   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:36:22,945   INFO  recall_rcnn_0.7: 0.227790
2021-06-20 04:36:22,948   INFO  Average predicted number of objects(3769 samples): 30.641
2021-06-20 04:37:07,212   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 04:37:07,260   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:37:07,453   INFO  ==> Done (loaded 127/127)
2021-06-20 04:38:16,133   INFO  Generate label finished(sec_per_example: 0.0182 second).
2021-06-20 04:38:16,134   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:38:16,134   INFO  recall_rcnn_0.3: 0.587073
2021-06-20 04:38:16,134   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:38:16,134   INFO  recall_rcnn_0.5: 0.216913
2021-06-20 04:38:16,134   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:38:16,134   INFO  recall_rcnn_0.7: 0.012927
2021-06-20 04:38:16,138   INFO  Average predicted number of objects(3769 samples): 213.683
2021-06-20 04:41:11,897   INFO  **********************End evaluation**********************
2021-06-20 04:41:12,173   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:41:12,175   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:41:12,175   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:41:12,214   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:41:12,222   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:41:12,224   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:41:12,237   INFO  Loading KITTI dataset
2021-06-20 04:41:12,397   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:41:12,482   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:41:12,485   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 04:45:00,865   INFO  **********************End training**********************
2021-06-20 04:45:00,874   INFO  Loading KITTI dataset
2021-06-20 04:45:01,140   INFO  Total samples for KITTI dataset: 3769
2021-06-20 04:45:01,143   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 04:45:01,143   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 04:45:01,200   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:45:01,361   INFO  ==> Done (loaded 127/127)
2021-06-20 04:46:04,020   INFO  Generate label finished(sec_per_example: 0.0166 second).
2021-06-20 04:46:04,021   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:46:04,021   INFO  recall_rcnn_0.3: 0.815945
2021-06-20 04:46:04,021   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:46:04,021   INFO  recall_rcnn_0.5: 0.681549
2021-06-20 04:46:04,021   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:46:04,021   INFO  recall_rcnn_0.7: 0.336446
2021-06-20 04:46:04,024   INFO  Average predicted number of objects(3769 samples): 48.800
2021-06-20 04:47:01,629   INFO  ----------------Noise Experiment----------------
2021-06-20 04:47:01,630   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 04:47:01,676   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:47:01,835   INFO  ==> Done (loaded 127/127)
2021-06-20 04:48:14,870   INFO  Generate label finished(sec_per_example: 0.0194 second).
2021-06-20 04:48:14,870   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:48:14,870   INFO  recall_rcnn_0.3: 0.697722
2021-06-20 04:48:14,871   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:48:14,871   INFO  recall_rcnn_0.5: 0.614522
2021-06-20 04:48:14,871   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:48:14,871   INFO  recall_rcnn_0.7: 0.322210
2021-06-20 04:48:14,878   INFO  Average predicted number of objects(3769 samples): 496.345
2021-06-20 04:54:59,588   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 04:54:59,635   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 04:54:59,799   INFO  ==> Done (loaded 127/127)
2021-06-20 04:56:01,095   INFO  Generate label finished(sec_per_example: 0.0162 second).
2021-06-20 04:56:01,095   INFO  recall_roi_0.3: 0.000000
2021-06-20 04:56:01,095   INFO  recall_rcnn_0.3: 0.498576
2021-06-20 04:56:01,096   INFO  recall_roi_0.5: 0.000000
2021-06-20 04:56:01,096   INFO  recall_rcnn_0.5: 0.199772
2021-06-20 04:56:01,096   INFO  recall_roi_0.7: 0.000000
2021-06-20 04:56:01,096   INFO  recall_rcnn_0.7: 0.020786
2021-06-20 04:56:01,099   INFO  Average predicted number of objects(3769 samples): 40.681
2021-06-20 04:56:46,878   INFO  **********************End evaluation**********************
2021-06-20 04:56:47,151   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:56:47,152   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:56:47,153   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:56:47,194   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:56:47,202   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:56:47,204   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:56:47,217   INFO  Loading KITTI dataset
2021-06-20 04:56:47,373   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:59:54,353   INFO  **********************Start logging**********************
2021-06-20 04:59:54,354   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 04:59:54,354   INFO  total_batch_size: 8
2021-06-20 04:59:54,354   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 04:59:54,354   INFO  batch_size       4
2021-06-20 04:59:54,354   INFO  epochs           1
2021-06-20 04:59:54,354   INFO  workers          8
2021-06-20 04:59:54,354   INFO  extra_tag        default
2021-06-20 04:59:54,354   INFO  ckpt             None
2021-06-20 04:59:54,354   INFO  pretrained_model None
2021-06-20 04:59:54,354   INFO  launcher         pytorch
2021-06-20 04:59:54,355   INFO  tcp_port         18888
2021-06-20 04:59:54,355   INFO  sync_bn          False
2021-06-20 04:59:54,355   INFO  fix_random_seed  False
2021-06-20 04:59:54,355   INFO  ckpt_save_interval 1
2021-06-20 04:59:54,355   INFO  local_rank       0
2021-06-20 04:59:54,355   INFO  max_ckpt_save_num 30
2021-06-20 04:59:54,355   INFO  merge_all_iters_to_one_epoch False
2021-06-20 04:59:54,355   INFO  set_cfgs         None
2021-06-20 04:59:54,355   INFO  max_waiting_mins 0
2021-06-20 04:59:54,355   INFO  start_epoch      0
2021-06-20 04:59:54,355   INFO  save_to_file     False
2021-06-20 04:59:54,356   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 04:59:54,356   INFO  cfg.LOCAL_RANK: 0
2021-06-20 04:59:54,356   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 04:59:54,356   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 04:59:54,356   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 04:59:54,356   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 04:59:54,356   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 04:59:54,356   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 04:59:54,356   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 04:59:54,356   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 04:59:54,356   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 04:59:54,357   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 04:59:54,357   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:59:54,357   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 04:59:54,358   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 04:59:54,358   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 04:59:54,358   INFO  
cfg.MODEL = edict()
2021-06-20 04:59:54,358   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 04:59:54,358   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 04:59:54,358   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 04:59:54,358   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 04:59:54,358   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 04:59:54,358   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 04:59:54,358   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 04:59:54,358   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 04:59:54,359   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 04:59:54,359   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 04:59:54,359   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 04:59:54,359   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 04:59:54,359   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 04:59:54,359   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 04:59:54,359   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 04:59:54,360   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 04:59:54,360   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 04:59:54,361   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 04:59:54,361   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 04:59:54,361   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 04:59:54,361   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 04:59:54,361   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 04:59:54,361   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 04:59:54,361   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 04:59:54,361   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 04:59:54,361   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 04:59:54,361   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 04:59:54,361   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 04:59:54,361   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 04:59:54,362   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 04:59:54,362   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 04:59:54,362   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 04:59:54,362   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 04:59:54,362   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 04:59:54,362   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 04:59:54,362   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 04:59:54,362   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 04:59:54,362   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 04:59:54,362   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 04:59:54,362   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 04:59:54,363   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 04:59:54,363   INFO  cfg.TAG: pointpillar
2021-06-20 04:59:54,364   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 04:59:54,599   INFO  ----------------Bayes Optimization----------------
2021-06-20 04:59:54,810   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 04:59:54,811   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 04:59:54,811   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 04:59:54,852   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 04:59:54,859   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 04:59:54,861   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 04:59:54,872   INFO  Loading KITTI dataset
2021-06-20 04:59:55,026   INFO  Total samples for KITTI dataset: 3712
2021-06-20 04:59:55,104   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 04:59:55,106   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 05:03:43,730   INFO  **********************End training**********************
2021-06-20 05:03:43,735   INFO  Loading KITTI dataset
2021-06-20 05:03:43,965   INFO  Total samples for KITTI dataset: 3769
2021-06-20 05:03:43,967   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 05:03:43,967   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 05:03:44,019   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 05:03:44,170   INFO  ==> Done (loaded 127/127)
2021-06-20 05:04:44,683   INFO  Generate label finished(sec_per_example: 0.0160 second).
2021-06-20 05:04:44,684   INFO  recall_roi_0.3: 0.000000
2021-06-20 05:04:44,684   INFO  recall_rcnn_0.3: 0.797551
2021-06-20 05:04:44,684   INFO  recall_roi_0.5: 0.000000
2021-06-20 05:04:44,684   INFO  recall_rcnn_0.5: 0.637927
2021-06-20 05:04:44,685   INFO  recall_roi_0.7: 0.000000
2021-06-20 05:04:44,685   INFO  recall_rcnn_0.7: 0.244647
2021-06-20 05:04:44,691   INFO  Average predicted number of objects(3769 samples): 33.314
2021-06-20 05:05:48,186   INFO  ----------------Noise Experiment----------------
2021-06-20 05:05:48,187   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 05:05:48,225   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 05:05:48,372   INFO  ==> Done (loaded 127/127)
2021-06-20 05:07:04,011   INFO  Generate label finished(sec_per_example: 0.0200 second).
2021-06-20 05:07:04,012   INFO  recall_roi_0.3: 0.000000
2021-06-20 05:07:04,012   INFO  recall_rcnn_0.3: 0.782745
2021-06-20 05:07:04,013   INFO  recall_roi_0.5: 0.000000
2021-06-20 05:07:04,013   INFO  recall_rcnn_0.5: 0.645159
2021-06-20 05:07:04,013   INFO  recall_roi_0.7: 0.000000
2021-06-20 05:07:04,014   INFO  recall_rcnn_0.7: 0.294248
2021-06-20 05:07:04,019   INFO  Average predicted number of objects(3769 samples): 460.546
2021-06-20 05:13:49,842   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 05:13:49,883   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 05:13:50,047   INFO  ==> Done (loaded 127/127)
2021-06-20 05:14:58,467   INFO  Generate label finished(sec_per_example: 0.0181 second).
2021-06-20 05:14:58,468   INFO  recall_roi_0.3: 0.000000
2021-06-20 05:14:58,468   INFO  recall_rcnn_0.3: 0.675854
2021-06-20 05:14:58,468   INFO  recall_roi_0.5: 0.000000
2021-06-20 05:14:58,469   INFO  recall_rcnn_0.5: 0.426367
2021-06-20 05:14:58,469   INFO  recall_roi_0.7: 0.000000
2021-06-20 05:14:58,469   INFO  recall_rcnn_0.7: 0.095501
2021-06-20 05:14:58,479   INFO  Average predicted number of objects(3769 samples): 154.028
2021-06-20 05:17:21,709   INFO  **********************End evaluation**********************
2021-06-20 05:17:21,990   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 05:17:21,991   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 05:17:21,992   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 05:17:22,033   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 05:17:22,040   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 05:17:22,042   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 05:17:22,056   INFO  Loading KITTI dataset
2021-06-20 05:17:22,228   INFO  Total samples for KITTI dataset: 3712
2021-06-20 05:17:22,312   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 05:17:22,315   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 05:21:14,179   INFO  **********************End training**********************
2021-06-20 05:21:14,190   INFO  Loading KITTI dataset
2021-06-20 05:21:14,403   INFO  Total samples for KITTI dataset: 3769
2021-06-20 05:21:14,405   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 05:21:14,405   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 05:21:14,447   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 05:21:14,595   INFO  ==> Done (loaded 127/127)
2021-06-20 05:42:27,409   INFO  **********************Start logging**********************
2021-06-20 05:42:27,409   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 05:42:27,409   INFO  total_batch_size: 8
2021-06-20 05:42:27,410   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 05:42:27,410   INFO  batch_size       4
2021-06-20 05:42:27,410   INFO  epochs           1
2021-06-20 05:42:27,410   INFO  workers          8
2021-06-20 05:42:27,410   INFO  extra_tag        default
2021-06-20 05:42:27,411   INFO  ckpt             None
2021-06-20 05:42:27,411   INFO  pretrained_model None
2021-06-20 05:42:27,411   INFO  launcher         pytorch
2021-06-20 05:42:27,411   INFO  tcp_port         18888
2021-06-20 05:42:27,411   INFO  sync_bn          False
2021-06-20 05:42:27,411   INFO  fix_random_seed  False
2021-06-20 05:42:27,412   INFO  ckpt_save_interval 1
2021-06-20 05:42:27,412   INFO  local_rank       0
2021-06-20 05:42:27,412   INFO  max_ckpt_save_num 30
2021-06-20 05:42:27,412   INFO  merge_all_iters_to_one_epoch False
2021-06-20 05:42:27,412   INFO  set_cfgs         None
2021-06-20 05:42:27,412   INFO  max_waiting_mins 0
2021-06-20 05:42:27,413   INFO  start_epoch      0
2021-06-20 05:42:27,413   INFO  save_to_file     False
2021-06-20 05:42:27,413   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 05:42:27,413   INFO  cfg.LOCAL_RANK: 0
2021-06-20 05:42:27,413   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 05:42:27,414   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 05:42:27,414   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 05:42:27,414   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 05:42:27,414   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 05:42:27,414   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 05:42:27,415   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 05:42:27,415   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 05:42:27,415   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 05:42:27,415   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 05:42:27,415   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 05:42:27,415   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 05:42:27,416   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 05:42:27,416   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 05:42:27,416   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 05:42:27,416   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 05:42:27,416   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 05:42:27,417   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 05:42:27,417   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 05:42:27,417   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 05:42:27,417   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 05:42:27,417   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 05:42:27,418   INFO  
cfg.MODEL = edict()
2021-06-20 05:42:27,418   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 05:42:27,418   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 05:42:27,418   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 05:42:27,418   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 05:42:27,418   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 05:42:27,418   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 05:42:27,418   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 05:42:27,418   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 05:42:27,418   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 05:42:27,418   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 05:42:27,418   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 05:42:27,418   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 05:42:27,418   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 05:42:27,419   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 05:42:27,419   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 05:42:27,419   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 05:42:27,419   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 05:42:27,419   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 05:42:27,419   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 05:42:27,419   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 05:42:27,420   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 05:42:27,420   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 05:42:27,420   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 05:42:27,420   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 05:42:27,420   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 05:42:27,421   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 05:42:27,421   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 05:42:27,421   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 05:42:27,421   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 05:42:27,421   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 05:42:27,421   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 05:42:27,422   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 05:42:27,422   INFO  cfg.TAG: pointpillar
2021-06-20 05:42:27,422   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 05:42:27,664   INFO  ----------------Bayes Optimization----------------
2021-06-20 05:42:27,902   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 05:42:27,903   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 05:42:27,903   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 05:42:27,944   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 05:42:27,951   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 05:42:27,953   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 05:42:27,965   INFO  Loading KITTI dataset
2021-06-20 05:42:28,160   INFO  Total samples for KITTI dataset: 3712
2021-06-20 05:42:28,238   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 05:42:28,240   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 05:46:10,820   INFO  **********************End training**********************
2021-06-20 05:46:10,828   INFO  Loading KITTI dataset
2021-06-20 05:46:11,018   INFO  Total samples for KITTI dataset: 3769
2021-06-20 05:46:11,020   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 05:46:11,020   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 05:46:11,069   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 05:46:11,212   INFO  ==> Done (loaded 127/127)
2021-06-20 05:59:30,076   INFO  **********************Start logging**********************
2021-06-20 05:59:30,077   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 05:59:30,077   INFO  total_batch_size: 8
2021-06-20 05:59:30,077   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 05:59:30,077   INFO  batch_size       4
2021-06-20 05:59:30,077   INFO  epochs           1
2021-06-20 05:59:30,077   INFO  workers          8
2021-06-20 05:59:30,077   INFO  extra_tag        default
2021-06-20 05:59:30,077   INFO  ckpt             None
2021-06-20 05:59:30,077   INFO  pretrained_model None
2021-06-20 05:59:30,077   INFO  launcher         pytorch
2021-06-20 05:59:30,077   INFO  tcp_port         18888
2021-06-20 05:59:30,077   INFO  sync_bn          False
2021-06-20 05:59:30,078   INFO  fix_random_seed  False
2021-06-20 05:59:30,078   INFO  ckpt_save_interval 1
2021-06-20 05:59:30,078   INFO  local_rank       0
2021-06-20 05:59:30,078   INFO  max_ckpt_save_num 30
2021-06-20 05:59:30,078   INFO  merge_all_iters_to_one_epoch False
2021-06-20 05:59:30,078   INFO  set_cfgs         None
2021-06-20 05:59:30,078   INFO  max_waiting_mins 0
2021-06-20 05:59:30,078   INFO  start_epoch      0
2021-06-20 05:59:30,078   INFO  save_to_file     False
2021-06-20 05:59:30,078   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 05:59:30,078   INFO  cfg.LOCAL_RANK: 0
2021-06-20 05:59:30,078   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 05:59:30,078   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 05:59:30,078   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 05:59:30,079   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 05:59:30,079   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 05:59:30,079   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 05:59:30,079   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 05:59:30,080   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 05:59:30,080   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 05:59:30,080   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 05:59:30,080   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 05:59:30,080   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 05:59:30,080   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 05:59:30,080   INFO  
cfg.MODEL = edict()
2021-06-20 05:59:30,080   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 05:59:30,080   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 05:59:30,080   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 05:59:30,080   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 05:59:30,080   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 05:59:30,080   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 05:59:30,081   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 05:59:30,081   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 05:59:30,081   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 05:59:30,081   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 05:59:30,081   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 05:59:30,081   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 05:59:30,081   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 05:59:30,081   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 05:59:30,081   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 05:59:30,082   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 05:59:30,082   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 05:59:30,082   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 05:59:30,083   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 05:59:30,083   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 05:59:30,083   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 05:59:30,083   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 05:59:30,083   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 05:59:30,083   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 05:59:30,083   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 05:59:30,083   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 05:59:30,084   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 05:59:30,084   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 05:59:30,084   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 05:59:30,084   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 05:59:30,084   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 05:59:30,085   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 05:59:30,085   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 05:59:30,085   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 05:59:30,085   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 05:59:30,085   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 05:59:30,085   INFO  cfg.TAG: pointpillar
2021-06-20 05:59:30,085   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 05:59:30,382   INFO  ----------------Bayes Optimization----------------
2021-06-20 05:59:30,654   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 05:59:30,655   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 05:59:30,655   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 05:59:30,696   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 05:59:30,703   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 05:59:30,705   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 05:59:30,716   INFO  Loading KITTI dataset
2021-06-20 05:59:30,916   INFO  Total samples for KITTI dataset: 3712
2021-06-20 05:59:30,991   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 05:59:30,993   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 06:03:20,512   INFO  **********************End training**********************
2021-06-20 06:03:20,520   INFO  Loading KITTI dataset
2021-06-20 06:03:20,739   INFO  Total samples for KITTI dataset: 3769
2021-06-20 06:03:20,741   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 06:03:20,741   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:03:20,789   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:03:20,950   INFO  ==> Done (loaded 127/127)
2021-06-20 06:04:23,355   INFO  Generate label finished(sec_per_example: 0.0165 second).
2021-06-20 06:04:23,355   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:04:23,355   INFO  recall_rcnn_0.3: 0.830923
2021-06-20 06:04:23,356   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:04:23,356   INFO  recall_rcnn_0.5: 0.654784
2021-06-20 06:04:23,356   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:04:23,356   INFO  recall_rcnn_0.7: 0.260137
2021-06-20 06:04:23,359   INFO  Average predicted number of objects(3769 samples): 60.793
2021-06-20 06:05:49,443   INFO  ----------------Noise Experiment----------------
2021-06-20 06:05:49,444   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:05:49,485   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:05:49,642   INFO  ==> Done (loaded 127/127)
2021-06-20 06:06:50,056   INFO  Generate label finished(sec_per_example: 0.0160 second).
2021-06-20 06:06:50,057   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:06:50,057   INFO  recall_rcnn_0.3: 0.825911
2021-06-20 06:06:50,057   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:06:50,057   INFO  recall_rcnn_0.5: 0.653303
2021-06-20 06:06:50,057   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:06:50,057   INFO  recall_rcnn_0.7: 0.255353
2021-06-20 06:06:50,060   INFO  Average predicted number of objects(3769 samples): 25.528
2021-06-20 06:07:29,141   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:07:29,187   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:07:29,330   INFO  ==> Done (loaded 127/127)
2021-06-20 06:08:35,522   INFO  Generate label finished(sec_per_example: 0.0175 second).
2021-06-20 06:08:35,523   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:08:35,523   INFO  recall_rcnn_0.3: 0.576139
2021-06-20 06:08:35,523   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:08:35,524   INFO  recall_rcnn_0.5: 0.278986
2021-06-20 06:08:35,524   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:08:35,524   INFO  recall_rcnn_0.7: 0.043337
2021-06-20 06:08:35,527   INFO  Average predicted number of objects(3769 samples): 135.941
2021-06-20 06:10:36,077   INFO  **********************End evaluation**********************
2021-06-20 06:10:36,349   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:10:36,350   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:10:36,351   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:10:36,389   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:10:36,396   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:10:36,398   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:10:36,411   INFO  Loading KITTI dataset
2021-06-20 06:10:36,570   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:10:36,650   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 06:10:36,653   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 06:17:39,004   INFO  **********************Start logging**********************
2021-06-20 06:17:39,004   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:17:39,004   INFO  total_batch_size: 8
2021-06-20 06:17:39,004   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:17:39,004   INFO  batch_size       4
2021-06-20 06:17:39,004   INFO  epochs           1
2021-06-20 06:17:39,004   INFO  workers          8
2021-06-20 06:17:39,004   INFO  extra_tag        default
2021-06-20 06:17:39,005   INFO  ckpt             None
2021-06-20 06:17:39,005   INFO  pretrained_model None
2021-06-20 06:17:39,005   INFO  launcher         pytorch
2021-06-20 06:17:39,005   INFO  tcp_port         18888
2021-06-20 06:17:39,005   INFO  sync_bn          False
2021-06-20 06:17:39,005   INFO  fix_random_seed  False
2021-06-20 06:17:39,005   INFO  ckpt_save_interval 1
2021-06-20 06:17:39,005   INFO  local_rank       0
2021-06-20 06:17:39,005   INFO  max_ckpt_save_num 30
2021-06-20 06:17:39,005   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:17:39,005   INFO  set_cfgs         None
2021-06-20 06:17:39,005   INFO  max_waiting_mins 0
2021-06-20 06:17:39,005   INFO  start_epoch      0
2021-06-20 06:17:39,005   INFO  save_to_file     False
2021-06-20 06:17:39,006   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:17:39,006   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:17:39,006   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:17:39,006   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:17:39,006   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:17:39,006   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:17:39,006   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:17:39,007   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:17:39,007   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:17:39,007   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:17:39,007   INFO  
cfg.MODEL = edict()
2021-06-20 06:17:39,007   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:17:39,008   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:17:39,008   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:17:39,008   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:17:39,008   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:17:39,008   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:17:39,008   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:17:39,008   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:17:39,008   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:17:39,008   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:17:39,008   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:17:39,008   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:17:39,008   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:17:39,008   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:17:39,008   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:17:39,009   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:17:39,009   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:17:39,009   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:17:39,009   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:17:39,009   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:17:39,009   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:17:39,010   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:17:39,010   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:17:39,010   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:17:39,010   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:17:39,010   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:17:39,011   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:17:39,011   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:17:39,011   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:17:39,011   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:17:39,011   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:17:39,011   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:17:39,011   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:17:39,012   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:17:39,012   INFO  cfg.TAG: pointpillar
2021-06-20 06:17:39,012   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:17:39,309   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:17:39,518   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:17:39,519   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:17:39,519   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:17:39,560   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:17:39,566   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:17:39,569   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:17:39,578   INFO  Loading KITTI dataset
2021-06-20 06:17:39,784   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:40:17,684   INFO  **********************Start logging**********************
2021-06-20 06:40:17,684   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:40:17,684   INFO  total_batch_size: 8
2021-06-20 06:40:17,684   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:40:17,684   INFO  batch_size       4
2021-06-20 06:40:17,684   INFO  epochs           1
2021-06-20 06:40:17,684   INFO  workers          8
2021-06-20 06:40:17,684   INFO  extra_tag        default
2021-06-20 06:40:17,685   INFO  ckpt             None
2021-06-20 06:40:17,685   INFO  pretrained_model None
2021-06-20 06:40:17,685   INFO  launcher         pytorch
2021-06-20 06:40:17,685   INFO  tcp_port         18888
2021-06-20 06:40:17,685   INFO  sync_bn          False
2021-06-20 06:40:17,685   INFO  fix_random_seed  False
2021-06-20 06:40:17,685   INFO  ckpt_save_interval 1
2021-06-20 06:40:17,685   INFO  local_rank       0
2021-06-20 06:40:17,685   INFO  max_ckpt_save_num 30
2021-06-20 06:40:17,685   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:40:17,685   INFO  set_cfgs         None
2021-06-20 06:40:17,685   INFO  max_waiting_mins 0
2021-06-20 06:40:17,685   INFO  start_epoch      0
2021-06-20 06:40:17,686   INFO  save_to_file     False
2021-06-20 06:40:17,686   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:40:17,686   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:40:17,686   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:40:17,686   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:40:17,686   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:40:17,686   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:40:17,686   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:40:17,687   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:40:17,687   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:40:17,687   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:40:17,687   INFO  
cfg.MODEL = edict()
2021-06-20 06:40:17,688   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:40:17,688   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:40:17,688   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:40:17,688   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:40:17,688   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:40:17,688   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:40:17,688   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:40:17,688   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:40:17,688   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:40:17,688   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:40:17,688   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:40:17,688   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:40:17,688   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:40:17,688   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:40:17,689   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:40:17,689   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:40:17,689   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:40:17,689   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:40:17,689   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:40:17,689   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:40:17,689   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:40:17,690   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:40:17,690   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:40:17,690   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:40:17,691   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:40:17,691   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:40:17,691   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:40:17,691   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:40:17,692   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:40:17,692   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:40:17,692   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:40:17,693   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:40:17,693   INFO  cfg.TAG: pointpillar
2021-06-20 06:40:17,693   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:40:17,993   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:40:18,253   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:40:18,254   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:40:18,254   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:40:18,295   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:40:18,302   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:40:18,305   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:40:18,317   INFO  Loading KITTI dataset
2021-06-20 06:40:18,474   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:41:29,388   INFO  **********************Start logging**********************
2021-06-20 06:41:29,388   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:41:29,389   INFO  total_batch_size: 8
2021-06-20 06:41:29,389   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:41:29,389   INFO  batch_size       4
2021-06-20 06:41:29,389   INFO  epochs           1
2021-06-20 06:41:29,389   INFO  workers          8
2021-06-20 06:41:29,389   INFO  extra_tag        default
2021-06-20 06:41:29,389   INFO  ckpt             None
2021-06-20 06:41:29,389   INFO  pretrained_model None
2021-06-20 06:41:29,389   INFO  launcher         pytorch
2021-06-20 06:41:29,389   INFO  tcp_port         18888
2021-06-20 06:41:29,389   INFO  sync_bn          False
2021-06-20 06:41:29,389   INFO  fix_random_seed  False
2021-06-20 06:41:29,389   INFO  ckpt_save_interval 1
2021-06-20 06:41:29,390   INFO  local_rank       0
2021-06-20 06:41:29,390   INFO  max_ckpt_save_num 30
2021-06-20 06:41:29,390   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:41:29,390   INFO  set_cfgs         None
2021-06-20 06:41:29,390   INFO  max_waiting_mins 0
2021-06-20 06:41:29,390   INFO  start_epoch      0
2021-06-20 06:41:29,390   INFO  save_to_file     False
2021-06-20 06:41:29,390   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:41:29,390   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:41:29,390   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:41:29,390   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:41:29,390   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:41:29,390   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:41:29,391   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:41:29,391   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:41:29,391   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:41:29,391   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:41:29,391   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:41:29,392   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:41:29,392   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:41:29,392   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:41:29,392   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:41:29,392   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:41:29,392   INFO  
cfg.MODEL = edict()
2021-06-20 06:41:29,392   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:41:29,392   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:41:29,392   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:41:29,392   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:41:29,392   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:41:29,392   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:41:29,392   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:41:29,392   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:41:29,393   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:41:29,393   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:41:29,393   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:41:29,393   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:41:29,393   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:41:29,393   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:41:29,393   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:41:29,394   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:41:29,394   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:41:29,394   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:41:29,395   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:41:29,395   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:41:29,395   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:41:29,395   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:41:29,395   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:41:29,395   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:41:29,395   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:41:29,395   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:41:29,396   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:41:29,396   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:41:29,396   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:41:29,396   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:41:29,397   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:41:29,397   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:41:29,397   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:41:29,397   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:41:29,397   INFO  cfg.TAG: pointpillar
2021-06-20 06:41:29,397   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:41:29,693   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:41:29,939   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:41:29,940   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:41:29,941   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:41:30,006   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:41:30,015   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:41:30,018   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:41:30,033   INFO  Loading KITTI dataset
2021-06-20 06:41:30,238   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:41:56,301   INFO  **********************Start logging**********************
2021-06-20 06:41:56,301   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:41:56,301   INFO  total_batch_size: 8
2021-06-20 06:41:56,301   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:41:56,301   INFO  batch_size       4
2021-06-20 06:41:56,301   INFO  epochs           1
2021-06-20 06:41:56,302   INFO  workers          8
2021-06-20 06:41:56,302   INFO  extra_tag        default
2021-06-20 06:41:56,302   INFO  ckpt             None
2021-06-20 06:41:56,302   INFO  pretrained_model None
2021-06-20 06:41:56,302   INFO  launcher         pytorch
2021-06-20 06:41:56,302   INFO  tcp_port         18888
2021-06-20 06:41:56,302   INFO  sync_bn          False
2021-06-20 06:41:56,302   INFO  fix_random_seed  False
2021-06-20 06:41:56,302   INFO  ckpt_save_interval 1
2021-06-20 06:41:56,302   INFO  local_rank       0
2021-06-20 06:41:56,302   INFO  max_ckpt_save_num 30
2021-06-20 06:41:56,302   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:41:56,302   INFO  set_cfgs         None
2021-06-20 06:41:56,302   INFO  max_waiting_mins 0
2021-06-20 06:41:56,302   INFO  start_epoch      0
2021-06-20 06:41:56,302   INFO  save_to_file     False
2021-06-20 06:41:56,303   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:41:56,303   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:41:56,303   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:41:56,303   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:41:56,303   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:41:56,303   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:41:56,303   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:41:56,304   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:41:56,304   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:41:56,304   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:41:56,304   INFO  
cfg.MODEL = edict()
2021-06-20 06:41:56,304   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:41:56,304   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:41:56,304   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:41:56,304   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:41:56,304   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:41:56,304   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:41:56,305   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:41:56,305   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:41:56,305   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:41:56,305   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:41:56,305   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:41:56,305   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:41:56,305   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:41:56,305   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:41:56,305   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:41:56,306   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:41:56,306   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:41:56,306   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:41:56,307   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:41:56,307   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:41:56,307   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:41:56,307   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:41:56,307   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:41:56,307   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:41:56,307   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:41:56,307   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:41:56,308   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:41:56,308   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:41:56,308   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:41:56,308   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:41:56,308   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:41:56,309   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:41:56,309   INFO  cfg.TAG: pointpillar
2021-06-20 06:41:56,309   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:41:56,545   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:41:56,758   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:41:56,759   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:41:56,759   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:41:56,803   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:41:56,811   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:41:56,813   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:41:56,826   INFO  Loading KITTI dataset
2021-06-20 06:41:57,026   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:43:04,949   INFO  **********************Start logging**********************
2021-06-20 06:43:04,949   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:43:04,949   INFO  total_batch_size: 8
2021-06-20 06:43:04,949   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:43:04,949   INFO  batch_size       4
2021-06-20 06:43:04,949   INFO  epochs           1
2021-06-20 06:43:04,949   INFO  workers          8
2021-06-20 06:43:04,949   INFO  extra_tag        default
2021-06-20 06:43:04,949   INFO  ckpt             None
2021-06-20 06:43:04,949   INFO  pretrained_model None
2021-06-20 06:43:04,950   INFO  launcher         pytorch
2021-06-20 06:43:04,950   INFO  tcp_port         18888
2021-06-20 06:43:04,950   INFO  sync_bn          False
2021-06-20 06:43:04,950   INFO  fix_random_seed  False
2021-06-20 06:43:04,950   INFO  ckpt_save_interval 1
2021-06-20 06:43:04,950   INFO  local_rank       0
2021-06-20 06:43:04,950   INFO  max_ckpt_save_num 30
2021-06-20 06:43:04,950   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:43:04,950   INFO  set_cfgs         None
2021-06-20 06:43:04,950   INFO  max_waiting_mins 0
2021-06-20 06:43:04,950   INFO  start_epoch      0
2021-06-20 06:43:04,950   INFO  save_to_file     False
2021-06-20 06:43:04,950   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:43:04,951   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:43:04,951   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:43:04,951   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:43:04,951   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:43:04,951   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:43:04,951   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:43:04,952   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:43:04,952   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:43:04,952   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:43:04,952   INFO  
cfg.MODEL = edict()
2021-06-20 06:43:04,952   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:43:04,952   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:43:04,953   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:43:04,953   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:43:04,953   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:43:04,953   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:43:04,953   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:43:04,953   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:43:04,953   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:43:04,953   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:43:04,953   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:43:04,953   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:43:04,953   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:43:04,953   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:43:04,953   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:43:04,954   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:43:04,954   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:43:04,954   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:43:04,954   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:43:04,954   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:43:04,954   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:43:04,955   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:43:04,955   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:43:04,955   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:43:04,955   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:43:04,955   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:43:04,955   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:43:04,956   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:43:04,956   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:43:04,956   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:43:04,956   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:43:04,956   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:43:04,956   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:43:04,956   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:43:04,957   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:43:04,957   INFO  cfg.TAG: pointpillar
2021-06-20 06:43:04,957   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:43:05,193   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:43:05,456   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:43:05,457   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:43:05,457   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:43:05,498   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:43:05,505   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:43:05,508   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:43:05,519   INFO  Loading KITTI dataset
2021-06-20 06:43:05,679   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:43:42,483   INFO  **********************Start logging**********************
2021-06-20 06:43:42,483   INFO  CUDA_VISIBLE_DEVICES=3,1,
2021-06-20 06:43:42,483   INFO  total_batch_size: 8
2021-06-20 06:43:42,483   INFO  cfg_file         cfgs/kitti_models/pointpillar.yaml
2021-06-20 06:43:42,483   INFO  batch_size       4
2021-06-20 06:43:42,484   INFO  epochs           1
2021-06-20 06:43:42,484   INFO  workers          8
2021-06-20 06:43:42,484   INFO  extra_tag        default
2021-06-20 06:43:42,484   INFO  ckpt             None
2021-06-20 06:43:42,484   INFO  pretrained_model None
2021-06-20 06:43:42,484   INFO  launcher         pytorch
2021-06-20 06:43:42,484   INFO  tcp_port         18888
2021-06-20 06:43:42,484   INFO  sync_bn          False
2021-06-20 06:43:42,484   INFO  fix_random_seed  False
2021-06-20 06:43:42,484   INFO  ckpt_save_interval 1
2021-06-20 06:43:42,484   INFO  local_rank       0
2021-06-20 06:43:42,484   INFO  max_ckpt_save_num 30
2021-06-20 06:43:42,484   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:43:42,484   INFO  set_cfgs         None
2021-06-20 06:43:42,484   INFO  max_waiting_mins 0
2021-06-20 06:43:42,485   INFO  start_epoch      0
2021-06-20 06:43:42,485   INFO  save_to_file     False
2021-06-20 06:43:42,485   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:43:42,485   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:43:42,485   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:43:42,485   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:43:42,485   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:43:42,485   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:43:42,485   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:43:42,485   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:43:42,485   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:43:42,485   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:43:42,485   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:43:42,486   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:43:42,486   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:43:42,486   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:43:42,487   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:43:42,487   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:43:42,487   INFO  
cfg.MODEL = edict()
2021-06-20 06:43:42,487   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:43:42,487   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:43:42,487   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:43:42,487   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:43:42,487   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:43:42,487   INFO  cfg.MODEL.VFE.USE_NORM: True
2021-06-20 06:43:42,487   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:43:42,487   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:43:42,488   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:43:42,488   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:43:42,488   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: False
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:43:42,488   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:43:42,488   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:43:42,488   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:43:42,489   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:43:42,489   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:43:42,490   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:43:42,490   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:43:42,490   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:43:42,490   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:43:42,490   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:43:42,491   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:43:42,491   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:43:42,491   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:43:42,491   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:43:42,491   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:43:42,492   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:43:42,493   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:43:42,493   INFO  cfg.TAG: pointpillar
2021-06-20 06:43:42,493   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:43:42,726   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:43:42,938   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:43:42,939   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:43:42,939   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:43:42,985   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:43:42,992   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:43:42,994   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:43:43,005   INFO  Loading KITTI dataset
2021-06-20 06:43:43,168   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:43:43,271   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 06:43:43,273   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 06:47:32,383   INFO  **********************End training**********************
2021-06-20 06:47:32,390   INFO  Loading KITTI dataset
2021-06-20 06:47:32,587   INFO  Total samples for KITTI dataset: 3769
2021-06-20 06:47:32,589   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 06:47:32,589   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:47:32,642   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:47:32,803   INFO  ==> Done (loaded 127/127)
2021-06-20 06:48:35,820   INFO  Generate label finished(sec_per_example: 0.0167 second).
2021-06-20 06:48:35,821   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:48:35,821   INFO  recall_rcnn_0.3: 0.830581
2021-06-20 06:48:35,821   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:48:35,822   INFO  recall_rcnn_0.5: 0.663781
2021-06-20 06:48:35,822   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:48:35,822   INFO  recall_rcnn_0.7: 0.303645
2021-06-20 06:48:35,825   INFO  Average predicted number of objects(3769 samples): 68.448
2021-06-20 06:50:07,487   INFO  ----------------Noise Experiment----------------
2021-06-20 06:50:07,489   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:50:07,527   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:50:07,690   INFO  ==> Done (loaded 127/127)
2021-06-20 06:51:09,278   INFO  Generate label finished(sec_per_example: 0.0163 second).
2021-06-20 06:51:09,279   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:51:09,279   INFO  recall_rcnn_0.3: 0.833542
2021-06-20 06:51:09,279   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:51:09,279   INFO  recall_rcnn_0.5: 0.669021
2021-06-20 06:51:09,279   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:51:09,279   INFO  recall_rcnn_0.7: 0.301367
2021-06-20 06:51:09,286   INFO  Average predicted number of objects(3769 samples): 30.636
2021-06-20 06:51:56,362   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.2-0.2-0.2-0.2.pth to CPU
2021-06-20 06:51:56,412   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 06:51:56,609   INFO  ==> Done (loaded 127/127)
2021-06-20 06:53:07,878   INFO  Generate label finished(sec_per_example: 0.0189 second).
2021-06-20 06:53:07,879   INFO  recall_roi_0.3: 0.000000
2021-06-20 06:53:07,879   INFO  recall_rcnn_0.3: 0.673861
2021-06-20 06:53:07,879   INFO  recall_roi_0.5: 0.000000
2021-06-20 06:53:07,879   INFO  recall_rcnn_0.5: 0.253189
2021-06-20 06:53:07,879   INFO  recall_roi_0.7: 0.000000
2021-06-20 06:53:07,879   INFO  recall_rcnn_0.7: 0.017312
2021-06-20 06:53:07,883   INFO  Average predicted number of objects(3769 samples): 324.202
2021-06-20 06:53:57,544   INFO  **********************Start logging**********************
2021-06-20 06:53:57,545   INFO  CUDA_VISIBLE_DEVICES=2,0
2021-06-20 06:53:57,545   INFO  total_batch_size: 8
2021-06-20 06:53:57,545   INFO  cfg_file         cfgs/kitti_models/pointpillar_bayes.yaml
2021-06-20 06:53:57,545   INFO  batch_size       4
2021-06-20 06:53:57,545   INFO  epochs           80
2021-06-20 06:53:57,545   INFO  workers          8
2021-06-20 06:53:57,545   INFO  extra_tag        default
2021-06-20 06:53:57,545   INFO  ckpt             None
2021-06-20 06:53:57,545   INFO  pretrained_model None
2021-06-20 06:53:57,545   INFO  launcher         pytorch
2021-06-20 06:53:57,545   INFO  tcp_port         18888
2021-06-20 06:53:57,545   INFO  sync_bn          False
2021-06-20 06:53:57,546   INFO  fix_random_seed  False
2021-06-20 06:53:57,546   INFO  ckpt_save_interval 1
2021-06-20 06:53:57,546   INFO  local_rank       0
2021-06-20 06:53:57,546   INFO  max_ckpt_save_num 30
2021-06-20 06:53:57,546   INFO  merge_all_iters_to_one_epoch False
2021-06-20 06:53:57,546   INFO  set_cfgs         None
2021-06-20 06:53:57,546   INFO  max_waiting_mins 0
2021-06-20 06:53:57,546   INFO  start_epoch      0
2021-06-20 06:53:57,546   INFO  save_to_file     False
2021-06-20 06:53:57,546   INFO  cfg.ROOT_DIR: /openpcdet
2021-06-20 06:53:57,546   INFO  cfg.LOCAL_RANK: 0
2021-06-20 06:53:57,546   INFO  cfg.CLASS_NAMES: ['Car', 'Pedestrian', 'Cyclist']
2021-06-20 06:53:57,546   INFO  
cfg.DATA_CONFIG = edict()
2021-06-20 06:53:57,546   INFO  cfg.DATA_CONFIG.DATASET: KittiDataset
2021-06-20 06:53:57,546   INFO  cfg.DATA_CONFIG.DATA_PATH: ../data/kitti
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.POINT_CLOUD_RANGE: [0, -39.68, -3, 69.12, 39.68, 1]
2021-06-20 06:53:57,547   INFO  
cfg.DATA_CONFIG.DATA_SPLIT = edict()
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.DATA_SPLIT.train: train
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.DATA_SPLIT.test: val
2021-06-20 06:53:57,547   INFO  
cfg.DATA_CONFIG.INFO_PATH = edict()
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.INFO_PATH.train: ['kitti_infos_train.pkl']
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.INFO_PATH.test: ['kitti_infos_val.pkl']
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.GET_ITEM_LIST: ['points']
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.FOV_POINTS_ONLY: True
2021-06-20 06:53:57,547   INFO  
cfg.DATA_CONFIG.DATA_AUGMENTOR = edict()
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.DISABLE_AUG_LIST: ['placeholder']
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.DATA_AUGMENTOR.AUG_CONFIG_LIST: [{'NAME': 'gt_sampling', 'USE_ROAD_PLANE': True, 'DB_INFO_PATH': ['kitti_dbinfos_train.pkl'], 'PREPARE': {'filter_by_min_points': ['Car:5', 'Pedestrian:5', 'Cyclist:5'], 'filter_by_difficulty': [-1]}, 'SAMPLE_GROUPS': ['Car:15', 'Pedestrian:15', 'Cyclist:15'], 'NUM_POINT_FEATURES': 4, 'DATABASE_WITH_FAKELIDAR': False, 'REMOVE_EXTRA_WIDTH': [0.0, 0.0, 0.0], 'LIMIT_WHOLE_SCENE': False}, {'NAME': 'random_world_flip', 'ALONG_AXIS_LIST': ['x']}, {'NAME': 'random_world_rotation', 'WORLD_ROT_ANGLE': [-0.78539816, 0.78539816]}, {'NAME': 'random_world_scaling', 'WORLD_SCALE_RANGE': [0.95, 1.05]}]
2021-06-20 06:53:57,547   INFO  
cfg.DATA_CONFIG.POINT_FEATURE_ENCODING = edict()
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.encoding_type: absolute_coordinates_encoding
2021-06-20 06:53:57,547   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.used_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:53:57,548   INFO  cfg.DATA_CONFIG.POINT_FEATURE_ENCODING.src_feature_list: ['x', 'y', 'z', 'intensity']
2021-06-20 06:53:57,548   INFO  cfg.DATA_CONFIG.DATA_PROCESSOR: [{'NAME': 'mask_points_and_boxes_outside_range', 'REMOVE_OUTSIDE_BOXES': True}, {'NAME': 'shuffle_points', 'SHUFFLE_ENABLED': {'train': True, 'test': False}}, {'NAME': 'transform_points_to_voxels', 'VOXEL_SIZE': [0.16, 0.16, 4], 'MAX_POINTS_PER_VOXEL': 32, 'MAX_NUMBER_OF_VOXELS': {'train': 16000, 'test': 40000}}]
2021-06-20 06:53:57,548   INFO  cfg.DATA_CONFIG._BASE_CONFIG_: cfgs/dataset_configs/kitti_dataset.yaml
2021-06-20 06:53:57,548   INFO  
cfg.MODEL = edict()
2021-06-20 06:53:57,548   INFO  cfg.MODEL.NAME: PointPillar
2021-06-20 06:53:57,548   INFO  
cfg.MODEL.VFE = edict()
2021-06-20 06:53:57,548   INFO  cfg.MODEL.VFE.NAME: PillarVFE
2021-06-20 06:53:57,548   INFO  cfg.MODEL.VFE.WITH_DISTANCE: False
2021-06-20 06:53:57,548   INFO  cfg.MODEL.VFE.USE_ABSLOTE_XYZ: True
2021-06-20 06:53:57,548   INFO  cfg.MODEL.VFE.USE_NORM: False
2021-06-20 06:53:57,548   INFO  cfg.MODEL.VFE.NUM_FILTERS: [64]
2021-06-20 06:53:57,548   INFO  
cfg.MODEL.MAP_TO_BEV = edict()
2021-06-20 06:53:57,548   INFO  cfg.MODEL.MAP_TO_BEV.NAME: PointPillarScatter
2021-06-20 06:53:57,548   INFO  cfg.MODEL.MAP_TO_BEV.NUM_BEV_FEATURES: 64
2021-06-20 06:53:57,548   INFO  
cfg.MODEL.BACKBONE_2D = edict()
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.NAME: BaseBEVBackbone
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.USE_Optimize: True
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.LAYER_NUMS: [3, 5, 5]
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.LAYER_STRIDES: [2, 2, 2]
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.NUM_FILTERS: [64, 128, 256]
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.UPSAMPLE_STRIDES: [1, 2, 4]
2021-06-20 06:53:57,549   INFO  cfg.MODEL.BACKBONE_2D.NUM_UPSAMPLE_FILTERS: [128, 128, 128]
2021-06-20 06:53:57,549   INFO  
cfg.MODEL.DENSE_HEAD = edict()
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.NAME: AnchorHeadSingle
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.CLASS_AGNOSTIC: False
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.USE_DIRECTION_CLASSIFIER: True
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.DIR_OFFSET: 0.78539
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.DIR_LIMIT_OFFSET: 0.0
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.NUM_DIR_BINS: 2
2021-06-20 06:53:57,549   INFO  cfg.MODEL.DENSE_HEAD.ANCHOR_GENERATOR_CONFIG: [{'class_name': 'Car', 'anchor_sizes': [[3.9, 1.6, 1.56]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-1.78], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.6, 'unmatched_threshold': 0.45}, {'class_name': 'Pedestrian', 'anchor_sizes': [[0.8, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}, {'class_name': 'Cyclist', 'anchor_sizes': [[1.76, 0.6, 1.73]], 'anchor_rotations': [0, 1.57], 'anchor_bottom_heights': [-0.6], 'align_center': False, 'feature_map_stride': 2, 'matched_threshold': 0.5, 'unmatched_threshold': 0.35}]
2021-06-20 06:53:57,550   INFO  
cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG = edict()
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NAME: AxisAlignedTargetAssigner
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.POS_FRACTION: -1.0
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.SAMPLE_SIZE: 512
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.NORM_BY_NUM_EXAMPLES: False
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.MATCH_HEIGHT: False
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.TARGET_ASSIGNER_CONFIG.BOX_CODER: ResidualCoder
2021-06-20 06:53:57,550   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG = edict()
2021-06-20 06:53:57,550   INFO  
cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS = edict()
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.cls_weight: 1.0
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.loc_weight: 2.0
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.dir_weight: 0.2
2021-06-20 06:53:57,550   INFO  cfg.MODEL.DENSE_HEAD.LOSS_CONFIG.LOSS_WEIGHTS.code_weights: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
2021-06-20 06:53:57,551   INFO  
cfg.MODEL.POST_PROCESSING = edict()
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.RECALL_THRESH_LIST: [0.3, 0.5, 0.7]
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.SCORE_THRESH: 0.1
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.OUTPUT_RAW_SCORE: False
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.EVAL_METRIC: kitti
2021-06-20 06:53:57,551   INFO  
cfg.MODEL.POST_PROCESSING.NMS_CONFIG = edict()
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.MULTI_CLASSES_NMS: False
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_TYPE: nms_gpu
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_THRESH: 0.01
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_PRE_MAXSIZE: 4096
2021-06-20 06:53:57,551   INFO  cfg.MODEL.POST_PROCESSING.NMS_CONFIG.NMS_POST_MAXSIZE: 500
2021-06-20 06:53:57,551   INFO  
cfg.OPTIMIZATION = edict()
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.BATCH_SIZE_PER_GPU: 4
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.NUM_EPOCHS: 80
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.OPTIMIZER: adam_onecycle
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.LR: 0.003
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.WEIGHT_DECAY: 0.01
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.MOMENTUM: 0.9
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.MOMS: [0.95, 0.85]
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.PCT_START: 0.4
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.DIV_FACTOR: 10
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.DECAY_STEP_LIST: [35, 45]
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.LR_DECAY: 0.1
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.LR_CLIP: 1e-07
2021-06-20 06:53:57,552   INFO  cfg.OPTIMIZATION.LR_WARMUP: False
2021-06-20 06:53:57,553   INFO  cfg.OPTIMIZATION.WARMUP_EPOCH: 1
2021-06-20 06:53:57,553   INFO  cfg.OPTIMIZATION.GRAD_NORM_CLIP: 10
2021-06-20 06:53:57,553   INFO  cfg.TAG: pointpillar_bayes
2021-06-20 06:53:57,553   INFO  cfg.EXP_GROUP_PATH: kitti_models
2021-06-20 06:53:57,798   INFO  ----------------Bayes Optimization----------------
2021-06-20 06:53:58,020   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:53:58,021   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:53:58,021   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:53:58,064   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:53:58,072   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:53:58,074   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:53:58,085   INFO  Loading KITTI dataset
2021-06-20 06:53:58,253   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:53:58,325   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=True)
          (do): Dropout(p=0.2, inplace=False)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): Dropout2d(p=0.2, inplace=False)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): Dropout2d(p=0.2, inplace=False)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): Dropout2d(p=0.2, inplace=False)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): Dropout2d(p=0.2, inplace=False)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): Dropout2d(p=0.2, inplace=False)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): Dropout2d(p=0.2, inplace=False)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): Dropout2d(p=0.2, inplace=False)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): Dropout2d(p=0.2, inplace=False)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): Dropout2d(p=0.2, inplace=False)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): Dropout2d(p=0.2, inplace=False)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): Dropout2d(p=0.2, inplace=False)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): Dropout2d(p=0.2, inplace=False)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): Dropout2d(p=0.2, inplace=False)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): Dropout2d(p=0.2, inplace=False)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): Dropout2d(p=0.2, inplace=False)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): Dropout2d(p=0.2, inplace=False)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): Dropout2d(p=0.2, inplace=False)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): Dropout2d(p=0.2, inplace=False)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): Dropout2d(p=0.2, inplace=False)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 06:53:58,327   INFO  **********************Start training kitti_models/pointpillar_bayes(default)**********************
2021-06-20 06:57:57,772   INFO  **********************End evaluation**********************
2021-06-20 06:57:58,052   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 06:57:58,053   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 06:57:58,054   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 06:57:58,096   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 06:57:58,103   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 06:57:58,106   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 06:57:58,120   INFO  Loading KITTI dataset
2021-06-20 06:57:58,296   INFO  Total samples for KITTI dataset: 3712
2021-06-20 06:57:58,380   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 06:57:58,383   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:02:02,142   INFO  **********************End training**********************
2021-06-20 07:02:02,151   INFO  Loading KITTI dataset
2021-06-20 07:02:02,452   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:02:02,454   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:02:02,454   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 07:02:02,497   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:02:02,649   INFO  ==> Done (loaded 127/127)
2021-06-20 07:03:07,922   INFO  Generate label finished(sec_per_example: 0.0173 second).
2021-06-20 07:03:07,923   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:03:07,923   INFO  recall_rcnn_0.3: 0.805353
2021-06-20 07:03:07,923   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:03:07,923   INFO  recall_rcnn_0.5: 0.641344
2021-06-20 07:03:07,923   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:03:07,923   INFO  recall_rcnn_0.7: 0.294932
2021-06-20 07:03:07,927   INFO  Average predicted number of objects(3769 samples): 22.769
2021-06-20 07:03:49,836   INFO  ----------------Noise Experiment----------------
2021-06-20 07:03:49,838   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 07:03:49,881   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:03:50,030   INFO  ==> Done (loaded 127/127)
2021-06-20 07:04:53,054   INFO  Generate label finished(sec_per_example: 0.0167 second).
2021-06-20 07:04:53,055   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:04:53,055   INFO  recall_rcnn_0.3: 0.812301
2021-06-20 07:04:53,055   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:04:53,055   INFO  recall_rcnn_0.5: 0.659909
2021-06-20 07:04:53,055   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:04:53,055   INFO  recall_rcnn_0.7: 0.329271
2021-06-20 07:04:53,059   INFO  Average predicted number of objects(3769 samples): 19.825
2021-06-20 07:05:32,467   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.63-0.2-0.38.pth to CPU
2021-06-20 07:05:32,509   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:05:32,664   INFO  ==> Done (loaded 127/127)
2021-06-20 07:06:45,169   INFO  Generate label finished(sec_per_example: 0.0192 second).
2021-06-20 07:06:45,170   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:06:45,170   INFO  recall_rcnn_0.3: 0.463952
2021-06-20 07:06:45,170   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:06:45,170   INFO  recall_rcnn_0.5: 0.167255
2021-06-20 07:06:45,170   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:06:45,170   INFO  recall_rcnn_0.7: 0.019362
2021-06-20 07:06:45,174   INFO  Average predicted number of objects(3769 samples): 154.517
2021-06-20 07:09:09,033   INFO  **********************End evaluation**********************
2021-06-20 07:09:09,337   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 07:09:09,338   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 07:09:09,338   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 07:09:09,387   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 07:09:09,394   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 07:09:09,397   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 07:09:09,412   INFO  Loading KITTI dataset
2021-06-20 07:09:09,793   INFO  Total samples for KITTI dataset: 3712
2021-06-20 07:09:09,877   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 07:09:09,880   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:13:15,661   INFO  **********************End training**********************
2021-06-20 07:13:15,676   INFO  Loading KITTI dataset
2021-06-20 07:13:15,921   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:13:15,923   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:13:15,923   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 07:13:15,964   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:13:16,121   INFO  ==> Done (loaded 127/127)
2021-06-20 07:14:19,398   INFO  Generate label finished(sec_per_example: 0.0168 second).
2021-06-20 07:14:19,399   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:14:19,399   INFO  recall_rcnn_0.3: 0.824431
2021-06-20 07:14:19,399   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:14:19,399   INFO  recall_rcnn_0.5: 0.685364
2021-06-20 07:14:19,399   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:14:19,399   INFO  recall_rcnn_0.7: 0.310364
2021-06-20 07:14:19,403   INFO  Average predicted number of objects(3769 samples): 31.951
2021-06-20 07:15:09,427   INFO  ----------------Noise Experiment----------------
2021-06-20 07:15:09,430   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 07:15:09,472   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:15:09,635   INFO  ==> Done (loaded 127/127)
2021-06-20 07:16:14,342   INFO  Generate label finished(sec_per_example: 0.0171 second).
2021-06-20 07:16:14,342   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:16:14,342   INFO  recall_rcnn_0.3: 0.827620
2021-06-20 07:16:14,342   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:16:14,343   INFO  recall_rcnn_0.5: 0.678417
2021-06-20 07:16:14,343   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:16:14,343   INFO  recall_rcnn_0.7: 0.306093
2021-06-20 07:16:14,347   INFO  Average predicted number of objects(3769 samples): 23.419
2021-06-20 07:16:55,041   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.26-0.31-0.41-0.44.pth to CPU
2021-06-20 07:16:55,086   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:16:55,234   INFO  ==> Done (loaded 127/127)
2021-06-20 07:17:59,534   INFO  Generate label finished(sec_per_example: 0.0170 second).
2021-06-20 07:17:59,535   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:17:59,536   INFO  recall_rcnn_0.3: 0.501595
2021-06-20 07:17:59,536   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:17:59,536   INFO  recall_rcnn_0.5: 0.234852
2021-06-20 07:17:59,536   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:17:59,537   INFO  recall_rcnn_0.7: 0.020330
2021-06-20 07:17:59,542   INFO  Average predicted number of objects(3769 samples): 120.421
2021-06-20 07:20:01,921   INFO  **********************End evaluation**********************
2021-06-20 07:20:02,228   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 07:20:02,229   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 07:20:02,230   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 07:20:02,274   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 07:20:02,281   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 07:20:02,284   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 07:20:02,299   INFO  Loading KITTI dataset
2021-06-20 07:20:02,481   INFO  Total samples for KITTI dataset: 3712
2021-06-20 07:20:02,570   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 07:20:02,573   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:24:07,011   INFO  **********************End training**********************
2021-06-20 07:24:07,019   INFO  Loading KITTI dataset
2021-06-20 07:24:07,299   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:24:07,301   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:24:07,301   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.61-0.32-0.73.pth to CPU
2021-06-20 07:24:07,345   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:24:07,502   INFO  ==> Done (loaded 127/127)
2021-06-20 07:25:12,424   INFO  Generate label finished(sec_per_example: 0.0172 second).
2021-06-20 07:25:12,425   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:25:12,425   INFO  recall_rcnn_0.3: 0.806492
2021-06-20 07:25:12,425   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:25:12,425   INFO  recall_rcnn_0.5: 0.645216
2021-06-20 07:25:12,425   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:25:12,425   INFO  recall_rcnn_0.7: 0.296526
2021-06-20 07:25:12,429   INFO  Average predicted number of objects(3769 samples): 41.311
2021-06-20 07:26:12,792   INFO  ----------------Noise Experiment----------------
2021-06-20 07:26:12,795   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.61-0.32-0.73.pth to CPU
2021-06-20 07:26:12,839   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:26:12,995   INFO  ==> Done (loaded 127/127)
2021-06-20 07:27:15,711   INFO  Generate label finished(sec_per_example: 0.0166 second).
2021-06-20 07:27:15,712   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:27:15,712   INFO  recall_rcnn_0.3: 0.815262
2021-06-20 07:27:15,712   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:27:15,712   INFO  recall_rcnn_0.5: 0.660649
2021-06-20 07:27:15,712   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:27:15,712   INFO  recall_rcnn_0.7: 0.302563
2021-06-20 07:27:15,716   INFO  Average predicted number of objects(3769 samples): 28.692
2021-06-20 07:28:03,756   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.61-0.32-0.73.pth to CPU
2021-06-20 07:28:03,802   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:28:03,960   INFO  ==> Done (loaded 127/127)
2021-06-20 07:29:20,174   INFO  Generate label finished(sec_per_example: 0.0202 second).
2021-06-20 07:29:20,175   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:29:20,175   INFO  recall_rcnn_0.3: 0.694248
2021-06-20 07:29:20,175   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:29:20,175   INFO  recall_rcnn_0.5: 0.479499
2021-06-20 07:29:20,175   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:29:20,175   INFO  recall_rcnn_0.7: 0.084567
2021-06-20 07:29:20,179   INFO  Average predicted number of objects(3769 samples): 102.232
2021-06-20 07:31:07,721   INFO  **********************End evaluation**********************
2021-06-20 07:31:08,551   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 07:31:08,553   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 07:31:08,553   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 07:31:08,602   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 07:31:08,611   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 07:31:08,613   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 07:31:08,630   INFO  Loading KITTI dataset
2021-06-20 07:31:08,813   INFO  Total samples for KITTI dataset: 3712
2021-06-20 07:31:08,897   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 07:31:08,900   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:35:16,360   INFO  **********************End training**********************
2021-06-20 07:35:16,367   INFO  Loading KITTI dataset
2021-06-20 07:35:16,697   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:35:16,699   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:35:16,699   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.42-0.59-0.33-0.54.pth to CPU
2021-06-20 07:35:16,746   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:35:16,943   INFO  ==> Done (loaded 127/127)
2021-06-20 07:36:21,359   INFO  Generate label finished(sec_per_example: 0.0171 second).
2021-06-20 07:36:21,360   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:36:21,360   INFO  recall_rcnn_0.3: 0.785478
2021-06-20 07:36:21,361   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:36:21,361   INFO  recall_rcnn_0.5: 0.620615
2021-06-20 07:36:21,361   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:36:21,361   INFO  recall_rcnn_0.7: 0.285706
2021-06-20 07:36:21,367   INFO  Average predicted number of objects(3769 samples): 18.465
2021-06-20 07:36:59,726   INFO  ----------------Noise Experiment----------------
2021-06-20 07:36:59,728   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.42-0.59-0.33-0.54.pth to CPU
2021-06-20 07:36:59,772   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:36:59,926   INFO  ==> Done (loaded 127/127)
2021-06-20 07:38:04,719   INFO  Generate label finished(sec_per_example: 0.0172 second).
2021-06-20 07:38:04,720   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:38:04,720   INFO  recall_rcnn_0.3: 0.800683
2021-06-20 07:38:04,721   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:38:04,721   INFO  recall_rcnn_0.5: 0.614749
2021-06-20 07:38:04,721   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:38:04,721   INFO  recall_rcnn_0.7: 0.254100
2021-06-20 07:38:04,727   INFO  Average predicted number of objects(3769 samples): 23.448
2021-06-20 07:38:48,442   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.42-0.59-0.33-0.54.pth to CPU
2021-06-20 07:38:48,488   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:38:48,649   INFO  ==> Done (loaded 127/127)
2021-06-20 07:39:54,733   INFO  Generate label finished(sec_per_example: 0.0175 second).
2021-06-20 07:39:54,734   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:39:54,734   INFO  recall_rcnn_0.3: 0.577563
2021-06-20 07:39:54,734   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:39:54,734   INFO  recall_rcnn_0.5: 0.245558
2021-06-20 07:39:54,735   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:39:54,735   INFO  recall_rcnn_0.7: 0.032745
2021-06-20 07:39:54,741   INFO  Average predicted number of objects(3769 samples): 132.595
2021-06-20 07:42:04,293   INFO  **********************End evaluation**********************
2021-06-20 07:42:04,666   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 07:42:04,667   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 07:42:04,668   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 07:42:04,714   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 07:42:04,722   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 07:42:04,725   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 07:42:04,741   INFO  Loading KITTI dataset
2021-06-20 07:42:04,926   INFO  Total samples for KITTI dataset: 3712
2021-06-20 07:42:05,015   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 07:42:05,018   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:46:10,584   INFO  **********************End training**********************
2021-06-20 07:46:10,593   INFO  Loading KITTI dataset
2021-06-20 07:46:10,865   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:46:10,867   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:46:10,867   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.38-0.48-0.55-0.65.pth to CPU
2021-06-20 07:46:10,906   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:46:11,056   INFO  ==> Done (loaded 127/127)
2021-06-20 07:47:16,394   INFO  Generate label finished(sec_per_example: 0.0173 second).
2021-06-20 07:47:16,394   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:47:16,394   INFO  recall_rcnn_0.3: 0.790490
2021-06-20 07:47:16,394   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:47:16,395   INFO  recall_rcnn_0.5: 0.620957
2021-06-20 07:47:16,395   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:47:16,395   INFO  recall_rcnn_0.7: 0.254328
2021-06-20 07:47:16,399   INFO  Average predicted number of objects(3769 samples): 36.191
2021-06-20 07:48:10,660   INFO  ----------------Noise Experiment----------------
2021-06-20 07:48:10,663   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.38-0.48-0.55-0.65.pth to CPU
2021-06-20 07:48:10,714   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:48:10,953   INFO  ==> Done (loaded 127/127)
2021-06-20 07:49:14,522   INFO  Generate label finished(sec_per_example: 0.0168 second).
2021-06-20 07:49:14,522   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:49:14,522   INFO  recall_rcnn_0.3: 0.772494
2021-06-20 07:49:14,522   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:49:14,523   INFO  recall_rcnn_0.5: 0.627278
2021-06-20 07:49:14,523   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:49:14,523   INFO  recall_rcnn_0.7: 0.298178
2021-06-20 07:49:14,528   INFO  Average predicted number of objects(3769 samples): 25.786
2021-06-20 07:49:53,072   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.38-0.48-0.55-0.65.pth to CPU
2021-06-20 07:49:53,114   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:49:53,252   INFO  ==> Done (loaded 127/127)
2021-06-20 07:50:54,292   INFO  Generate label finished(sec_per_example: 0.0162 second).
2021-06-20 07:50:54,293   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:50:54,293   INFO  recall_rcnn_0.3: 0.526879
2021-06-20 07:50:54,293   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:50:54,293   INFO  recall_rcnn_0.5: 0.408485
2021-06-20 07:50:54,293   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:50:54,293   INFO  recall_rcnn_0.7: 0.094476
2021-06-20 07:50:54,296   INFO  Average predicted number of objects(3769 samples): 37.966
2021-06-20 07:51:38,652   INFO  **********************End evaluation**********************
2021-06-20 07:51:39,706   INFO  Database filter by min points Car: 14357 => 13532
2021-06-20 07:51:39,707   INFO  Database filter by min points Pedestrian: 2207 => 2168
2021-06-20 07:51:39,707   INFO  Database filter by min points Cyclist: 734 => 705
2021-06-20 07:51:39,748   INFO  Database filter by difficulty Car: 13532 => 10759
2021-06-20 07:51:39,755   INFO  Database filter by difficulty Pedestrian: 2168 => 2075
2021-06-20 07:51:39,757   INFO  Database filter by difficulty Cyclist: 705 => 581
2021-06-20 07:51:39,770   INFO  Loading KITTI dataset
2021-06-20 07:51:39,923   INFO  Total samples for KITTI dataset: 3712
2021-06-20 07:51:39,985   INFO  DistributedDataParallel(
  (module): PointPillar(
    (vfe): PillarVFE(
      (pfn_layers): ModuleList(
        (0): PFNLayer(
          (linear): Linear(in_features=10, out_features=64, bias=False)
          (norm): BatchNorm1d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
        )
      )
    )
    (backbone_3d): None
    (map_to_bev_module): PointPillarScatter()
    (pfe): None
    (backbone_2d): BaseBEVBackbone(
      (blocks): ModuleList(
        (0): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 64, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(64, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
        )
        (1): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
        (2): Sequential(
          (0): ZeroPad2d(padding=(1, 1, 1, 1), value=0.0)
          (1): Conv2d(128, 256, kernel_size=(3, 3), stride=(2, 2), bias=False)
          (2): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (3): ReLU()
          (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (5): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (6): ReLU()
          (7): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (8): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (9): ReLU()
          (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (11): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (12): ReLU()
          (13): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (14): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (15): ReLU()
          (16): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (17): BatchNorm2d(256, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (18): ReLU()
        )
      )
      (deblocks): ModuleList(
        (0): Sequential(
          (0): ConvTranspose2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (1): Sequential(
          (0): ConvTranspose2d(128, 128, kernel_size=(2, 2), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
        (2): Sequential(
          (0): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(4, 4), bias=False)
          (1): BatchNorm2d(128, eps=0.001, momentum=0.01, affine=True, track_running_stats=True)
          (2): ReLU()
        )
      )
    )
    (dense_head): AnchorHeadSingle(
      (cls_loss_func): SigmoidFocalClassificationLoss()
      (reg_loss_func): WeightedSmoothL1Loss()
      (dir_loss_func): WeightedCrossEntropyLoss()
      (conv_cls): Conv2d(384, 18, kernel_size=(1, 1), stride=(1, 1))
      (conv_box): Conv2d(384, 42, kernel_size=(1, 1), stride=(1, 1))
      (conv_dir_cls): Conv2d(384, 12, kernel_size=(1, 1), stride=(1, 1))
    )
    (point_head): None
    (roi_head): None
  )
)
2021-06-20 07:51:39,988   INFO  **********************Start training kitti_models/pointpillar(default)**********************
2021-06-20 07:55:28,697   INFO  **********************End training**********************
2021-06-20 07:55:28,706   INFO  Loading KITTI dataset
2021-06-20 07:55:28,931   INFO  Total samples for KITTI dataset: 3769
2021-06-20 07:55:28,933   INFO  ----------------Noise-0.1-evaluate----------------
2021-06-20 07:55:28,933   INFO  ==> Loading parameters from checkpoint ./bayes/pointpillar/bayes_model-0.45-0.62-0.25-0.5.pth to CPU
2021-06-20 07:55:28,971   INFO  ==> Checkpoint trained from version: pcdet+0.3.0+26a1612
2021-06-20 07:55:29,118   INFO  ==> Done (loaded 127/127)
2021-06-20 07:56:35,813   INFO  Generate label finished(sec_per_example: 0.0177 second).
2021-06-20 07:56:35,813   INFO  recall_roi_0.3: 0.000000
2021-06-20 07:56:35,813   INFO  recall_rcnn_0.3: 0.791629
2021-06-20 07:56:35,813   INFO  recall_roi_0.5: 0.000000
2021-06-20 07:56:35,814   INFO  recall_rcnn_0.5: 0.646412
2021-06-20 07:56:35,814   INFO  recall_roi_0.7: 0.000000
2021-06-20 07:56:35,814   INFO  recall_rcnn_0.7: 0.307973
2021-06-20 07:56:35,816   INFO  Average predicted number of objects(3769 samples): 500.000
